Sync Explicit (2): linux-6.6.4.arch1-1, linux-headers-6.6.4.arch1-1
warning: linux-6.6.4.arch1-1 is up to date -- reinstalling
warning: linux-headers-6.6.4.arch1-1 is up to date -- reinstalling
resolving dependencies...
looking for conflicting packages...

Packages (2) linux-6.6.4.arch1-1  linux-headers-6.6.4.arch1-1

Total Installed Size:  252.96 MiB
Net Upgrade Size:        0.00 MiB

:: Proceed with installation? [Y/n] 
checking keyring...
checking package integrity...
loading package files...
checking for file conflicts...
checking available disk space...
:: Running pre-transaction hooks...
(1/2) Saving Linux kernel modules...
(2/2) Remove upgraded DKMS modules
==> dkms remove --no-depmod acpi_call/1.2.2 -k 6.6.4-arch1-1
==> dkms remove --no-depmod corefreq/1.96.5 -k 6.6.4-arch1-1
==> dkms remove --no-depmod hid-retrobit/1.0.0 -k 6.6.4-arch1-1
==> dkms remove --no-depmod nvidia/545.29.06 -k 6.6.4-arch1-1
==> dkms remove --no-depmod v4l2loopback-dc/2.0.0 -k 6.6.4-arch1-1
==> dkms remove --no-depmod v4l2loopback/0.12.7 -k 6.6.4-arch1-1
==> dkms remove --no-depmod vmware-workstation/17.5.0_22583795 -k 6.6.4-arch1-1
==> dkms remove --no-depmod zenpower3/69.c176fdb -k 6.6.4-arch1-1
:: Processing package changes...
reinstalling linux...
reinstalling linux-headers...
:: Running post-transaction hooks...
( 1/11) Restoring Linux kernel modules...
++ uname -r
+ KVER=6.6.2-zen1-1-zen
+ test -e /usr/lib/modules/backup/6.6.2-zen1-1-zen
+ rsync -AHXal --ignore-existing /usr/lib/modules/backup/6.6.2-zen1-1-zen /usr/lib/modules/
+ rm -rf /usr/lib/modules/backup
( 2/11) Arming ConditionNeedsUpdate...
( 3/11) Updating module dependencies...
( 4/11) Install DKMS modules
==> dkms install --no-depmod acpi_call/1.2.2 -k 6.6.4-arch1-1
==> dkms install --no-depmod vmware-workstation/17.5.0_22583795 -k 6.6.4-arch1-1
==> dkms install --no-depmod hid-retrobit/1.0.0 -k 6.6.4-arch1-1
==> dkms install --no-depmod v4l2loopback-dc/2.0.0 -k 6.6.4-arch1-1
==> dkms install --no-depmod corefreq/1.96.5 -k 6.6.4-arch1-1
==> dkms install --no-depmod nvidia/545.29.06 -k 6.6.4-arch1-1
==> dkms install --no-depmod v4l2loopback/0.12.7 -k 6.6.4-arch1-1
==> dkms install --no-depmod zenpower3/69.c176fdb -k 6.6.4-arch1-1
==> depmod 6.6.4-arch1-1
( 5/11) Cleaning up...
( 6/11) Cleaning up...
( 7/11) Updating linux initcpios...
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'default'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux.img --microcode /boot/amd-ucode.img
==> Starting build: '6.6.4-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [autodetect]
  -> Running build hook: [modconf]
  -> Running build hook: [kms]
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [consolefont]
  -> Running build hook: [block]
+ map add_module 'ahci?' 'sd_mod?' 'usb_storage?' 'uas?' 'mmc_block?' nvme2 'virtio_scsi?' 'virtio_blk?'
+ local r=0
+ for _ in "${@:2}"
+ add_module 'ahci?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ahci? == *\? ]]
+ ign_errors=1
+ set -- ahci
+ target=ahci
+ target=ahci
+ ((  _addedmodules[ahci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ahci
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ [[ (builtin) == /* ]]
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  ign_errors || _addedmodules[ahci]  ))
+ return 0
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'sd_mod?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sd_mod? == *\? ]]
+ ign_errors=1
+ set -- sd_mod
+ target=sd_mod
+ target=sd_mod
+ ((  _addedmodules[sd_mod] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sd_mod
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ [[ (builtin) == /* ]]
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  ign_errors || _addedmodules[sd_mod]  ))
+ return 0
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'usb_storage?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb_storage? == *\? ]]
+ ign_errors=1
+ set -- usb_storage
+ target=usb_storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 usb_storage
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/usb-storage.ko.zst == /* ]]
+ found=1
+ module=usb-storage.ko.zst
+ module=usb-storage
+ quiet 'adding module: %s (%s)' usb-storage /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/usb-storage.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'uas?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ uas? == *\? ]]
+ ign_errors=1
+ set -- uas
+ target=uas
+ target=uas
+ ((  _addedmodules[uas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 uas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/uas.ko.zst == /* ]]
+ found=1
+ module=uas.ko.zst
+ module=uas
+ quiet 'adding module: %s (%s)' uas /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/uas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'mmc_block?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_block? == *\? ]]
+ ign_errors=1
+ set -- mmc_block
+ target=mmc_block
+ target=mmc_block
+ ((  _addedmodules[mmc_block] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mmc_block
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_block.ko.zst == /* ]]
+ found=1
+ module=mmc_block.ko.zst
+ module=mmc_block
+ quiet 'adding module: %s (%s)' mmc_block /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_block.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mmc_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_core.ko.zst == /* ]]
+ found=1
+ module=mmc_core.ko.zst
+ module=mmc_core
+ quiet 'adding module: %s (%s)' mmc_core /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme2
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme2 == *\? ]]
+ target=nvme2
+ target=nvme2
+ ((  _addedmodules[nvme2] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme2
+ ((  !found  ))
+ ((  ign_errors || _addedmodules[nvme2]  ))
+ error 'module not found: '\''%s'\''' nvme2
+ local 'mesg=module not found: '\''%s'\'''
+ shift
+ printf '==> ERROR: module not found: '\''%s'\''\n' nvme2
==> ERROR: module not found: 'nvme2'
+ return 1
++ ((  0  ))
+ return 1
++ ((  1  ))
++ [[ add_module == add_* ]]
++ ((  ++_builderrors  ))
+ ((  9 > 255 ? r=1 : ++r  ))
+ for _ in "${@:2}"
+ add_module 'virtio_scsi?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_scsi? == *\? ]]
+ ign_errors=1
+ set -- virtio_scsi
+ target=virtio_scsi
+ target=virtio_scsi
+ ((  _addedmodules[virtio_scsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_scsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/virtio_scsi.ko.zst == /* ]]
+ found=1
+ module=virtio_scsi.ko.zst
+ module=virtio_scsi
+ quiet 'adding module: %s (%s)' virtio_scsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/virtio_scsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'virtio_blk?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_blk? == *\? ]]
+ ign_errors=1
+ set -- virtio_blk
+ target=virtio_blk
+ target=virtio_blk
+ ((  _addedmodules[virtio_blk] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_blk
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/virtio_blk.ko.zst == /* ]]
+ found=1
+ module=virtio_blk.ko.zst
+ module=virtio_blk
+ quiet 'adding module: %s (%s)' virtio_blk /lib/modules/6.6.4-arch1-1/kernel/drivers/block/virtio_blk.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules '/(block|ata|scsi|fusion|nvme)/'
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules '/(block|ata|scsi|fusion|nvme)/'
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz '/(block|ata|scsi|fusion|nvme)/'
++ ((  ++count  ))
++ mod=sata_via.ko.zst
++ mod=sata_via
++ printf '%s\n' sata_via
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_atp867x.ko.zst
++ mod=pata_atp867x
++ printf '%s\n' pata_atp867x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_mpiix.ko.zst
++ mod=pata_mpiix
++ printf '%s\n' pata_mpiix
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_pdc202xx_old.ko.zst
++ mod=pata_pdc202xx_old
++ printf '%s\n' pata_pdc202xx_old
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_pcmcia.ko.zst
++ mod=pata_pcmcia
++ printf '%s\n' pata_pcmcia
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_triflex.ko.zst
++ mod=pata_triflex
++ printf '%s\n' pata_triflex
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libahci_platform.ko.zst
++ mod=libahci_platform
++ printf '%s\n' libahci_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sch.ko.zst
++ mod=pata_sch
++ printf '%s\n' pata_sch
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt37x.ko.zst
++ mod=pata_hpt37x
++ printf '%s\n' pata_hpt37x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_svw.ko.zst
++ mod=sata_svw
++ printf '%s\n' sata_svw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_opti.ko.zst
++ mod=pata_opti
++ printf '%s\n' pata_opti
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_cmd64x.ko.zst
++ mod=pata_cmd64x
++ printf '%s\n' pata_cmd64x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ahci_dwc.ko.zst
++ mod=ahci_dwc
++ printf '%s\n' ahci_dwc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_legacy.ko.zst
++ mod=pata_legacy
++ printf '%s\n' pata_legacy
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_it8213.ko.zst
++ mod=pata_it8213
++ printf '%s\n' pata_it8213
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sil.ko.zst
++ mod=sata_sil
++ printf '%s\n' sata_sil
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sis.ko.zst
++ mod=sata_sis
++ printf '%s\n' sata_sis
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_inic162x.ko.zst
++ mod=sata_inic162x
++ printf '%s\n' sata_inic162x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sil24.ko.zst
++ mod=sata_sil24
++ printf '%s\n' sata_sil24
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_artop.ko.zst
++ mod=pata_artop
++ printf '%s\n' pata_artop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_atiixp.ko.zst
++ mod=pata_atiixp
++ printf '%s\n' pata_atiixp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_optidma.ko.zst
++ mod=pata_optidma
++ printf '%s\n' pata_optidma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ninja32.ko.zst
++ mod=pata_ninja32
++ printf '%s\n' pata_ninja32
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_uli.ko.zst
++ mod=sata_uli
++ printf '%s\n' sata_uli
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_piccolo.ko.zst
++ mod=pata_piccolo
++ printf '%s\n' pata_piccolo
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_qstor.ko.zst
++ mod=sata_qstor
++ printf '%s\n' sata_qstor
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ns87415.ko.zst
++ mod=pata_ns87415
++ printf '%s\n' pata_ns87415
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pdc_adma.ko.zst
++ mod=pdc_adma
++ printf '%s\n' pdc_adma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_rdc.ko.zst
++ mod=pata_rdc
++ printf '%s\n' pata_rdc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sl82c105.ko.zst
++ mod=pata_sl82c105
++ printf '%s\n' pata_sl82c105
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_acpi.ko.zst
++ mod=pata_acpi
++ printf '%s\n' pata_acpi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fit3.ko.zst
++ mod=fit3
++ printf '%s\n' fit3
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bpck6.ko.zst
++ mod=bpck6
++ printf '%s\n' bpck6
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aten.ko.zst
++ mod=aten
++ printf '%s\n' aten
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=frpw.ko.zst
++ mod=frpw
++ printf '%s\n' frpw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=on26.ko.zst
++ mod=on26
++ printf '%s\n' on26
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=comm.ko.zst
++ mod=comm
++ printf '%s\n' comm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fit2.ko.zst
++ mod=fit2
++ printf '%s\n' fit2
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=kbic.ko.zst
++ mod=kbic
++ printf '%s\n' kbic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=epia.ko.zst
++ mod=epia
++ printf '%s\n' epia
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_parport.ko.zst
++ mod=pata_parport
++ printf '%s\n' pata_parport
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=epat.ko.zst
++ mod=epat
++ printf '%s\n' epat
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ktti.ko.zst
++ mod=ktti
++ printf '%s\n' ktti
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bpck.ko.zst
++ mod=bpck
++ printf '%s\n' bpck
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=dstr.ko.zst
++ mod=dstr
++ printf '%s\n' dstr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=on20.ko.zst
++ mod=on20
++ printf '%s\n' on20
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=friq.ko.zst
++ mod=friq
++ printf '%s\n' friq
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_it821x.ko.zst
++ mod=pata_it821x
++ printf '%s\n' pata_it821x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt3x2n.ko.zst
++ mod=pata_hpt3x2n
++ printf '%s\n' pata_hpt3x2n
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_efar.ko.zst
++ mod=pata_efar
++ printf '%s\n' pata_efar
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt3x3.ko.zst
++ mod=pata_hpt3x3
++ printf '%s\n' pata_hpt3x3
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_serverworks.ko.zst
++ mod=pata_serverworks
++ printf '%s\n' pata_serverworks
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_pdc2027x.ko.zst
++ mod=pata_pdc2027x
++ printf '%s\n' pata_pdc2027x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_dwc_460ex.ko.zst
++ mod=sata_dwc_460ex
++ printf '%s\n' sata_dwc_460ex
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_radisys.ko.zst
++ mod=pata_radisys
++ printf '%s\n' pata_radisys
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=acard-ahci.ko.zst
++ mod=acard-ahci
++ printf '%s\n' acard_ahci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ns87410.ko.zst
++ mod=pata_ns87410
++ printf '%s\n' pata_ns87410
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_via.ko.zst
++ mod=pata_via
++ printf '%s\n' pata_via
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_cmd640.ko.zst
++ mod=pata_cmd640
++ printf '%s\n' pata_cmd640
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sis.ko.zst
++ mod=pata_sis
++ printf '%s\n' pata_sis
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_nv.ko.zst
++ mod=sata_nv
++ printf '%s\n' sata_nv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_amd.ko.zst
++ mod=pata_amd
++ printf '%s\n' pata_amd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sx4.ko.zst
++ mod=sata_sx4
++ printf '%s\n' sata_sx4
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ahci_platform.ko.zst
++ mod=ahci_platform
++ printf '%s\n' ahci_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ali.ko.zst
++ mod=pata_ali
++ printf '%s\n' pata_ali
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt366.ko.zst
++ mod=pata_hpt366
++ printf '%s\n' pata_hpt366
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_netcell.ko.zst
++ mod=pata_netcell
++ printf '%s\n' pata_netcell
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_rz1000.ko.zst
++ mod=pata_rz1000
++ printf '%s\n' pata_rz1000
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ata_generic.ko.zst
++ mod=ata_generic
++ printf '%s\n' ata_generic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sil680.ko.zst
++ mod=pata_sil680
++ printf '%s\n' pata_sil680
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ata_piix.ko.zst
++ mod=ata_piix
++ printf '%s\n' ata_piix
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_promise.ko.zst
++ mod=sata_promise
++ printf '%s\n' sata_promise
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_mv.ko.zst
++ mod=sata_mv
++ printf '%s\n' sata_mv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_cypress.ko.zst
++ mod=pata_cypress
++ printf '%s\n' pata_cypress
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_oldpiix.ko.zst
++ mod=pata_oldpiix
++ printf '%s\n' pata_oldpiix
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_vsc.ko.zst
++ mod=sata_vsc
++ printf '%s\n' sata_vsc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_marvell.ko.zst
++ mod=pata_marvell
++ printf '%s\n' pata_marvell
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_jmicron.ko.zst
++ mod=pata_jmicron
++ printf '%s\n' pata_jmicron
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=zram.ko.zst
++ mod=zram
++ printf '%s\n' zram
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_blk.ko.zst
++ mod=virtio_blk
++ printf '%s\n' virtio_blk
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=null_blk.ko.zst
++ mod=null_blk
++ printf '%s\n' null_blk
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=floppy.ko.zst
++ mod=floppy
++ printf '%s\n' floppy
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rbd.ko.zst
++ mod=rbd
++ printf '%s\n' rbd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=xen-blkback.ko.zst
++ mod=xen-blkback
++ printf '%s\n' xen_blkback
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=xen-blkfront.ko.zst
++ mod=xen-blkfront
++ printf '%s\n' xen_blkfront
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aoe.ko.zst
++ mod=aoe
++ printf '%s\n' aoe
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rnbd-server.ko.zst
++ mod=rnbd-server
++ printf '%s\n' rnbd_server
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rnbd-client.ko.zst
++ mod=rnbd-client
++ printf '%s\n' rnbd_client
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=drbd.ko.zst
++ mod=drbd
++ printf '%s\n' drbd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ublk_drv.ko.zst
++ mod=ublk_drv
++ printf '%s\n' ublk_drv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=loop.ko.zst
++ mod=loop
++ printf '%s\n' loop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mtip32xx.ko.zst
++ mod=mtip32xx
++ printf '%s\n' mtip32xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=brd.ko.zst
++ mod=brd
++ printf '%s\n' brd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nbd.ko.zst
++ mod=nbd
++ printf '%s\n' nbd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pktcdvd.ko.zst
++ mod=pktcdvd
++ printf '%s\n' pktcdvd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-loop.ko.zst
++ mod=nvme-loop
++ printf '%s\n' nvme_loop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet-tcp.ko.zst
++ mod=nvmet-tcp
++ printf '%s\n' nvmet_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet-fc.ko.zst
++ mod=nvmet-fc
++ printf '%s\n' nvmet_fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-fcloop.ko.zst
++ mod=nvme-fcloop
++ printf '%s\n' nvme_fcloop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet.ko.zst
++ mod=nvmet
++ printf '%s\n' nvmet
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet-rdma.ko.zst
++ mod=nvmet-rdma
++ printf '%s\n' nvmet_rdma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-fabrics.ko.zst
++ mod=nvme-fabrics
++ printf '%s\n' nvme_fabrics
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-rdma.ko.zst
++ mod=nvme-rdma
++ printf '%s\n' nvme_rdma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-tcp.ko.zst
++ mod=nvme-tcp
++ printf '%s\n' nvme_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme.ko.zst
++ mod=nvme
++ printf '%s\n' nvme
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-core.ko.zst
++ mod=nvme-core
++ printf '%s\n' nvme_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-fc.ko.zst
++ mod=nvme-fc
++ printf '%s\n' nvme_fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-common.ko.zst
++ mod=nvme-common
++ printf '%s\n' nvme_common
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptlan.ko.zst
++ mod=mptlan
++ printf '%s\n' mptlan
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptsas.ko.zst
++ mod=mptsas
++ printf '%s\n' mptsas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptscsih.ko.zst
++ mod=mptscsih
++ printf '%s\n' mptscsih
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptctl.ko.zst
++ mod=mptctl
++ printf '%s\n' mptctl
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptfc.ko.zst
++ mod=mptfc
++ printf '%s\n' mptfc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptbase.ko.zst
++ mod=mptbase
++ printf '%s\n' mptbase
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptspi.ko.zst
++ mod=mptspi
++ printf '%s\n' mptspi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=efct.ko.zst
++ mod=efct
++ printf '%s\n' efct
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=BusLogic.ko.zst
++ mod=BusLogic
++ printf '%s\n' BusLogic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_fc.ko.zst
++ mod=scsi_transport_fc
++ printf '%s\n' scsi_transport_fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bnx2fc.ko.zst
++ mod=bnx2fc
++ printf '%s\n' bnx2fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pm80xx.ko.zst
++ mod=pm80xx
++ printf '%s\n' pm80xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wd719x.ko.zst
++ mod=wd719x
++ printf '%s\n' wd719x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aacraid.ko.zst
++ mod=aacraid
++ printf '%s\n' aacraid
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=advansys.ko.zst
++ mod=advansys
++ printf '%s\n' advansys
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=xen-scsifront.ko.zst
++ mod=xen-scsifront
++ printf '%s\n' xen_scsifront
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=dmx3191d.ko.zst
++ mod=dmx3191d
++ printf '%s\n' dmx3191d
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=esp_scsi.ko.zst
++ mod=esp_scsi
++ printf '%s\n' esp_scsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=snic.ko.zst
++ mod=snic
++ printf '%s\n' snic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=hpsa.ko.zst
++ mod=hpsa
++ printf '%s\n' hpsa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mvsas.ko.zst
++ mod=mvsas
++ printf '%s\n' mvsas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid_mm.ko.zst
++ mod=megaraid_mm
++ printf '%s\n' megaraid_mm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid_sas.ko.zst
++ mod=megaraid_sas
++ printf '%s\n' megaraid_sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid_mbox.ko.zst
++ mod=megaraid_mbox
++ printf '%s\n' megaraid_mbox
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cxgb3i.ko.zst
++ mod=cxgb3i
++ printf '%s\n' cxgb3i
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cxgb4i.ko.zst
++ mod=cxgb4i
++ printf '%s\n' cxgb4i
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libcxgbi.ko.zst
++ mod=libcxgbi
++ printf '%s\n' libcxgbi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libiscsi.ko.zst
++ mod=libiscsi
++ printf '%s\n' libiscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_scsi.ko.zst
++ mod=virtio_scsi
++ printf '%s\n' virtio_scsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libsas.ko.zst
++ mod=libsas
++ printf '%s\n' libsas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aic7xxx.ko.zst
++ mod=aic7xxx
++ printf '%s\n' aic7xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aic79xx.ko.zst
++ mod=aic79xx
++ printf '%s\n' aic79xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=iscsi_boot_sysfs.ko.zst
++ mod=iscsi_boot_sysfs
++ printf '%s\n' iscsi_boot_sysfs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=a100u2w.ko.zst
++ mod=a100u2w
++ printf '%s\n' a100u2w
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mpt3sas.ko.zst
++ mod=mpt3sas
++ printf '%s\n' mpt3sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_sas.ko.zst
++ mod=scsi_transport_sas
++ printf '%s\n' scsi_transport_sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=esas2r.ko.zst
++ mod=esas2r
++ printf '%s\n' esas2r
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=raid_class.ko.zst
++ mod=raid_class
++ printf '%s\n' raid_class
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libfcoe.ko.zst
++ mod=libfcoe
++ printf '%s\n' libfcoe
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fcoe.ko.zst
++ mod=fcoe
++ printf '%s\n' fcoe
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fdomain_pci.ko.zst
++ mod=fdomain_pci
++ printf '%s\n' fdomain_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sg.ko.zst
++ mod=sg
++ printf '%s\n' sg
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fnic.ko.zst
++ mod=fnic
++ printf '%s\n' fnic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=imm.ko.zst
++ mod=imm
++ printf '%s\n' imm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=hptiop.ko.zst
++ mod=hptiop
++ printf '%s\n' hptiop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=csiostor.ko.zst
++ mod=csiostor
++ printf '%s\n' csiostor
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=arcmsr.ko.zst
++ mod=arcmsr
++ printf '%s\n' arcmsr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=iscsi_tcp.ko.zst
++ mod=iscsi_tcp
++ printf '%s\n' iscsi_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qla2xxx.ko.zst
++ mod=qla2xxx
++ printf '%s\n' qla2xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tcm_qla2xxx.ko.zst
++ mod=tcm_qla2xxx
++ printf '%s\n' tcm_qla2xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ch.ko.zst
++ mod=ch
++ printf '%s\n' ch
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sym53c500_cs.ko.zst
++ mod=sym53c500_cs
++ printf '%s\n' sym53c500_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fdomain_cs.ko.zst
++ mod=fdomain_cs
++ printf '%s\n' fdomain_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qlogic_cs.ko.zst
++ mod=qlogic_cs
++ printf '%s\n' qlogic_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aha152x_cs.ko.zst
++ mod=aha152x_cs
++ printf '%s\n' aha152x_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mpi3mr.ko.zst
++ mod=mpi3mr
++ printf '%s\n' mpi3mr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mvumi.ko.zst
++ mod=mvumi
++ printf '%s\n' mvumi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qedf.ko.zst
++ mod=qedf
++ printf '%s\n' qedf
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=be2iscsi.ko.zst
++ mod=be2iscsi
++ printf '%s\n' be2iscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=3w-sas.ko.zst
++ mod=3w-sas
++ printf '%s\n' 3w_sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sr_mod.ko.zst
++ mod=sr_mod
++ printf '%s\n' sr_mod
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=3w-xxxx.ko.zst
++ mod=3w-xxxx
++ printf '%s\n' 3w_xxxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ipr.ko.zst
++ mod=ipr
++ printf '%s\n' ipr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid.ko.zst
++ mod=megaraid
++ printf '%s\n' megaraid
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_iscsi.ko.zst
++ mod=scsi_transport_iscsi
++ printf '%s\n' scsi_transport_iscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=myrs.ko.zst
++ mod=myrs
++ printf '%s\n' myrs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libiscsi_tcp.ko.zst
++ mod=libiscsi_tcp
++ printf '%s\n' libiscsi_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=initio.ko.zst
++ mod=initio
++ printf '%s\n' initio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_hp_sw.ko.zst
++ mod=scsi_dh_hp_sw
++ printf '%s\n' scsi_dh_hp_sw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_alua.ko.zst
++ mod=scsi_dh_alua
++ printf '%s\n' scsi_dh_alua
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_emc.ko.zst
++ mod=scsi_dh_emc
++ printf '%s\n' scsi_dh_emc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_rdac.ko.zst
++ mod=scsi_dh_rdac
++ printf '%s\n' scsi_dh_rdac
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=dc395x.ko.zst
++ mod=dc395x
++ printf '%s\n' dc395x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ses.ko.zst
++ mod=ses
++ printf '%s\n' ses
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=myrb.ko.zst
++ mod=myrb
++ printf '%s\n' myrb
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=stex.ko.zst
++ mod=stex
++ printf '%s\n' stex
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qla1280.ko.zst
++ mod=qla1280
++ printf '%s\n' qla1280
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_debug.ko.zst
++ mod=scsi_debug
++ printf '%s\n' scsi_debug
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=am53c974.ko.zst
++ mod=am53c974
++ printf '%s\n' am53c974
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bnx2i.ko.zst
++ mod=bnx2i
++ printf '%s\n' bnx2i
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_spi.ko.zst
++ mod=scsi_transport_spi
++ printf '%s\n' scsi_transport_spi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qla4xxx.ko.zst
++ mod=qla4xxx
++ printf '%s\n' qla4xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=hv_storvsc.ko.zst
++ mod=hv_storvsc
++ printf '%s\n' hv_storvsc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ips.ko.zst
++ mod=ips
++ printf '%s\n' ips
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fdomain.ko.zst
++ mod=fdomain
++ printf '%s\n' fdomain
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=3w-9xxx.ko.zst
++ mod=3w-9xxx
++ printf '%s\n' 3w_9xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sym53c8xx.ko.zst
++ mod=sym53c8xx
++ printf '%s\n' sym53c8xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=smartpqi.ko.zst
++ mod=smartpqi
++ printf '%s\n' smartpqi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qlogicfas408.ko.zst
++ mod=qlogicfas408
++ printf '%s\n' qlogicfas408
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_srp.ko.zst
++ mod=scsi_transport_srp
++ printf '%s\n' scsi_transport_srp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=st.ko.zst
++ mod=st
++ printf '%s\n' st
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pmcraid.ko.zst
++ mod=pmcraid
++ printf '%s\n' pmcraid
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aic94xx.ko.zst
++ mod=aic94xx
++ printf '%s\n' aic94xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=isci.ko.zst
++ mod=isci
++ printf '%s\n' isci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lpfc.ko.zst
++ mod=lpfc
++ printf '%s\n' lpfc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmw_pvscsi.ko.zst
++ mod=vmw_pvscsi
++ printf '%s\n' vmw_pvscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qedi.ko.zst
++ mod=qedi
++ printf '%s\n' qedi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ppa.ko.zst
++ mod=ppa
++ printf '%s\n' ppa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=atp870u.ko.zst
++ mod=atp870u
++ printf '%s\n' atp870u
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libfc.ko.zst
++ mod=libfc
++ printf '%s\n' libfc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bfa.ko.zst
++ mod=bfa
++ printf '%s\n' bfa
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module nvme
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme == *\? ]]
+ target=nvme
+ target=nvme
+ ((  _addedmodules[nvme] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme.ko.zst == /* ]]
+ found=1
+ module=nvme.ko.zst
+ module=nvme
+ quiet 'adding module: %s (%s)' nvme /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-core
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-core.ko.zst == /* ]]
+ found=1
+ module=nvme-core.ko.zst
+ module=nvme-core
+ quiet 'adding module: %s (%s)' nvme-core /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-common
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-common
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-common == *\? ]]
+ target=nvme-common
+ target=nvme_common
+ ((  _addedmodules[nvme_common] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_common
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/common/nvme-common.ko.zst == /* ]]
+ found=1
+ module=nvme-common.ko.zst
+ module=nvme-common
+ quiet 'adding module: %s (%s)' nvme-common /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/common/nvme-common.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules -f '(_cs|sl811_hcd|isp116x_hcd)' /usb/host
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules -f '(_cs|sl811_hcd|isp116x_hcd)' /usb/host
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ [[ f = \f ]]
++ modfilter+=("$OPTARG")
++ getopts :f: flag
++ shift 2
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /usb/host
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xhci-plat-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xhci-plat-hcd.ko.zst
++ mod=xhci-plat-hcd
++ printf '%s\n' xhci_plat_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ehci-platform.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ehci-platform.ko.zst
++ mod=ehci-platform
++ printf '%s\n' ehci_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/sl811_cs.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ continue 2
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ehci-fsl.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ehci-fsl.ko.zst
++ mod=ehci-fsl
++ printf '%s\n' ehci_fsl
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/fsl-mph-dr-of.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=fsl-mph-dr-of.ko.zst
++ mod=fsl-mph-dr-of
++ printf '%s\n' fsl_mph_dr_of
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/bcma-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=bcma-hcd.ko.zst
++ mod=bcma-hcd
++ printf '%s\n' bcma_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ssb-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ssb-hcd.ko.zst
++ mod=ssb-hcd
++ printf '%s\n' ssb_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/max3421-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=max3421-hcd.ko.zst
++ mod=max3421-hcd
++ printf '%s\n' max3421_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/isp116x-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=isp116x-hcd.ko.zst
++ mod=isp116x-hcd
++ printf '%s\n' isp116x_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/oxu210hp-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=oxu210hp-hcd.ko.zst
++ mod=oxu210hp-hcd
++ printf '%s\n' oxu210hp_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xhci-pci-renesas.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xhci-pci-renesas.ko.zst
++ mod=xhci-pci-renesas
++ printf '%s\n' xhci_pci_renesas
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xhci-pci.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xhci-pci.ko.zst
++ mod=xhci-pci
++ printf '%s\n' xhci_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/sl811-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=sl811-hcd.ko.zst
++ mod=sl811-hcd
++ printf '%s\n' sl811_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/r8a66597-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=r8a66597-hcd.ko.zst
++ mod=r8a66597-hcd
++ printf '%s\n' r8a66597_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xen-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xen-hcd.ko.zst
++ mod=xen-hcd
++ printf '%s\n' xen_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ohci-platform.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ohci-platform.ko.zst
++ mod=ohci-platform
++ printf '%s\n' ohci_platform
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module xhci_pci
+ local r=0
+ for _ in "${@:2}"
+ add_module xhci_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xhci_pci == *\? ]]
+ target=xhci_pci
+ target=xhci_pci
+ ((  _addedmodules[xhci_pci] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/usb/storage/
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules /drivers/usb/storage/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/usb/storage/
++ ((  ++count  ))
++ mod=ums-sddr55.ko.zst
++ mod=ums-sddr55
++ printf '%s\n' ums_sddr55
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-onetouch.ko.zst
++ mod=ums-onetouch
++ printf '%s\n' ums_onetouch
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-datafab.ko.zst
++ mod=ums-datafab
++ printf '%s\n' ums_datafab
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-jumpshot.ko.zst
++ mod=ums-jumpshot
++ printf '%s\n' ums_jumpshot
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-isd200.ko.zst
++ mod=ums-isd200
++ printf '%s\n' ums_isd200
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=usb-storage.ko.zst
++ mod=usb-storage
++ printf '%s\n' usb_storage
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-alauda.ko.zst
++ mod=ums-alauda
++ printf '%s\n' ums_alauda
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-eneub6250.ko.zst
++ mod=ums-eneub6250
++ printf '%s\n' ums_eneub6250
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-freecom.ko.zst
++ mod=ums-freecom
++ printf '%s\n' ums_freecom
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=uas.ko.zst
++ mod=uas
++ printf '%s\n' uas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-sddr09.ko.zst
++ mod=ums-sddr09
++ printf '%s\n' ums_sddr09
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-realtek.ko.zst
++ mod=ums-realtek
++ printf '%s\n' ums_realtek
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-usbat.ko.zst
++ mod=ums-usbat
++ printf '%s\n' ums_usbat
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-karma.ko.zst
++ mod=ums-karma
++ printf '%s\n' ums_karma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-cypress.ko.zst
++ mod=ums-cypress
++ printf '%s\n' ums_cypress
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module usb_storage uas
+ local r=0
+ for _ in "${@:2}"
+ add_module usb_storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb_storage == *\? ]]
+ target=usb_storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module uas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ uas == *\? ]]
+ target=uas
+ target=uas
+ ((  _addedmodules[uas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/firewire/
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules /drivers/firewire/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/firewire/
++ ((  ++count  ))
++ mod=firewire-core.ko.zst
++ mod=firewire-core
++ printf '%s\n' firewire_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=firewire-sbp2.ko.zst
++ mod=firewire-sbp2
++ printf '%s\n' firewire_sbp2
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=firewire-ohci.ko.zst
++ mod=firewire-ohci
++ printf '%s\n' firewire_ohci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nosy.ko.zst
++ mod=nosy
++ printf '%s\n' nosy
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=firewire-net.ko.zst
++ mod=firewire-net
++ printf '%s\n' firewire_net
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules '/(drivers/mmc|tifm_)'
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules '/(drivers/mmc|tifm_)'
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz '/(drivers/mmc|tifm_)'
++ ((  ++count  ))
++ mod=tifm_ms.ko.zst
++ mod=tifm_ms
++ printf '%s\n' tifm_ms
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci_f_sdh30.ko.zst
++ mod=sdhci_f_sdh30
++ printf '%s\n' sdhci_f_sdh30
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtsx_pci_sdmmc.ko.zst
++ mod=rtsx_pci_sdmmc
++ printf '%s\n' rtsx_pci_sdmmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vub300.ko.zst
++ mod=vub300
++ printf '%s\n' vub300
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=toshsd.ko.zst
++ mod=toshsd
++ printf '%s\n' toshsd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wbsd.ko.zst
++ mod=wbsd
++ printf '%s\n' wbsd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=usdhi6rol0.ko.zst
++ mod=usdhi6rol0
++ printf '%s\n' usdhi6rol0
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_hsq.ko.zst
++ mod=mmc_hsq
++ printf '%s\n' mmc_hsq
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=of_mmc_spi.ko.zst
++ mod=of_mmc_spi
++ printf '%s\n' of_mmc_spi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cqhci.ko.zst
++ mod=cqhci
++ printf '%s\n' cqhci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdricoh_cs.ko.zst
++ mod=sdricoh_cs
++ printf '%s\n' sdricoh_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_spi.ko.zst
++ mod=mmc_spi
++ printf '%s\n' mmc_spi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-xenon-driver.ko.zst
++ mod=sdhci-xenon-driver
++ printf '%s\n' sdhci_xenon_driver
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci.ko.zst
++ mod=sdhci
++ printf '%s\n' sdhci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tifm_sd.ko.zst
++ mod=tifm_sd
++ printf '%s\n' tifm_sd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-pltfm.ko.zst
++ mod=sdhci-pltfm
++ printf '%s\n' sdhci_pltfm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=alcor.ko.zst
++ mod=alcor
++ printf '%s\n' alcor
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=via-sdmmc.ko.zst
++ mod=via-sdmmc
++ printf '%s\n' via_sdmmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-pci.ko.zst
++ mod=sdhci-pci
++ printf '%s\n' sdhci_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mtk-sd.ko.zst
++ mod=mtk-sd
++ printf '%s\n' mtk_sd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtsx_usb_sdmmc.ko.zst
++ mod=rtsx_usb_sdmmc
++ printf '%s\n' rtsx_usb_sdmmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ushc.ko.zst
++ mod=ushc
++ printf '%s\n' ushc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-acpi.ko.zst
++ mod=sdhci-acpi
++ printf '%s\n' sdhci_acpi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cb710-mmc.ko.zst
++ mod=cb710-mmc
++ printf '%s\n' cb710_mmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_test.ko.zst
++ mod=mmc_test
++ printf '%s\n' mmc_test
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdio_uart.ko.zst
++ mod=sdio_uart
++ printf '%s\n' sdio_uart
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_block.ko.zst
++ mod=mmc_block
++ printf '%s\n' mmc_block
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_core.ko.zst
++ mod=mmc_core
++ printf '%s\n' mmc_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tifm_core.ko.zst
++ mod=tifm_core
++ printf '%s\n' tifm_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tifm_7xx1.ko.zst
++ mod=tifm_7xx1
++ printf '%s\n' tifm_7xx1
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules /drivers/spi/
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules /drivers/spi/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/spi/
++ ((  ++count  ))
++ mod=spi-butterfly.ko.zst
++ mod=spi-butterfly
++ printf '%s\n' spi_butterfly
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-lm70llp.ko.zst
++ mod=spi-lm70llp
++ printf '%s\n' spi_lm70llp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-tle62x0.ko.zst
++ mod=spi-tle62x0
++ printf '%s\n' spi_tle62x0
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-mxic.ko.zst
++ mod=spi-mxic
++ printf '%s\n' spi_mxic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-sc18is602.ko.zst
++ mod=spi-sc18is602
++ printf '%s\n' spi_sc18is602
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-intel.ko.zst
++ mod=spi-intel
++ printf '%s\n' spi_intel
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-microchip-core.ko.zst
++ mod=spi-microchip-core
++ printf '%s\n' spi_microchip_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-intel-platform.ko.zst
++ mod=spi-intel-platform
++ printf '%s\n' spi_intel_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dw-mmio.ko.zst
++ mod=spi-dw-mmio
++ printf '%s\n' spi_dw_mmio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-cs42l43.ko.zst
++ mod=spi-cs42l43
++ printf '%s\n' spi_cs42l43
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dw.ko.zst
++ mod=spi-dw
++ printf '%s\n' spi_dw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-axi-spi-engine.ko.zst
++ mod=spi-axi-spi-engine
++ printf '%s\n' spi_axi_spi_engine
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-altera-core.ko.zst
++ mod=spi-altera-core
++ printf '%s\n' spi_altera_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-sifive.ko.zst
++ mod=spi-sifive
++ printf '%s\n' spi_sifive
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-bitbang.ko.zst
++ mod=spi-bitbang
++ printf '%s\n' spi_bitbang
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-zynqmp-gqspi.ko.zst
++ mod=spi-zynqmp-gqspi
++ printf '%s\n' spi_zynqmp_gqspi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-pxa2xx-pci.ko.zst
++ mod=spi-pxa2xx-pci
++ printf '%s\n' spi_pxa2xx_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-amd.ko.zst
++ mod=spi-amd
++ printf '%s\n' spi_amd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-gpio.ko.zst
++ mod=spi-gpio
++ printf '%s\n' spi_gpio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-slave-time.ko.zst
++ mod=spi-slave-time
++ printf '%s\n' spi_slave_time
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-slave-system-control.ko.zst
++ mod=spi-slave-system-control
++ printf '%s\n' spi_slave_system_control
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spidev.ko.zst
++ mod=spidev
++ printf '%s\n' spidev
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-pxa2xx-platform.ko.zst
++ mod=spi-pxa2xx-platform
++ printf '%s\n' spi_pxa2xx_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-oc-tiny.ko.zst
++ mod=spi-oc-tiny
++ printf '%s\n' spi_oc_tiny
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-altera-dfl.ko.zst
++ mod=spi-altera-dfl
++ printf '%s\n' spi_altera_dfl
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-microchip-core-qspi.ko.zst
++ mod=spi-microchip-core-qspi
++ printf '%s\n' spi_microchip_core_qspi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dln2.ko.zst
++ mod=spi-dln2
++ printf '%s\n' spi_dln2
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-pci1xxxx.ko.zst
++ mod=spi-pci1xxxx
++ printf '%s\n' spi_pci1xxxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-loopback-test.ko.zst
++ mod=spi-loopback-test
++ printf '%s\n' spi_loopback_test
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-altera-platform.ko.zst
++ mod=spi-altera-platform
++ printf '%s\n' spi_altera_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dw-pci.ko.zst
++ mod=spi-dw-pci
++ printf '%s\n' spi_dw_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-intel-pci.ko.zst
++ mod=spi-intel-pci
++ printf '%s\n' spi_intel_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-mux.ko.zst
++ mod=spi-mux
++ printf '%s\n' spi_mux
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-xilinx.ko.zst
++ mod=spi-xilinx
++ printf '%s\n' spi_xilinx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-xcomm.ko.zst
++ mod=spi-xcomm
++ printf '%s\n' spi_xcomm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-cadence.ko.zst
++ mod=spi-cadence
++ printf '%s\n' spi_cadence
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules /drivers/regulator/
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules /drivers/regulator/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
++ grep -xFf /dev/fd/63
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ grep -EZz /drivers/regulator/
++ ((  ++count  ))
++ mod=da9211-regulator.ko.zst
++ mod=da9211-regulator
++ printf '%s\n' da9211_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=palmas-regulator.ko.zst
++ mod=palmas-regulator
++ printf '%s\n' palmas_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=act8865-regulator.ko.zst
++ mod=act8865-regulator
++ printf '%s\n' act8865_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp3971.ko.zst
++ mod=lp3971
++ printf '%s\n' lp3971
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65912-regulator.ko.zst
++ mod=tps65912-regulator
++ printf '%s\n' tps65912_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=twl-regulator.ko.zst
++ mod=twl-regulator
++ printf '%s\n' twl_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=axp20x-regulator.ko.zst
++ mod=axp20x-regulator
++ printf '%s\n' axp20x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6370-regulator.ko.zst
++ mod=mt6370-regulator
++ printf '%s\n' mt6370_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pcf50633-regulator.ko.zst
++ mod=pcf50633-regulator
++ printf '%s\n' pcf50633_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pv88090-regulator.ko.zst
++ mod=pv88090-regulator
++ printf '%s\n' pv88090_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8998.ko.zst
++ mod=max8998
++ printf '%s\n' max8998
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lm363x-regulator.ko.zst
++ mod=lm363x-regulator
++ printf '%s\n' lm363x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6105x-regulator.ko.zst
++ mod=tps6105x-regulator
++ printf '%s\n' tps6105x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77693-regulator.ko.zst
++ mod=max77693-regulator
++ printf '%s\n' max77693_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65086-regulator.ko.zst
++ mod=tps65086-regulator
++ printf '%s\n' tps65086_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=atc260x-regulator.ko.zst
++ mod=atc260x-regulator
++ printf '%s\n' atc260x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=twl6030-regulator.ko.zst
++ mod=twl6030-regulator
++ printf '%s\n' twl6030_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt4801-regulator.ko.zst
++ mod=rt4801-regulator
++ printf '%s\n' rt4801_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=raa215300.ko.zst
++ mod=raa215300
++ printf '%s\n' raa215300
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtual.ko.zst
++ mod=virtual
++ printf '%s\n' virtual
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da903x-regulator.ko.zst
++ mod=da903x-regulator
++ printf '%s\n' da903x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm8350-regulator.ko.zst
++ mod=wm8350-regulator
++ printf '%s\n' wm8350_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6357-regulator.ko.zst
++ mod=mt6357-regulator
++ printf '%s\n' mt6357_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77857-regulator.ko.zst
++ mod=max77857-regulator
++ printf '%s\n' max77857_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rc5t583-regulator.ko.zst
++ mod=rc5t583-regulator
++ printf '%s\n' rc5t583_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=88pm800-regulator.ko.zst
++ mod=88pm800-regulator
++ printf '%s\n' 88pm800_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pwm-regulator.ko.zst
++ mod=pwm-regulator
++ printf '%s\n' pwm_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps51632-regulator.ko.zst
++ mod=tps51632-regulator
++ printf '%s\n' tps51632_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mc13783-regulator.ko.zst
++ mod=mc13783-regulator
++ printf '%s\n' mc13783_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max1586.ko.zst
++ mod=max1586
++ printf '%s\n' max1586
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8997-regulator.ko.zst
++ mod=max8997-regulator
++ printf '%s\n' max8997_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6507x-regulator.ko.zst
++ mod=tps6507x-regulator
++ printf '%s\n' tps6507x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mc13xxx-regulator-core.ko.zst
++ mod=mc13xxx-regulator-core
++ printf '%s\n' mc13xxx_regulator_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6586x-regulator.ko.zst
++ mod=tps6586x-regulator
++ printf '%s\n' tps6586x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=88pg86x.ko.zst
++ mod=88pg86x
++ printf '%s\n' 88pg86x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=as3711-regulator.ko.zst
++ mod=as3711-regulator
++ printf '%s\n' as3711_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sy7636a-regulator.ko.zst
++ mod=sy7636a-regulator
++ printf '%s\n' sy7636a_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ltc3676.ko.zst
++ mod=ltc3676
++ printf '%s\n' ltc3676
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max20411-regulator.ko.zst
++ mod=max20411-regulator
++ printf '%s\n' max20411_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8649.ko.zst
++ mod=max8649
++ printf '%s\n' max8649
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm831x-isink.ko.zst
++ mod=wm831x-isink
++ printf '%s\n' wm831x_isink
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6331-regulator.ko.zst
++ mod=mt6331-regulator
++ printf '%s\n' mt6331_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aw37503-regulator.ko.zst
++ mod=aw37503-regulator
++ printf '%s\n' aw37503_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pv88080-regulator.ko.zst
++ mod=pv88080-regulator
++ printf '%s\n' pv88080_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6311-regulator.ko.zst
++ mod=mt6311-regulator
++ printf '%s\n' mt6311_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9210-regulator.ko.zst
++ mod=da9210-regulator
++ printf '%s\n' da9210_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=88pm8607.ko.zst
++ mod=88pm8607
++ printf '%s\n' 88pm8607
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5120-regulator.ko.zst
++ mod=rt5120-regulator
++ printf '%s\n' rt5120_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65090-regulator.ko.zst
++ mod=tps65090-regulator
++ printf '%s\n' tps65090_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65132-regulator.ko.zst
++ mod=tps65132-regulator
++ printf '%s\n' tps65132_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max20086-regulator.ko.zst
++ mod=max20086-regulator
++ printf '%s\n' max20086_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt6245-regulator.ko.zst
++ mod=rt6245-regulator
++ printf '%s\n' rt6245_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pca9450-regulator.ko.zst
++ mod=pca9450-regulator
++ printf '%s\n' pca9450_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65023-regulator.ko.zst
++ mod=tps65023-regulator
++ printf '%s\n' tps65023_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8925-regulator.ko.zst
++ mod=max8925-regulator
++ printf '%s\n' max8925_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max14577-regulator.ko.zst
++ mod=max14577-regulator
++ printf '%s\n' max14577_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp3972.ko.zst
++ mod=lp3972
++ printf '%s\n' lp3972
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm831x-dcdc.ko.zst
++ mod=wm831x-dcdc
++ printf '%s\n' wm831x_dcdc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps68470-regulator.ko.zst
++ mod=tps68470-regulator
++ printf '%s\n' tps68470_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fan53555.ko.zst
++ mod=fan53555
++ printf '%s\n' fan53555
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5190a-regulator.ko.zst
++ mod=rt5190a-regulator
++ printf '%s\n' rt5190a_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pcap-regulator.ko.zst
++ mod=pcap-regulator
++ printf '%s\n' pcap_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtmv20-regulator.ko.zst
++ mod=rtmv20-regulator
++ printf '%s\n' rtmv20_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77826-regulator.ko.zst
++ mod=max77826-regulator
++ printf '%s\n' max77826_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5033-regulator.ko.zst
++ mod=rt5033-regulator
++ printf '%s\n' rt5033_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt6190-regulator.ko.zst
++ mod=rt6190-regulator
++ printf '%s\n' rt6190_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt6160-regulator.ko.zst
++ mod=rt6160-regulator
++ printf '%s\n' rt6160_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt4803.ko.zst
++ mod=rt4803
++ printf '%s\n' rt4803
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp8788-ldo.ko.zst
++ mod=lp8788-ldo
++ printf '%s\n' lp8788_ldo
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=slg51000-regulator.ko.zst
++ mod=slg51000-regulator
++ printf '%s\n' slg51000_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp8755.ko.zst
++ mod=lp8755
++ printf '%s\n' lp8755
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6332-regulator.ko.zst
++ mod=mt6332-regulator
++ printf '%s\n' mt6332_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps62360-regulator.ko.zst
++ mod=tps62360-regulator
++ printf '%s\n' tps62360_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6524x-regulator.ko.zst
++ mod=tps6524x-regulator
++ printf '%s\n' tps6524x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=arizona-ldo1.ko.zst
++ mod=arizona-ldo1
++ printf '%s\n' arizona_ldo1
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=isl6271a-regulator.ko.zst
++ mod=isl6271a-regulator
++ printf '%s\n' isl6271a_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm831x-ldo.ko.zst
++ mod=wm831x-ldo
++ printf '%s\n' wm831x_ldo
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6360-regulator.ko.zst
++ mod=mt6360-regulator
++ printf '%s\n' mt6360_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=userspace-consumer.ko.zst
++ mod=userspace-consumer
++ printf '%s\n' userspace_consumer
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aat2870-regulator.ko.zst
++ mod=aat2870-regulator
++ printf '%s\n' aat2870_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5759-regulator.ko.zst
++ mod=rt5759-regulator
++ printf '%s\n' rt5759_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtq6752-regulator.ko.zst
++ mod=rtq6752-regulator
++ printf '%s\n' rtq6752_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9055-regulator.ko.zst
++ mod=da9055-regulator
++ printf '%s\n' da9055_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6358-regulator.ko.zst
++ mod=mt6358-regulator
++ printf '%s\n' mt6358_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=gpio-regulator.ko.zst
++ mod=gpio-regulator
++ printf '%s\n' gpio_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fixed.ko.zst
++ mod=fixed
++ printf '%s\n' fixed
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtq2134-regulator.ko.zst
++ mod=rtq2134-regulator
++ printf '%s\n' rtq2134_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mp8859.ko.zst
++ mod=mp8859
++ printf '%s\n' mp8859
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8893.ko.zst
++ mod=max8893
++ printf '%s\n' max8893
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sky81452-regulator.ko.zst
++ mod=sky81452-regulator
++ printf '%s\n' sky81452_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=isl9305.ko.zst
++ mod=isl9305
++ printf '%s\n' isl9305
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt4831-regulator.ko.zst
++ mod=rt4831-regulator
++ printf '%s\n' rt4831_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ltc3589.ko.zst
++ mod=ltc3589
++ printf '%s\n' ltc3589
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9052-regulator.ko.zst
++ mod=da9052-regulator
++ printf '%s\n' da9052_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77541-regulator.ko.zst
++ mod=max77541-regulator
++ printf '%s\n' max77541_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8660.ko.zst
++ mod=max8660
++ printf '%s\n' max8660
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8952.ko.zst
++ mod=max8952
++ printf '%s\n' max8952
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp8788-buck.ko.zst
++ mod=lp8788-buck
++ printf '%s\n' lp8788_buck
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bcm590xx-regulator.ko.zst
++ mod=bcm590xx-regulator
++ printf '%s\n' bcm590xx_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9062-regulator.ko.zst
++ mod=da9062-regulator
++ printf '%s\n' da9062_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp872x.ko.zst
++ mod=lp872x
++ printf '%s\n' lp872x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ad5398.ko.zst
++ mod=ad5398
++ printf '%s\n' ad5398
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pv88060-regulator.ko.zst
++ mod=pv88060-regulator
++ printf '%s\n' pv88060_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65910-regulator.ko.zst
++ mod=tps65910-regulator
++ printf '%s\n' tps65910_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6359-regulator.ko.zst
++ mod=mt6359-regulator
++ printf '%s\n' mt6359_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm8400-regulator.ko.zst
++ mod=wm8400-regulator
++ printf '%s\n' wm8400_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=arizona-micsupp.ko.zst
++ mod=arizona-micsupp
++ printf '%s\n' arizona_micsupp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mc13892-regulator.ko.zst
++ mod=mc13892-regulator
++ printf '%s\n' mc13892_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm8994-regulator.ko.zst
++ mod=wm8994-regulator
++ printf '%s\n' wm8994_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5739.ko.zst
++ mod=rt5739
++ printf '%s\n' rt5739
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8907-regulator.ko.zst
++ mod=max8907-regulator
++ printf '%s\n' max8907_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bd9571mwv-regulator.ko.zst
++ mod=bd9571mwv-regulator
++ printf '%s\n' bd9571mwv_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6323-regulator.ko.zst
++ mod=mt6323-regulator
++ printf '%s\n' mt6323_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6397-regulator.ko.zst
++ mod=mt6397-regulator
++ printf '%s\n' mt6397_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtq2208-regulator.ko.zst
++ mod=rtq2208-regulator
++ printf '%s\n' rtq2208_regulator
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules virtio
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules virtio
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz virtio
++ ((  ++count  ))
++ mod=virtio_snd.ko.zst
++ mod=virtio_snd
++ printf '%s\n' virtio_snd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pmem.ko.zst
++ mod=virtio_pmem
++ printf '%s\n' virtio_pmem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_virtio.ko.zst
++ mod=nd_virtio
++ printf '%s\n' nd_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio-rng.ko.zst
++ mod=virtio-rng
++ printf '%s\n' virtio_rng
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_console.ko.zst
++ mod=virtio_console
++ printf '%s\n' virtio_console
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=gpio-virtio.ko.zst
++ mod=gpio-virtio
++ printf '%s\n' gpio_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_crypto.ko.zst
++ mod=virtio_crypto
++ printf '%s\n' virtio_crypto
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_blk.ko.zst
++ mod=virtio_blk
++ printf '%s\n' virtio_blk
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=i2c-virtio.ko.zst
++ mod=i2c-virtio
++ printf '%s\n' i2c_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_rpmsg_bus.ko.zst
++ mod=virtio_rpmsg_bus
++ printf '%s\n' virtio_rpmsg_bus
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio-iommu.ko.zst
++ mod=virtio-iommu
++ printf '%s\n' virtio_iommu
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_bt.ko.zst
++ mod=virtio_bt
++ printf '%s\n' virtio_bt
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_net.ko.zst
++ mod=virtio_net
++ printf '%s\n' virtio_net
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_input.ko.zst
++ mod=virtio_input
++ printf '%s\n' virtio_input
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_balloon.ko.zst
++ mod=virtio_balloon
++ printf '%s\n' virtio_balloon
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pci.ko.zst
++ mod=virtio_pci
++ printf '%s\n' virtio_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_mem.ko.zst
++ mod=virtio_mem
++ printf '%s\n' virtio_mem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_dma_buf.ko.zst
++ mod=virtio_dma_buf
++ printf '%s\n' virtio_dma_buf
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_vdpa.ko.zst
++ mod=virtio_vdpa
++ printf '%s\n' virtio_vdpa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pci_modern_dev.ko.zst
++ mod=virtio_pci_modern_dev
++ printf '%s\n' virtio_pci_modern_dev
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pci_legacy_dev.ko.zst
++ mod=virtio_pci_legacy_dev
++ printf '%s\n' virtio_pci_legacy_dev
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_mmio.ko.zst
++ mod=virtio_mmio
++ printf '%s\n' virtio_mmio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio-gpu.ko.zst
++ mod=virtio-gpu
++ printf '%s\n' virtio_gpu
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vp_vdpa.ko.zst
++ mod=vp_vdpa
++ printf '%s\n' vp_vdpa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_scsi.ko.zst
++ mod=virtio_scsi
++ printf '%s\n' virtio_scsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmw_vsock_virtio_transport_common.ko.zst
++ mod=vmw_vsock_virtio_transport_common
++ printf '%s\n' vmw_vsock_virtio_transport_common
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmw_vsock_virtio_transport.ko.zst
++ mod=vmw_vsock_virtio_transport
++ printf '%s\n' vmw_vsock_virtio_transport
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=9pnet_virtio.ko.zst
++ mod=9pnet_virtio
++ printf '%s\n' 9pnet_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtiofs.ko.zst
++ mod=virtiofs
++ printf '%s\n' virtiofs
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules /drivers/nvdimm/
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules /drivers/nvdimm/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
++ grep -xFf /dev/fd/63
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/nvdimm/
++ ((  ++count  ))
++ mod=nd_pmem.ko.zst
++ mod=nd_pmem
++ printf '%s\n' nd_pmem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pmem.ko.zst
++ mod=virtio_pmem
++ printf '%s\n' virtio_pmem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_virtio.ko.zst
++ mod=nd_virtio
++ printf '%s\n' nd_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_btt.ko.zst
++ mod=nd_btt
++ printf '%s\n' nd_btt
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_e820.ko.zst
++ mod=nd_e820
++ printf '%s\n' nd_e820
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules /drivers/pci/controller/
+ local mod
+ local -a mods
+ ((  57  ))
+ mapfile -t mods
++ all_modules /drivers/pci/controller/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ grep -xFf /dev/fd/63
++ read -r -d '' mod
+++ printf '%s\n' fjes acpi_cpufreq intel_rapl_msr nvidia ghash_clmulni_intel button sd_mod amd64_edac aesni_intel ext4 zenpower efi_pstore snd_hda_intel iwlwifi xhci_hcd wmi usb_storage sha256_ssse3 snd_hda_codec_hdmi polyval_clmulni sp5100_tco pcspkr hid_generic k10temp nvme rapl crc32_pclmul snd_hda_codec_realtek ahci joydev i2c_piix4 wmi_bmof xhci_pci crct10dif_pclmul jc42 ccp crc32c_intel hid_glorious nct6775 processor mxm_wmi snd_aloop mac_hid mousedev sha512_ssse3 nouveau tpm_crb rtc_cmos usbhid snd_usb_audio sha1_ssse3 kvm_amd intel_rapl_common igb uas nvidia_drm btusb
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/pci/controller/
++ ((  ++count  ))
++ mod=pci-hyperv-intf.ko.zst
++ mod=pci-hyperv-intf
++ printf '%s\n' pci_hyperv_intf
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pci-hyperv.ko.zst
++ mod=pci-hyperv
++ printf '%s\n' pci_hyperv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmd.ko.zst
++ mod=vmd
++ printf '%s\n' vmd
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ return 1
++ ((  0  ))
+ set +x
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux.img'
==> WARNING: errors were encountered during the build. The image may not be complete.
==> Building image from preset: /etc/mkinitcpio.d/linux.preset: 'fallback'
==> Using default configuration file: '/etc/mkinitcpio.conf'
  -> -k /boot/vmlinuz-linux -g /boot/initramfs-linux-fallback.img -S autodetect --microcode /boot/amd-ucode.img
==> Starting build: '6.6.4-arch1-1'
  -> Running build hook: [base]
  -> Running build hook: [udev]
  -> Running build hook: [modconf]
  -> Running build hook: [kms]
==> WARNING: Possibly missing firmware for module: 'ast'
  -> Running build hook: [keyboard]
==> WARNING: Possibly missing firmware for module: 'xhci_pci'
  -> Running build hook: [keymap]
  -> Running build hook: [consolefont]
  -> Running build hook: [block]
+ map add_module 'ahci?' 'sd_mod?' 'usb_storage?' 'uas?' 'mmc_block?' nvme2 'virtio_scsi?' 'virtio_blk?'
+ local r=0
+ for _ in "${@:2}"
+ add_module 'ahci?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ahci? == *\? ]]
+ ign_errors=1
+ set -- ahci
+ target=ahci
+ target=ahci
+ ((  _addedmodules[ahci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ahci
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ [[ (builtin) == /* ]]
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  ign_errors || _addedmodules[ahci]  ))
+ return 0
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'sd_mod?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sd_mod? == *\? ]]
+ ign_errors=1
+ set -- sd_mod
+ target=sd_mod
+ target=sd_mod
+ ((  _addedmodules[sd_mod] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sd_mod
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ [[ (builtin) == /* ]]
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  ign_errors || _addedmodules[sd_mod]  ))
+ return 0
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'usb_storage?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb_storage? == *\? ]]
+ ign_errors=1
+ set -- usb_storage
+ target=usb_storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 usb_storage
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/usb-storage.ko.zst == /* ]]
+ found=1
+ module=usb-storage.ko.zst
+ module=usb-storage
+ quiet 'adding module: %s (%s)' usb-storage /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/usb-storage.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'uas?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ uas? == *\? ]]
+ ign_errors=1
+ set -- uas
+ target=uas
+ target=uas
+ ((  _addedmodules[uas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 uas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/uas.ko.zst == /* ]]
+ found=1
+ module=uas.ko.zst
+ module=uas
+ quiet 'adding module: %s (%s)' uas /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/uas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'mmc_block?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_block? == *\? ]]
+ ign_errors=1
+ set -- mmc_block
+ target=mmc_block
+ target=mmc_block
+ ((  _addedmodules[mmc_block] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mmc_block
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_block.ko.zst == /* ]]
+ found=1
+ module=mmc_block.ko.zst
+ module=mmc_block
+ quiet 'adding module: %s (%s)' mmc_block /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_block.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme2
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme2 == *\? ]]
+ target=nvme2
+ target=nvme2
+ ((  _addedmodules[nvme2] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme2
+ ((  !found  ))
+ ((  ign_errors || _addedmodules[nvme2]  ))
+ error 'module not found: '\''%s'\''' nvme2
+ local 'mesg=module not found: '\''%s'\'''
+ shift
+ printf '==> ERROR: module not found: '\''%s'\''\n' nvme2
==> ERROR: module not found: 'nvme2'
+ return 1
++ ((  0  ))
+ return 1
++ ((  1  ))
++ [[ add_module == add_* ]]
++ ((  ++_builderrors  ))
+ ((  9 > 255 ? r=1 : ++r  ))
+ for _ in "${@:2}"
+ add_module 'virtio_scsi?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_scsi? == *\? ]]
+ ign_errors=1
+ set -- virtio_scsi
+ target=virtio_scsi
+ target=virtio_scsi
+ ((  _addedmodules[virtio_scsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_scsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/virtio_scsi.ko.zst == /* ]]
+ found=1
+ module=virtio_scsi.ko.zst
+ module=virtio_scsi
+ quiet 'adding module: %s (%s)' virtio_scsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/virtio_scsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 'virtio_blk?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_blk? == *\? ]]
+ ign_errors=1
+ set -- virtio_blk
+ target=virtio_blk
+ target=virtio_blk
+ ((  _addedmodules[virtio_blk] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_blk
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/virtio_blk.ko.zst == /* ]]
+ found=1
+ module=virtio_blk.ko.zst
+ module=virtio_blk
+ quiet 'adding module: %s (%s)' virtio_blk /lib/modules/6.6.4-arch1-1/kernel/drivers/block/virtio_blk.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 1
++ ((  0  ))
+ add_checked_modules '/(block|ata|scsi|fusion|nvme)/'
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules '/(block|ata|scsi|fusion|nvme)/'
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz '/(block|ata|scsi|fusion|nvme)/'
++ ((  ++count  ))
++ mod=sata_via.ko.zst
++ mod=sata_via
++ printf '%s\n' sata_via
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_atp867x.ko.zst
++ mod=pata_atp867x
++ printf '%s\n' pata_atp867x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_mpiix.ko.zst
++ mod=pata_mpiix
++ printf '%s\n' pata_mpiix
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_pdc202xx_old.ko.zst
++ mod=pata_pdc202xx_old
++ printf '%s\n' pata_pdc202xx_old
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_pcmcia.ko.zst
++ mod=pata_pcmcia
++ printf '%s\n' pata_pcmcia
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_triflex.ko.zst
++ mod=pata_triflex
++ printf '%s\n' pata_triflex
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libahci_platform.ko.zst
++ mod=libahci_platform
++ printf '%s\n' libahci_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sch.ko.zst
++ mod=pata_sch
++ printf '%s\n' pata_sch
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt37x.ko.zst
++ mod=pata_hpt37x
++ printf '%s\n' pata_hpt37x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_svw.ko.zst
++ mod=sata_svw
++ printf '%s\n' sata_svw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_opti.ko.zst
++ mod=pata_opti
++ printf '%s\n' pata_opti
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_cmd64x.ko.zst
++ mod=pata_cmd64x
++ printf '%s\n' pata_cmd64x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ahci_dwc.ko.zst
++ mod=ahci_dwc
++ printf '%s\n' ahci_dwc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_legacy.ko.zst
++ mod=pata_legacy
++ printf '%s\n' pata_legacy
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_it8213.ko.zst
++ mod=pata_it8213
++ printf '%s\n' pata_it8213
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sil.ko.zst
++ mod=sata_sil
++ printf '%s\n' sata_sil
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sis.ko.zst
++ mod=sata_sis
++ printf '%s\n' sata_sis
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_inic162x.ko.zst
++ mod=sata_inic162x
++ printf '%s\n' sata_inic162x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sil24.ko.zst
++ mod=sata_sil24
++ printf '%s\n' sata_sil24
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_artop.ko.zst
++ mod=pata_artop
++ printf '%s\n' pata_artop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_atiixp.ko.zst
++ mod=pata_atiixp
++ printf '%s\n' pata_atiixp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_optidma.ko.zst
++ mod=pata_optidma
++ printf '%s\n' pata_optidma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ninja32.ko.zst
++ mod=pata_ninja32
++ printf '%s\n' pata_ninja32
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_uli.ko.zst
++ mod=sata_uli
++ printf '%s\n' sata_uli
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_piccolo.ko.zst
++ mod=pata_piccolo
++ printf '%s\n' pata_piccolo
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_qstor.ko.zst
++ mod=sata_qstor
++ printf '%s\n' sata_qstor
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ns87415.ko.zst
++ mod=pata_ns87415
++ printf '%s\n' pata_ns87415
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pdc_adma.ko.zst
++ mod=pdc_adma
++ printf '%s\n' pdc_adma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_rdc.ko.zst
++ mod=pata_rdc
++ printf '%s\n' pata_rdc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sl82c105.ko.zst
++ mod=pata_sl82c105
++ printf '%s\n' pata_sl82c105
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_acpi.ko.zst
++ mod=pata_acpi
++ printf '%s\n' pata_acpi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fit3.ko.zst
++ mod=fit3
++ printf '%s\n' fit3
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bpck6.ko.zst
++ mod=bpck6
++ printf '%s\n' bpck6
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aten.ko.zst
++ mod=aten
++ printf '%s\n' aten
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=frpw.ko.zst
++ mod=frpw
++ printf '%s\n' frpw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=on26.ko.zst
++ mod=on26
++ printf '%s\n' on26
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=comm.ko.zst
++ mod=comm
++ printf '%s\n' comm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fit2.ko.zst
++ mod=fit2
++ printf '%s\n' fit2
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=kbic.ko.zst
++ mod=kbic
++ printf '%s\n' kbic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=epia.ko.zst
++ mod=epia
++ printf '%s\n' epia
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_parport.ko.zst
++ mod=pata_parport
++ printf '%s\n' pata_parport
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=epat.ko.zst
++ mod=epat
++ printf '%s\n' epat
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ktti.ko.zst
++ mod=ktti
++ printf '%s\n' ktti
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bpck.ko.zst
++ mod=bpck
++ printf '%s\n' bpck
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=dstr.ko.zst
++ mod=dstr
++ printf '%s\n' dstr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=on20.ko.zst
++ mod=on20
++ printf '%s\n' on20
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=friq.ko.zst
++ mod=friq
++ printf '%s\n' friq
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_it821x.ko.zst
++ mod=pata_it821x
++ printf '%s\n' pata_it821x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt3x2n.ko.zst
++ mod=pata_hpt3x2n
++ printf '%s\n' pata_hpt3x2n
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_efar.ko.zst
++ mod=pata_efar
++ printf '%s\n' pata_efar
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt3x3.ko.zst
++ mod=pata_hpt3x3
++ printf '%s\n' pata_hpt3x3
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_serverworks.ko.zst
++ mod=pata_serverworks
++ printf '%s\n' pata_serverworks
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_pdc2027x.ko.zst
++ mod=pata_pdc2027x
++ printf '%s\n' pata_pdc2027x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_dwc_460ex.ko.zst
++ mod=sata_dwc_460ex
++ printf '%s\n' sata_dwc_460ex
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_radisys.ko.zst
++ mod=pata_radisys
++ printf '%s\n' pata_radisys
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=acard-ahci.ko.zst
++ mod=acard-ahci
++ printf '%s\n' acard_ahci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ns87410.ko.zst
++ mod=pata_ns87410
++ printf '%s\n' pata_ns87410
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_via.ko.zst
++ mod=pata_via
++ printf '%s\n' pata_via
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_cmd640.ko.zst
++ mod=pata_cmd640
++ printf '%s\n' pata_cmd640
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sis.ko.zst
++ mod=pata_sis
++ printf '%s\n' pata_sis
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_nv.ko.zst
++ mod=sata_nv
++ printf '%s\n' sata_nv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_amd.ko.zst
++ mod=pata_amd
++ printf '%s\n' pata_amd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_sx4.ko.zst
++ mod=sata_sx4
++ printf '%s\n' sata_sx4
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ahci_platform.ko.zst
++ mod=ahci_platform
++ printf '%s\n' ahci_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_ali.ko.zst
++ mod=pata_ali
++ printf '%s\n' pata_ali
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_hpt366.ko.zst
++ mod=pata_hpt366
++ printf '%s\n' pata_hpt366
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_netcell.ko.zst
++ mod=pata_netcell
++ printf '%s\n' pata_netcell
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_rz1000.ko.zst
++ mod=pata_rz1000
++ printf '%s\n' pata_rz1000
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ata_generic.ko.zst
++ mod=ata_generic
++ printf '%s\n' ata_generic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_sil680.ko.zst
++ mod=pata_sil680
++ printf '%s\n' pata_sil680
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ata_piix.ko.zst
++ mod=ata_piix
++ printf '%s\n' ata_piix
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_promise.ko.zst
++ mod=sata_promise
++ printf '%s\n' sata_promise
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_mv.ko.zst
++ mod=sata_mv
++ printf '%s\n' sata_mv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_cypress.ko.zst
++ mod=pata_cypress
++ printf '%s\n' pata_cypress
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_oldpiix.ko.zst
++ mod=pata_oldpiix
++ printf '%s\n' pata_oldpiix
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sata_vsc.ko.zst
++ mod=sata_vsc
++ printf '%s\n' sata_vsc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_marvell.ko.zst
++ mod=pata_marvell
++ printf '%s\n' pata_marvell
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pata_jmicron.ko.zst
++ mod=pata_jmicron
++ printf '%s\n' pata_jmicron
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=zram.ko.zst
++ mod=zram
++ printf '%s\n' zram
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_blk.ko.zst
++ mod=virtio_blk
++ printf '%s\n' virtio_blk
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=null_blk.ko.zst
++ mod=null_blk
++ printf '%s\n' null_blk
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=floppy.ko.zst
++ mod=floppy
++ printf '%s\n' floppy
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rbd.ko.zst
++ mod=rbd
++ printf '%s\n' rbd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=xen-blkback.ko.zst
++ mod=xen-blkback
++ printf '%s\n' xen_blkback
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=xen-blkfront.ko.zst
++ mod=xen-blkfront
++ printf '%s\n' xen_blkfront
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aoe.ko.zst
++ mod=aoe
++ printf '%s\n' aoe
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rnbd-server.ko.zst
++ mod=rnbd-server
++ printf '%s\n' rnbd_server
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rnbd-client.ko.zst
++ mod=rnbd-client
++ printf '%s\n' rnbd_client
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=drbd.ko.zst
++ mod=drbd
++ printf '%s\n' drbd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ublk_drv.ko.zst
++ mod=ublk_drv
++ printf '%s\n' ublk_drv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=loop.ko.zst
++ mod=loop
++ printf '%s\n' loop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mtip32xx.ko.zst
++ mod=mtip32xx
++ printf '%s\n' mtip32xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=brd.ko.zst
++ mod=brd
++ printf '%s\n' brd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nbd.ko.zst
++ mod=nbd
++ printf '%s\n' nbd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pktcdvd.ko.zst
++ mod=pktcdvd
++ printf '%s\n' pktcdvd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-loop.ko.zst
++ mod=nvme-loop
++ printf '%s\n' nvme_loop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet-tcp.ko.zst
++ mod=nvmet-tcp
++ printf '%s\n' nvmet_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet-fc.ko.zst
++ mod=nvmet-fc
++ printf '%s\n' nvmet_fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-fcloop.ko.zst
++ mod=nvme-fcloop
++ printf '%s\n' nvme_fcloop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet.ko.zst
++ mod=nvmet
++ printf '%s\n' nvmet
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvmet-rdma.ko.zst
++ mod=nvmet-rdma
++ printf '%s\n' nvmet_rdma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-fabrics.ko.zst
++ mod=nvme-fabrics
++ printf '%s\n' nvme_fabrics
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-rdma.ko.zst
++ mod=nvme-rdma
++ printf '%s\n' nvme_rdma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-tcp.ko.zst
++ mod=nvme-tcp
++ printf '%s\n' nvme_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme.ko.zst
++ mod=nvme
++ printf '%s\n' nvme
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-core.ko.zst
++ mod=nvme-core
++ printf '%s\n' nvme_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-fc.ko.zst
++ mod=nvme-fc
++ printf '%s\n' nvme_fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nvme-common.ko.zst
++ mod=nvme-common
++ printf '%s\n' nvme_common
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptlan.ko.zst
++ mod=mptlan
++ printf '%s\n' mptlan
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptsas.ko.zst
++ mod=mptsas
++ printf '%s\n' mptsas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptscsih.ko.zst
++ mod=mptscsih
++ printf '%s\n' mptscsih
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptctl.ko.zst
++ mod=mptctl
++ printf '%s\n' mptctl
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptfc.ko.zst
++ mod=mptfc
++ printf '%s\n' mptfc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptbase.ko.zst
++ mod=mptbase
++ printf '%s\n' mptbase
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mptspi.ko.zst
++ mod=mptspi
++ printf '%s\n' mptspi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=efct.ko.zst
++ mod=efct
++ printf '%s\n' efct
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=BusLogic.ko.zst
++ mod=BusLogic
++ printf '%s\n' BusLogic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_fc.ko.zst
++ mod=scsi_transport_fc
++ printf '%s\n' scsi_transport_fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bnx2fc.ko.zst
++ mod=bnx2fc
++ printf '%s\n' bnx2fc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pm80xx.ko.zst
++ mod=pm80xx
++ printf '%s\n' pm80xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wd719x.ko.zst
++ mod=wd719x
++ printf '%s\n' wd719x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aacraid.ko.zst
++ mod=aacraid
++ printf '%s\n' aacraid
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=advansys.ko.zst
++ mod=advansys
++ printf '%s\n' advansys
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=xen-scsifront.ko.zst
++ mod=xen-scsifront
++ printf '%s\n' xen_scsifront
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=dmx3191d.ko.zst
++ mod=dmx3191d
++ printf '%s\n' dmx3191d
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=esp_scsi.ko.zst
++ mod=esp_scsi
++ printf '%s\n' esp_scsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=snic.ko.zst
++ mod=snic
++ printf '%s\n' snic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=hpsa.ko.zst
++ mod=hpsa
++ printf '%s\n' hpsa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mvsas.ko.zst
++ mod=mvsas
++ printf '%s\n' mvsas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid_mm.ko.zst
++ mod=megaraid_mm
++ printf '%s\n' megaraid_mm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid_sas.ko.zst
++ mod=megaraid_sas
++ printf '%s\n' megaraid_sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid_mbox.ko.zst
++ mod=megaraid_mbox
++ printf '%s\n' megaraid_mbox
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cxgb3i.ko.zst
++ mod=cxgb3i
++ printf '%s\n' cxgb3i
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cxgb4i.ko.zst
++ mod=cxgb4i
++ printf '%s\n' cxgb4i
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libcxgbi.ko.zst
++ mod=libcxgbi
++ printf '%s\n' libcxgbi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libiscsi.ko.zst
++ mod=libiscsi
++ printf '%s\n' libiscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_scsi.ko.zst
++ mod=virtio_scsi
++ printf '%s\n' virtio_scsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libsas.ko.zst
++ mod=libsas
++ printf '%s\n' libsas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aic7xxx.ko.zst
++ mod=aic7xxx
++ printf '%s\n' aic7xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aic79xx.ko.zst
++ mod=aic79xx
++ printf '%s\n' aic79xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=iscsi_boot_sysfs.ko.zst
++ mod=iscsi_boot_sysfs
++ printf '%s\n' iscsi_boot_sysfs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=a100u2w.ko.zst
++ mod=a100u2w
++ printf '%s\n' a100u2w
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mpt3sas.ko.zst
++ mod=mpt3sas
++ printf '%s\n' mpt3sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_sas.ko.zst
++ mod=scsi_transport_sas
++ printf '%s\n' scsi_transport_sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=esas2r.ko.zst
++ mod=esas2r
++ printf '%s\n' esas2r
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=raid_class.ko.zst
++ mod=raid_class
++ printf '%s\n' raid_class
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libfcoe.ko.zst
++ mod=libfcoe
++ printf '%s\n' libfcoe
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fcoe.ko.zst
++ mod=fcoe
++ printf '%s\n' fcoe
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fdomain_pci.ko.zst
++ mod=fdomain_pci
++ printf '%s\n' fdomain_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sg.ko.zst
++ mod=sg
++ printf '%s\n' sg
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fnic.ko.zst
++ mod=fnic
++ printf '%s\n' fnic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=imm.ko.zst
++ mod=imm
++ printf '%s\n' imm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=hptiop.ko.zst
++ mod=hptiop
++ printf '%s\n' hptiop
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=csiostor.ko.zst
++ mod=csiostor
++ printf '%s\n' csiostor
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=arcmsr.ko.zst
++ mod=arcmsr
++ printf '%s\n' arcmsr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=iscsi_tcp.ko.zst
++ mod=iscsi_tcp
++ printf '%s\n' iscsi_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qla2xxx.ko.zst
++ mod=qla2xxx
++ printf '%s\n' qla2xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tcm_qla2xxx.ko.zst
++ mod=tcm_qla2xxx
++ printf '%s\n' tcm_qla2xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ch.ko.zst
++ mod=ch
++ printf '%s\n' ch
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sym53c500_cs.ko.zst
++ mod=sym53c500_cs
++ printf '%s\n' sym53c500_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fdomain_cs.ko.zst
++ mod=fdomain_cs
++ printf '%s\n' fdomain_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qlogic_cs.ko.zst
++ mod=qlogic_cs
++ printf '%s\n' qlogic_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aha152x_cs.ko.zst
++ mod=aha152x_cs
++ printf '%s\n' aha152x_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mpi3mr.ko.zst
++ mod=mpi3mr
++ printf '%s\n' mpi3mr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mvumi.ko.zst
++ mod=mvumi
++ printf '%s\n' mvumi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qedf.ko.zst
++ mod=qedf
++ printf '%s\n' qedf
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=be2iscsi.ko.zst
++ mod=be2iscsi
++ printf '%s\n' be2iscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=3w-sas.ko.zst
++ mod=3w-sas
++ printf '%s\n' 3w_sas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sr_mod.ko.zst
++ mod=sr_mod
++ printf '%s\n' sr_mod
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=3w-xxxx.ko.zst
++ mod=3w-xxxx
++ printf '%s\n' 3w_xxxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ipr.ko.zst
++ mod=ipr
++ printf '%s\n' ipr
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=megaraid.ko.zst
++ mod=megaraid
++ printf '%s\n' megaraid
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_iscsi.ko.zst
++ mod=scsi_transport_iscsi
++ printf '%s\n' scsi_transport_iscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=myrs.ko.zst
++ mod=myrs
++ printf '%s\n' myrs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libiscsi_tcp.ko.zst
++ mod=libiscsi_tcp
++ printf '%s\n' libiscsi_tcp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=initio.ko.zst
++ mod=initio
++ printf '%s\n' initio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_hp_sw.ko.zst
++ mod=scsi_dh_hp_sw
++ printf '%s\n' scsi_dh_hp_sw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_alua.ko.zst
++ mod=scsi_dh_alua
++ printf '%s\n' scsi_dh_alua
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_emc.ko.zst
++ mod=scsi_dh_emc
++ printf '%s\n' scsi_dh_emc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_dh_rdac.ko.zst
++ mod=scsi_dh_rdac
++ printf '%s\n' scsi_dh_rdac
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=dc395x.ko.zst
++ mod=dc395x
++ printf '%s\n' dc395x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ses.ko.zst
++ mod=ses
++ printf '%s\n' ses
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=myrb.ko.zst
++ mod=myrb
++ printf '%s\n' myrb
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=stex.ko.zst
++ mod=stex
++ printf '%s\n' stex
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qla1280.ko.zst
++ mod=qla1280
++ printf '%s\n' qla1280
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_debug.ko.zst
++ mod=scsi_debug
++ printf '%s\n' scsi_debug
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=am53c974.ko.zst
++ mod=am53c974
++ printf '%s\n' am53c974
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bnx2i.ko.zst
++ mod=bnx2i
++ printf '%s\n' bnx2i
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_spi.ko.zst
++ mod=scsi_transport_spi
++ printf '%s\n' scsi_transport_spi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qla4xxx.ko.zst
++ mod=qla4xxx
++ printf '%s\n' qla4xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=hv_storvsc.ko.zst
++ mod=hv_storvsc
++ printf '%s\n' hv_storvsc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ips.ko.zst
++ mod=ips
++ printf '%s\n' ips
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fdomain.ko.zst
++ mod=fdomain
++ printf '%s\n' fdomain
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=3w-9xxx.ko.zst
++ mod=3w-9xxx
++ printf '%s\n' 3w_9xxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sym53c8xx.ko.zst
++ mod=sym53c8xx
++ printf '%s\n' sym53c8xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=smartpqi.ko.zst
++ mod=smartpqi
++ printf '%s\n' smartpqi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qlogicfas408.ko.zst
++ mod=qlogicfas408
++ printf '%s\n' qlogicfas408
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=scsi_transport_srp.ko.zst
++ mod=scsi_transport_srp
++ printf '%s\n' scsi_transport_srp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=st.ko.zst
++ mod=st
++ printf '%s\n' st
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pmcraid.ko.zst
++ mod=pmcraid
++ printf '%s\n' pmcraid
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aic94xx.ko.zst
++ mod=aic94xx
++ printf '%s\n' aic94xx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=isci.ko.zst
++ mod=isci
++ printf '%s\n' isci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lpfc.ko.zst
++ mod=lpfc
++ printf '%s\n' lpfc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmw_pvscsi.ko.zst
++ mod=vmw_pvscsi
++ printf '%s\n' vmw_pvscsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=qedi.ko.zst
++ mod=qedi
++ printf '%s\n' qedi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ppa.ko.zst
++ mod=ppa
++ printf '%s\n' ppa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=atp870u.ko.zst
++ mod=atp870u
++ printf '%s\n' atp870u
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=libfc.ko.zst
++ mod=libfc
++ printf '%s\n' libfc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bfa.ko.zst
++ mod=bfa
++ printf '%s\n' bfa
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module sata_via pata_atp867x pata_mpiix pata_pdc202xx_old pata_pcmcia pata_triflex libahci_platform pata_sch pata_hpt37x sata_svw pata_opti pata_cmd64x ahci_dwc pata_legacy pata_it8213 sata_sil sata_sis sata_inic162x sata_sil24 pata_artop pata_atiixp pata_optidma pata_ninja32 sata_uli pata_piccolo sata_qstor pata_ns87415 pdc_adma pata_rdc pata_sl82c105 pata_acpi fit3 bpck6 aten frpw on26 comm fit2 kbic epia pata_parport epat ktti bpck dstr on20 friq pata_it821x pata_hpt3x2n pata_efar pata_hpt3x3 pata_serverworks pata_pdc2027x sata_dwc_460ex pata_radisys acard_ahci pata_ns87410 pata_via pata_cmd640 pata_sis sata_nv pata_amd sata_sx4 ahci_platform pata_ali pata_hpt366 pata_netcell pata_rz1000 ata_generic pata_sil680 ata_piix sata_promise sata_mv pata_cypress pata_oldpiix sata_vsc pata_marvell pata_jmicron zram virtio_blk null_blk floppy rbd xen_blkback xen_blkfront aoe rnbd_server rnbd_client drbd ublk_drv loop mtip32xx brd nbd pktcdvd nvme_loop nvmet_tcp nvmet_fc nvme_fcloop nvmet nvmet_rdma nvme_fabrics nvme_rdma nvme_tcp nvme nvme_core nvme_fc nvme_common mptlan mptsas mptscsih mptctl mptfc mptbase mptspi efct BusLogic scsi_transport_fc bnx2fc pm80xx wd719x aacraid advansys xen_scsifront dmx3191d esp_scsi snic hpsa mvsas megaraid_mm megaraid_sas megaraid_mbox cxgb3i cxgb4i libcxgbi libiscsi virtio_scsi libsas aic7xxx aic79xx iscsi_boot_sysfs a100u2w mpt3sas scsi_transport_sas esas2r raid_class libfcoe fcoe fdomain_pci sg fnic imm hptiop csiostor arcmsr iscsi_tcp qla2xxx tcm_qla2xxx ch sym53c500_cs fdomain_cs qlogic_cs aha152x_cs mpi3mr mvumi qedf be2iscsi 3w_sas sr_mod 3w_xxxx ipr megaraid scsi_transport_iscsi myrs libiscsi_tcp initio scsi_dh_hp_sw scsi_dh_alua scsi_dh_emc scsi_dh_rdac dc395x ses myrb stex qla1280 scsi_debug am53c974 bnx2i scsi_transport_spi qla4xxx hv_storvsc ips fdomain 3w_9xxx sym53c8xx smartpqi qlogicfas408 scsi_transport_srp st pmcraid aic94xx isci lpfc vmw_pvscsi qedi ppa atp870u libfc bfa
+ local r=0
+ for _ in "${@:2}"
+ add_module sata_via
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_via == *\? ]]
+ target=sata_via
+ target=sata_via
+ ((  _addedmodules[sata_via] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_via
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_via.ko.zst == /* ]]
+ found=1
+ module=sata_via.ko.zst
+ module=sata_via
+ quiet 'adding module: %s (%s)' sata_via /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_via.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_atp867x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_atp867x == *\? ]]
+ target=pata_atp867x
+ target=pata_atp867x
+ ((  _addedmodules[pata_atp867x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_atp867x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_atp867x.ko.zst == /* ]]
+ found=1
+ module=pata_atp867x.ko.zst
+ module=pata_atp867x
+ quiet 'adding module: %s (%s)' pata_atp867x /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_atp867x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_mpiix
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_mpiix == *\? ]]
+ target=pata_mpiix
+ target=pata_mpiix
+ ((  _addedmodules[pata_mpiix] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_mpiix
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_mpiix.ko.zst == /* ]]
+ found=1
+ module=pata_mpiix.ko.zst
+ module=pata_mpiix
+ quiet 'adding module: %s (%s)' pata_mpiix /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_mpiix.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_pdc202xx_old
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_pdc202xx_old == *\? ]]
+ target=pata_pdc202xx_old
+ target=pata_pdc202xx_old
+ ((  _addedmodules[pata_pdc202xx_old] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_pdc202xx_old
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_pdc202xx_old.ko.zst == /* ]]
+ found=1
+ module=pata_pdc202xx_old.ko.zst
+ module=pata_pdc202xx_old
+ quiet 'adding module: %s (%s)' pata_pdc202xx_old /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_pdc202xx_old.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_pcmcia == *\? ]]
+ target=pata_pcmcia
+ target=pata_pcmcia
+ ((  _addedmodules[pata_pcmcia] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_pcmcia
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_pcmcia.ko.zst == /* ]]
+ found=1
+ module=pata_pcmcia.ko.zst
+ module=pata_pcmcia
+ quiet 'adding module: %s (%s)' pata_pcmcia /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_pcmcia.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pcmcia
+ local r=0
+ for _ in "${@:2}"
+ add_module pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcmcia == *\? ]]
+ target=pcmcia
+ target=pcmcia
+ ((  _addedmodules[pcmcia] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_triflex
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_triflex == *\? ]]
+ target=pata_triflex
+ target=pata_triflex
+ ((  _addedmodules[pata_triflex] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_triflex
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_triflex.ko.zst == /* ]]
+ found=1
+ module=pata_triflex.ko.zst
+ module=pata_triflex
+ quiet 'adding module: %s (%s)' pata_triflex /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_triflex.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libahci_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libahci_platform == *\? ]]
+ target=libahci_platform
+ target=libahci_platform
+ ((  _addedmodules[libahci_platform] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libahci_platform
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/libahci_platform.ko.zst == /* ]]
+ found=1
+ module=libahci_platform.ko.zst
+ module=libahci_platform
+ quiet 'adding module: %s (%s)' libahci_platform /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/libahci_platform.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_sch
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_sch == *\? ]]
+ target=pata_sch
+ target=pata_sch
+ ((  _addedmodules[pata_sch] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_sch
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sch.ko.zst == /* ]]
+ found=1
+ module=pata_sch.ko.zst
+ module=pata_sch
+ quiet 'adding module: %s (%s)' pata_sch /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sch.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_hpt37x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_hpt37x == *\? ]]
+ target=pata_hpt37x
+ target=pata_hpt37x
+ ((  _addedmodules[pata_hpt37x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_hpt37x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt37x.ko.zst == /* ]]
+ found=1
+ module=pata_hpt37x.ko.zst
+ module=pata_hpt37x
+ quiet 'adding module: %s (%s)' pata_hpt37x /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt37x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_svw
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_svw == *\? ]]
+ target=sata_svw
+ target=sata_svw
+ ((  _addedmodules[sata_svw] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_svw
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_svw.ko.zst == /* ]]
+ found=1
+ module=sata_svw.ko.zst
+ module=sata_svw
+ quiet 'adding module: %s (%s)' sata_svw /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_svw.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_opti
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_opti == *\? ]]
+ target=pata_opti
+ target=pata_opti
+ ((  _addedmodules[pata_opti] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_opti
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_opti.ko.zst == /* ]]
+ found=1
+ module=pata_opti.ko.zst
+ module=pata_opti
+ quiet 'adding module: %s (%s)' pata_opti /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_opti.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_cmd64x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_cmd64x == *\? ]]
+ target=pata_cmd64x
+ target=pata_cmd64x
+ ((  _addedmodules[pata_cmd64x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_cmd64x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_cmd64x.ko.zst == /* ]]
+ found=1
+ module=pata_cmd64x.ko.zst
+ module=pata_cmd64x
+ quiet 'adding module: %s (%s)' pata_cmd64x /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_cmd64x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ahci_dwc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ahci_dwc == *\? ]]
+ target=ahci_dwc
+ target=ahci_dwc
+ ((  _addedmodules[ahci_dwc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ahci_dwc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ahci_dwc.ko.zst == /* ]]
+ found=1
+ module=ahci_dwc.ko.zst
+ module=ahci_dwc
+ quiet 'adding module: %s (%s)' ahci_dwc /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ahci_dwc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libahci_platform
+ local r=0
+ for _ in "${@:2}"
+ add_module libahci_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libahci_platform == *\? ]]
+ target=libahci_platform
+ target=libahci_platform
+ ((  _addedmodules[libahci_platform] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_legacy
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_legacy == *\? ]]
+ target=pata_legacy
+ target=pata_legacy
+ ((  _addedmodules[pata_legacy] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_legacy
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_legacy.ko.zst == /* ]]
+ found=1
+ module=pata_legacy.ko.zst
+ module=pata_legacy
+ quiet 'adding module: %s (%s)' pata_legacy /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_legacy.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_it8213
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_it8213 == *\? ]]
+ target=pata_it8213
+ target=pata_it8213
+ ((  _addedmodules[pata_it8213] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_it8213
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_it8213.ko.zst == /* ]]
+ found=1
+ module=pata_it8213.ko.zst
+ module=pata_it8213
+ quiet 'adding module: %s (%s)' pata_it8213 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_it8213.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_sil
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_sil == *\? ]]
+ target=sata_sil
+ target=sata_sil
+ ((  _addedmodules[sata_sil] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_sil
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sil.ko.zst == /* ]]
+ found=1
+ module=sata_sil.ko.zst
+ module=sata_sil
+ quiet 'adding module: %s (%s)' sata_sil /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sil.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_sis
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_sis == *\? ]]
+ target=sata_sis
+ target=sata_sis
+ ((  _addedmodules[sata_sis] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_sis
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sis.ko.zst == /* ]]
+ found=1
+ module=sata_sis.ko.zst
+ module=sata_sis
+ quiet 'adding module: %s (%s)' sata_sis /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sis.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_sis
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_sis
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_sis == *\? ]]
+ target=pata_sis
+ target=pata_sis
+ ((  _addedmodules[pata_sis] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_sis
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sis.ko.zst == /* ]]
+ found=1
+ module=pata_sis.ko.zst
+ module=pata_sis
+ quiet 'adding module: %s (%s)' pata_sis /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sis.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_inic162x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_inic162x == *\? ]]
+ target=sata_inic162x
+ target=sata_inic162x
+ ((  _addedmodules[sata_inic162x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_inic162x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_inic162x.ko.zst == /* ]]
+ found=1
+ module=sata_inic162x.ko.zst
+ module=sata_inic162x
+ quiet 'adding module: %s (%s)' sata_inic162x /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_inic162x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_sil24
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_sil24 == *\? ]]
+ target=sata_sil24
+ target=sata_sil24
+ ((  _addedmodules[sata_sil24] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_sil24
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sil24.ko.zst == /* ]]
+ found=1
+ module=sata_sil24.ko.zst
+ module=sata_sil24
+ quiet 'adding module: %s (%s)' sata_sil24 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sil24.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_artop
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_artop == *\? ]]
+ target=pata_artop
+ target=pata_artop
+ ((  _addedmodules[pata_artop] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_artop
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_artop.ko.zst == /* ]]
+ found=1
+ module=pata_artop.ko.zst
+ module=pata_artop
+ quiet 'adding module: %s (%s)' pata_artop /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_artop.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_atiixp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_atiixp == *\? ]]
+ target=pata_atiixp
+ target=pata_atiixp
+ ((  _addedmodules[pata_atiixp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_atiixp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_atiixp.ko.zst == /* ]]
+ found=1
+ module=pata_atiixp.ko.zst
+ module=pata_atiixp
+ quiet 'adding module: %s (%s)' pata_atiixp /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_atiixp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_optidma
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_optidma == *\? ]]
+ target=pata_optidma
+ target=pata_optidma
+ ((  _addedmodules[pata_optidma] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_optidma
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_optidma.ko.zst == /* ]]
+ found=1
+ module=pata_optidma.ko.zst
+ module=pata_optidma
+ quiet 'adding module: %s (%s)' pata_optidma /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_optidma.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_ninja32
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_ninja32 == *\? ]]
+ target=pata_ninja32
+ target=pata_ninja32
+ ((  _addedmodules[pata_ninja32] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_ninja32
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ninja32.ko.zst == /* ]]
+ found=1
+ module=pata_ninja32.ko.zst
+ module=pata_ninja32
+ quiet 'adding module: %s (%s)' pata_ninja32 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ninja32.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_uli
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_uli == *\? ]]
+ target=sata_uli
+ target=sata_uli
+ ((  _addedmodules[sata_uli] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_uli
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_uli.ko.zst == /* ]]
+ found=1
+ module=sata_uli.ko.zst
+ module=sata_uli
+ quiet 'adding module: %s (%s)' sata_uli /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_uli.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_piccolo
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_piccolo == *\? ]]
+ target=pata_piccolo
+ target=pata_piccolo
+ ((  _addedmodules[pata_piccolo] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_piccolo
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_piccolo.ko.zst == /* ]]
+ found=1
+ module=pata_piccolo.ko.zst
+ module=pata_piccolo
+ quiet 'adding module: %s (%s)' pata_piccolo /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_piccolo.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_qstor
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_qstor == *\? ]]
+ target=sata_qstor
+ target=sata_qstor
+ ((  _addedmodules[sata_qstor] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_qstor
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_qstor.ko.zst == /* ]]
+ found=1
+ module=sata_qstor.ko.zst
+ module=sata_qstor
+ quiet 'adding module: %s (%s)' sata_qstor /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_qstor.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_ns87415
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_ns87415 == *\? ]]
+ target=pata_ns87415
+ target=pata_ns87415
+ ((  _addedmodules[pata_ns87415] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_ns87415
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ns87415.ko.zst == /* ]]
+ found=1
+ module=pata_ns87415.ko.zst
+ module=pata_ns87415
+ quiet 'adding module: %s (%s)' pata_ns87415 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ns87415.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pdc_adma
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pdc_adma == *\? ]]
+ target=pdc_adma
+ target=pdc_adma
+ ((  _addedmodules[pdc_adma] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pdc_adma
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pdc_adma.ko.zst == /* ]]
+ found=1
+ module=pdc_adma.ko.zst
+ module=pdc_adma
+ quiet 'adding module: %s (%s)' pdc_adma /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pdc_adma.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_rdc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_rdc == *\? ]]
+ target=pata_rdc
+ target=pata_rdc
+ ((  _addedmodules[pata_rdc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_rdc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_rdc.ko.zst == /* ]]
+ found=1
+ module=pata_rdc.ko.zst
+ module=pata_rdc
+ quiet 'adding module: %s (%s)' pata_rdc /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_rdc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_sl82c105
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_sl82c105 == *\? ]]
+ target=pata_sl82c105
+ target=pata_sl82c105
+ ((  _addedmodules[pata_sl82c105] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_sl82c105
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sl82c105.ko.zst == /* ]]
+ found=1
+ module=pata_sl82c105.ko.zst
+ module=pata_sl82c105
+ quiet 'adding module: %s (%s)' pata_sl82c105 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sl82c105.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_acpi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_acpi == *\? ]]
+ target=pata_acpi
+ target=pata_acpi
+ ((  _addedmodules[pata_acpi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_acpi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_acpi.ko.zst == /* ]]
+ found=1
+ module=pata_acpi.ko.zst
+ module=pata_acpi
+ quiet 'adding module: %s (%s)' pata_acpi /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_acpi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fit3
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fit3 == *\? ]]
+ target=fit3
+ target=fit3
+ ((  _addedmodules[fit3] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fit3
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/fit3.ko.zst == /* ]]
+ found=1
+ module=fit3.ko.zst
+ module=fit3
+ quiet 'adding module: %s (%s)' fit3 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/fit3.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_parport
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/pata_parport.ko.zst == /* ]]
+ found=1
+ module=pata_parport.ko.zst
+ module=pata_parport
+ quiet 'adding module: %s (%s)' pata_parport /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/pata_parport.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module parport
+ local r=0
+ for _ in "${@:2}"
+ add_module parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ parport == *\? ]]
+ target=parport
+ target=parport
+ ((  _addedmodules[parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bpck6
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bpck6 == *\? ]]
+ target=bpck6
+ target=bpck6
+ ((  _addedmodules[bpck6] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bpck6
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/bpck6.ko.zst == /* ]]
+ found=1
+ module=bpck6.ko.zst
+ module=bpck6
+ quiet 'adding module: %s (%s)' bpck6 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/bpck6.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aten
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aten == *\? ]]
+ target=aten
+ target=aten
+ ((  _addedmodules[aten] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aten
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/aten.ko.zst == /* ]]
+ found=1
+ module=aten.ko.zst
+ module=aten
+ quiet 'adding module: %s (%s)' aten /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/aten.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module frpw
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ frpw == *\? ]]
+ target=frpw
+ target=frpw
+ ((  _addedmodules[frpw] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 frpw
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/frpw.ko.zst == /* ]]
+ found=1
+ module=frpw.ko.zst
+ module=frpw
+ quiet 'adding module: %s (%s)' frpw /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/frpw.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module on26
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ on26 == *\? ]]
+ target=on26
+ target=on26
+ ((  _addedmodules[on26] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 on26
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/on26.ko.zst == /* ]]
+ found=1
+ module=on26.ko.zst
+ module=on26
+ quiet 'adding module: %s (%s)' on26 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/on26.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module comm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ comm == *\? ]]
+ target=comm
+ target=comm
+ ((  _addedmodules[comm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 comm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/comm.ko.zst == /* ]]
+ found=1
+ module=comm.ko.zst
+ module=comm
+ quiet 'adding module: %s (%s)' comm /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/comm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fit2
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fit2 == *\? ]]
+ target=fit2
+ target=fit2
+ ((  _addedmodules[fit2] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fit2
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/fit2.ko.zst == /* ]]
+ found=1
+ module=fit2.ko.zst
+ module=fit2
+ quiet 'adding module: %s (%s)' fit2 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/fit2.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module kbic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ kbic == *\? ]]
+ target=kbic
+ target=kbic
+ ((  _addedmodules[kbic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 kbic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/kbic.ko.zst == /* ]]
+ found=1
+ module=kbic.ko.zst
+ module=kbic
+ quiet 'adding module: %s (%s)' kbic /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/kbic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module epia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ epia == *\? ]]
+ target=epia
+ target=epia
+ ((  _addedmodules[epia] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 epia
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/epia.ko.zst == /* ]]
+ found=1
+ module=epia.ko.zst
+ module=epia
+ quiet 'adding module: %s (%s)' epia /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/epia.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module epat
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ epat == *\? ]]
+ target=epat
+ target=epat
+ ((  _addedmodules[epat] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 epat
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/epat.ko.zst == /* ]]
+ found=1
+ module=epat.ko.zst
+ module=epat
+ quiet 'adding module: %s (%s)' epat /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/epat.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ktti
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ktti == *\? ]]
+ target=ktti
+ target=ktti
+ ((  _addedmodules[ktti] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ktti
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/ktti.ko.zst == /* ]]
+ found=1
+ module=ktti.ko.zst
+ module=ktti
+ quiet 'adding module: %s (%s)' ktti /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/ktti.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bpck
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bpck == *\? ]]
+ target=bpck
+ target=bpck
+ ((  _addedmodules[bpck] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bpck
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/bpck.ko.zst == /* ]]
+ found=1
+ module=bpck.ko.zst
+ module=bpck
+ quiet 'adding module: %s (%s)' bpck /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/bpck.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module dstr
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dstr == *\? ]]
+ target=dstr
+ target=dstr
+ ((  _addedmodules[dstr] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dstr
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/dstr.ko.zst == /* ]]
+ found=1
+ module=dstr.ko.zst
+ module=dstr
+ quiet 'adding module: %s (%s)' dstr /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/dstr.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module on20
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ on20 == *\? ]]
+ target=on20
+ target=on20
+ ((  _addedmodules[on20] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 on20
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/on20.ko.zst == /* ]]
+ found=1
+ module=on20.ko.zst
+ module=on20
+ quiet 'adding module: %s (%s)' on20 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/on20.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module friq
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ friq == *\? ]]
+ target=friq
+ target=friq
+ ((  _addedmodules[friq] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 friq
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/friq.ko.zst == /* ]]
+ found=1
+ module=friq.ko.zst
+ module=friq
+ quiet 'adding module: %s (%s)' friq /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_parport/friq.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pata_parport
+ local r=0
+ for _ in "${@:2}"
+ add_module pata_parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_parport == *\? ]]
+ target=pata_parport
+ target=pata_parport
+ ((  _addedmodules[pata_parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_it821x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_it821x == *\? ]]
+ target=pata_it821x
+ target=pata_it821x
+ ((  _addedmodules[pata_it821x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_it821x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_it821x.ko.zst == /* ]]
+ found=1
+ module=pata_it821x.ko.zst
+ module=pata_it821x
+ quiet 'adding module: %s (%s)' pata_it821x /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_it821x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_hpt3x2n
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_hpt3x2n == *\? ]]
+ target=pata_hpt3x2n
+ target=pata_hpt3x2n
+ ((  _addedmodules[pata_hpt3x2n] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_hpt3x2n
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt3x2n.ko.zst == /* ]]
+ found=1
+ module=pata_hpt3x2n.ko.zst
+ module=pata_hpt3x2n
+ quiet 'adding module: %s (%s)' pata_hpt3x2n /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt3x2n.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_efar
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_efar == *\? ]]
+ target=pata_efar
+ target=pata_efar
+ ((  _addedmodules[pata_efar] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_efar
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_efar.ko.zst == /* ]]
+ found=1
+ module=pata_efar.ko.zst
+ module=pata_efar
+ quiet 'adding module: %s (%s)' pata_efar /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_efar.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_hpt3x3
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_hpt3x3 == *\? ]]
+ target=pata_hpt3x3
+ target=pata_hpt3x3
+ ((  _addedmodules[pata_hpt3x3] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_hpt3x3
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt3x3.ko.zst == /* ]]
+ found=1
+ module=pata_hpt3x3.ko.zst
+ module=pata_hpt3x3
+ quiet 'adding module: %s (%s)' pata_hpt3x3 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt3x3.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_serverworks
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_serverworks == *\? ]]
+ target=pata_serverworks
+ target=pata_serverworks
+ ((  _addedmodules[pata_serverworks] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_serverworks
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_serverworks.ko.zst == /* ]]
+ found=1
+ module=pata_serverworks.ko.zst
+ module=pata_serverworks
+ quiet 'adding module: %s (%s)' pata_serverworks /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_serverworks.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_pdc2027x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_pdc2027x == *\? ]]
+ target=pata_pdc2027x
+ target=pata_pdc2027x
+ ((  _addedmodules[pata_pdc2027x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_pdc2027x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_pdc2027x.ko.zst == /* ]]
+ found=1
+ module=pata_pdc2027x.ko.zst
+ module=pata_pdc2027x
+ quiet 'adding module: %s (%s)' pata_pdc2027x /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_pdc2027x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_dwc_460ex
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_dwc_460ex == *\? ]]
+ target=sata_dwc_460ex
+ target=sata_dwc_460ex
+ ((  _addedmodules[sata_dwc_460ex] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_dwc_460ex
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_dwc_460ex.ko.zst == /* ]]
+ found=1
+ module=sata_dwc_460ex.ko.zst
+ module=sata_dwc_460ex
+ quiet 'adding module: %s (%s)' sata_dwc_460ex /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_dwc_460ex.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_radisys
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_radisys == *\? ]]
+ target=pata_radisys
+ target=pata_radisys
+ ((  _addedmodules[pata_radisys] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_radisys
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_radisys.ko.zst == /* ]]
+ found=1
+ module=pata_radisys.ko.zst
+ module=pata_radisys
+ quiet 'adding module: %s (%s)' pata_radisys /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_radisys.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module acard_ahci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ acard_ahci == *\? ]]
+ target=acard_ahci
+ target=acard_ahci
+ ((  _addedmodules[acard_ahci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 acard_ahci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/acard-ahci.ko.zst == /* ]]
+ found=1
+ module=acard-ahci.ko.zst
+ module=acard-ahci
+ quiet 'adding module: %s (%s)' acard-ahci /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/acard-ahci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_ns87410
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_ns87410 == *\? ]]
+ target=pata_ns87410
+ target=pata_ns87410
+ ((  _addedmodules[pata_ns87410] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_ns87410
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ns87410.ko.zst == /* ]]
+ found=1
+ module=pata_ns87410.ko.zst
+ module=pata_ns87410
+ quiet 'adding module: %s (%s)' pata_ns87410 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ns87410.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_via
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_via == *\? ]]
+ target=pata_via
+ target=pata_via
+ ((  _addedmodules[pata_via] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_via
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_via.ko.zst == /* ]]
+ found=1
+ module=pata_via.ko.zst
+ module=pata_via
+ quiet 'adding module: %s (%s)' pata_via /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_via.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_cmd640
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_cmd640 == *\? ]]
+ target=pata_cmd640
+ target=pata_cmd640
+ ((  _addedmodules[pata_cmd640] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_cmd640
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_cmd640.ko.zst == /* ]]
+ found=1
+ module=pata_cmd640.ko.zst
+ module=pata_cmd640
+ quiet 'adding module: %s (%s)' pata_cmd640 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_cmd640.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_sis
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_sis == *\? ]]
+ target=pata_sis
+ target=pata_sis
+ ((  _addedmodules[pata_sis] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_nv
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_nv == *\? ]]
+ target=sata_nv
+ target=sata_nv
+ ((  _addedmodules[sata_nv] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_nv
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_nv.ko.zst == /* ]]
+ found=1
+ module=sata_nv.ko.zst
+ module=sata_nv
+ quiet 'adding module: %s (%s)' sata_nv /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_nv.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_amd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_amd == *\? ]]
+ target=pata_amd
+ target=pata_amd
+ ((  _addedmodules[pata_amd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_amd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_amd.ko.zst == /* ]]
+ found=1
+ module=pata_amd.ko.zst
+ module=pata_amd
+ quiet 'adding module: %s (%s)' pata_amd /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_amd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_sx4
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_sx4 == *\? ]]
+ target=sata_sx4
+ target=sata_sx4
+ ((  _addedmodules[sata_sx4] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_sx4
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sx4.ko.zst == /* ]]
+ found=1
+ module=sata_sx4.ko.zst
+ module=sata_sx4
+ quiet 'adding module: %s (%s)' sata_sx4 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_sx4.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ahci_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ahci_platform == *\? ]]
+ target=ahci_platform
+ target=ahci_platform
+ ((  _addedmodules[ahci_platform] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ahci_platform
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ahci_platform.ko.zst == /* ]]
+ found=1
+ module=ahci_platform.ko.zst
+ module=ahci_platform
+ quiet 'adding module: %s (%s)' ahci_platform /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ahci_platform.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libahci_platform
+ local r=0
+ for _ in "${@:2}"
+ add_module libahci_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libahci_platform == *\? ]]
+ target=libahci_platform
+ target=libahci_platform
+ ((  _addedmodules[libahci_platform] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_ali
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_ali == *\? ]]
+ target=pata_ali
+ target=pata_ali
+ ((  _addedmodules[pata_ali] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_ali
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ali.ko.zst == /* ]]
+ found=1
+ module=pata_ali.ko.zst
+ module=pata_ali
+ quiet 'adding module: %s (%s)' pata_ali /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_ali.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_hpt366
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_hpt366 == *\? ]]
+ target=pata_hpt366
+ target=pata_hpt366
+ ((  _addedmodules[pata_hpt366] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_hpt366
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt366.ko.zst == /* ]]
+ found=1
+ module=pata_hpt366.ko.zst
+ module=pata_hpt366
+ quiet 'adding module: %s (%s)' pata_hpt366 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_hpt366.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_netcell
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_netcell == *\? ]]
+ target=pata_netcell
+ target=pata_netcell
+ ((  _addedmodules[pata_netcell] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_netcell
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_netcell.ko.zst == /* ]]
+ found=1
+ module=pata_netcell.ko.zst
+ module=pata_netcell
+ quiet 'adding module: %s (%s)' pata_netcell /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_netcell.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_rz1000
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_rz1000 == *\? ]]
+ target=pata_rz1000
+ target=pata_rz1000
+ ((  _addedmodules[pata_rz1000] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_rz1000
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_rz1000.ko.zst == /* ]]
+ found=1
+ module=pata_rz1000.ko.zst
+ module=pata_rz1000
+ quiet 'adding module: %s (%s)' pata_rz1000 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_rz1000.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ata_generic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ata_generic == *\? ]]
+ target=ata_generic
+ target=ata_generic
+ ((  _addedmodules[ata_generic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ata_generic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ata_generic.ko.zst == /* ]]
+ found=1
+ module=ata_generic.ko.zst
+ module=ata_generic
+ quiet 'adding module: %s (%s)' ata_generic /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ata_generic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_sil680
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_sil680 == *\? ]]
+ target=pata_sil680
+ target=pata_sil680
+ ((  _addedmodules[pata_sil680] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_sil680
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sil680.ko.zst == /* ]]
+ found=1
+ module=pata_sil680.ko.zst
+ module=pata_sil680
+ quiet 'adding module: %s (%s)' pata_sil680 /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_sil680.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ata_piix
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ata_piix == *\? ]]
+ target=ata_piix
+ target=ata_piix
+ ((  _addedmodules[ata_piix] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ata_piix
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ata_piix.ko.zst == /* ]]
+ found=1
+ module=ata_piix.ko.zst
+ module=ata_piix
+ quiet 'adding module: %s (%s)' ata_piix /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/ata_piix.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_promise
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_promise == *\? ]]
+ target=sata_promise
+ target=sata_promise
+ ((  _addedmodules[sata_promise] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_promise
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_promise.ko.zst == /* ]]
+ found=1
+ module=sata_promise.ko.zst
+ module=sata_promise
+ quiet 'adding module: %s (%s)' sata_promise /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_promise.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_mv
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_mv == *\? ]]
+ target=sata_mv
+ target=sata_mv
+ ((  _addedmodules[sata_mv] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_mv
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_mv.ko.zst == /* ]]
+ found=1
+ module=sata_mv.ko.zst
+ module=sata_mv
+ quiet 'adding module: %s (%s)' sata_mv /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_mv.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_cypress
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_cypress == *\? ]]
+ target=pata_cypress
+ target=pata_cypress
+ ((  _addedmodules[pata_cypress] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_cypress
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_cypress.ko.zst == /* ]]
+ found=1
+ module=pata_cypress.ko.zst
+ module=pata_cypress
+ quiet 'adding module: %s (%s)' pata_cypress /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_cypress.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_oldpiix
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_oldpiix == *\? ]]
+ target=pata_oldpiix
+ target=pata_oldpiix
+ ((  _addedmodules[pata_oldpiix] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_oldpiix
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_oldpiix.ko.zst == /* ]]
+ found=1
+ module=pata_oldpiix.ko.zst
+ module=pata_oldpiix
+ quiet 'adding module: %s (%s)' pata_oldpiix /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_oldpiix.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sata_vsc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sata_vsc == *\? ]]
+ target=sata_vsc
+ target=sata_vsc
+ ((  _addedmodules[sata_vsc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sata_vsc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_vsc.ko.zst == /* ]]
+ found=1
+ module=sata_vsc.ko.zst
+ module=sata_vsc
+ quiet 'adding module: %s (%s)' sata_vsc /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/sata_vsc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_marvell
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_marvell == *\? ]]
+ target=pata_marvell
+ target=pata_marvell
+ ((  _addedmodules[pata_marvell] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_marvell
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_marvell.ko.zst == /* ]]
+ found=1
+ module=pata_marvell.ko.zst
+ module=pata_marvell
+ quiet 'adding module: %s (%s)' pata_marvell /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_marvell.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pata_jmicron
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pata_jmicron == *\? ]]
+ target=pata_jmicron
+ target=pata_jmicron
+ ((  _addedmodules[pata_jmicron] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pata_jmicron
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_jmicron.ko.zst == /* ]]
+ found=1
+ module=pata_jmicron.ko.zst
+ module=pata_jmicron
+ quiet 'adding module: %s (%s)' pata_jmicron /lib/modules/6.6.4-arch1-1/kernel/drivers/ata/pata_jmicron.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module zram
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ zram == *\? ]]
+ target=zram
+ target=zram
+ ((  _addedmodules[zram] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 zram
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/zram/zram.ko.zst == /* ]]
+ found=1
+ module=zram.ko.zst
+ module=zram
+ quiet 'adding module: %s (%s)' zram /lib/modules/6.6.4-arch1-1/kernel/drivers/block/zram/zram.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_blk
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_blk == *\? ]]
+ target=virtio_blk
+ target=virtio_blk
+ ((  _addedmodules[virtio_blk] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module null_blk
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ null_blk == *\? ]]
+ target=null_blk
+ target=null_blk
+ ((  _addedmodules[null_blk] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 null_blk
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/null_blk/null_blk.ko.zst == /* ]]
+ found=1
+ module=null_blk.ko.zst
+ module=null_blk
+ quiet 'adding module: %s (%s)' null_blk /lib/modules/6.6.4-arch1-1/kernel/drivers/block/null_blk/null_blk.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module floppy
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ floppy == *\? ]]
+ target=floppy
+ target=floppy
+ ((  _addedmodules[floppy] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 floppy
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/floppy.ko.zst == /* ]]
+ found=1
+ module=floppy.ko.zst
+ module=floppy
+ quiet 'adding module: %s (%s)' floppy /lib/modules/6.6.4-arch1-1/kernel/drivers/block/floppy.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rbd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rbd == *\? ]]
+ target=rbd
+ target=rbd
+ ((  _addedmodules[rbd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rbd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/rbd.ko.zst == /* ]]
+ found=1
+ module=rbd.ko.zst
+ module=rbd
+ quiet 'adding module: %s (%s)' rbd /lib/modules/6.6.4-arch1-1/kernel/drivers/block/rbd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libceph
+ local r=0
+ for _ in "${@:2}"
+ add_module libceph
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libceph == *\? ]]
+ target=libceph
+ target=libceph
+ ((  _addedmodules[libceph] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libceph
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/ceph/libceph.ko.zst == /* ]]
+ found=1
+ module=libceph.ko.zst
+ module=libceph
+ quiet 'adding module: %s (%s)' libceph /lib/modules/6.6.4-arch1-1/kernel/net/ceph/libceph.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libcrc32c dns_resolver
+ local r=0
+ for _ in "${@:2}"
+ add_module libcrc32c
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcrc32c == *\? ]]
+ target=libcrc32c
+ target=libcrc32c
+ ((  _addedmodules[libcrc32c] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libcrc32c
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/lib/libcrc32c.ko.zst == /* ]]
+ found=1
+ module=libcrc32c.ko.zst
+ module=libcrc32c
+ quiet 'adding module: %s (%s)' libcrc32c /lib/modules/6.6.4-arch1-1/kernel/lib/libcrc32c.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ read -ra softdeps
+ for module in "${softdeps[@]}"
+ [[ pre: == *: ]]
+ continue
+ for module in "${softdeps[@]}"
+ [[ crc32c == *: ]]
+ add_module 'crc32c?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crc32c? == *\? ]]
+ ign_errors=1
+ set -- crc32c
+ target=crc32c
+ target=crc32c
+ ((  _addedmodules[crc32c] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 crc32c
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/arch/x86/crypto/crc32c-intel.ko.zst == /* ]]
+ found=1
+ module=crc32c-intel.ko.zst
+ module=crc32c-intel
+ quiet 'adding module: %s (%s)' crc32c-intel /lib/modules/6.6.4-arch1-1/kernel/arch/x86/crypto/crc32c-intel.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/crypto/crc32c_generic.ko.zst == /* ]]
+ found=1
+ module=crc32c_generic.ko.zst
+ module=crc32c_generic
+ quiet 'adding module: %s (%s)' crc32c_generic /lib/modules/6.6.4-arch1-1/kernel/crypto/crc32c_generic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module dns_resolver
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dns_resolver == *\? ]]
+ target=dns_resolver
+ target=dns_resolver
+ ((  _addedmodules[dns_resolver] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dns_resolver
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/dns_resolver/dns_resolver.ko.zst == /* ]]
+ found=1
+ module=dns_resolver.ko.zst
+ module=dns_resolver
+ quiet 'adding module: %s (%s)' dns_resolver /lib/modules/6.6.4-arch1-1/kernel/net/dns_resolver/dns_resolver.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module xen_blkback
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xen_blkback == *\? ]]
+ target=xen_blkback
+ target=xen_blkback
+ ((  _addedmodules[xen_blkback] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 xen_blkback
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/xen-blkback/xen-blkback.ko.zst == /* ]]
+ found=1
+ module=xen-blkback.ko.zst
+ module=xen-blkback
+ quiet 'adding module: %s (%s)' xen-blkback /lib/modules/6.6.4-arch1-1/kernel/drivers/block/xen-blkback/xen-blkback.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module xen_blkfront
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xen_blkfront == *\? ]]
+ target=xen_blkfront
+ target=xen_blkfront
+ ((  _addedmodules[xen_blkfront] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 xen_blkfront
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/xen-blkfront.ko.zst == /* ]]
+ found=1
+ module=xen-blkfront.ko.zst
+ module=xen-blkfront
+ quiet 'adding module: %s (%s)' xen-blkfront /lib/modules/6.6.4-arch1-1/kernel/drivers/block/xen-blkfront.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aoe == *\? ]]
+ target=aoe
+ target=aoe
+ ((  _addedmodules[aoe] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aoe
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/aoe/aoe.ko.zst == /* ]]
+ found=1
+ module=aoe.ko.zst
+ module=aoe
+ quiet 'adding module: %s (%s)' aoe /lib/modules/6.6.4-arch1-1/kernel/drivers/block/aoe/aoe.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rnbd_server
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rnbd_server == *\? ]]
+ target=rnbd_server
+ target=rnbd_server
+ ((  _addedmodules[rnbd_server] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rnbd_server
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/rnbd/rnbd-server.ko.zst == /* ]]
+ found=1
+ module=rnbd-server.ko.zst
+ module=rnbd-server
+ quiet 'adding module: %s (%s)' rnbd-server /lib/modules/6.6.4-arch1-1/kernel/drivers/block/rnbd/rnbd-server.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rtrs-server
+ local r=0
+ for _ in "${@:2}"
+ add_module rtrs-server
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtrs-server == *\? ]]
+ target=rtrs-server
+ target=rtrs_server
+ ((  _addedmodules[rtrs_server] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtrs_server
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/ulp/rtrs/rtrs-server.ko.zst == /* ]]
+ found=1
+ module=rtrs-server.ko.zst
+ module=rtrs-server
+ quiet 'adding module: %s (%s)' rtrs-server /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/ulp/rtrs/rtrs-server.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rdma_cm rtrs-core ib_core
+ local r=0
+ for _ in "${@:2}"
+ add_module rdma_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rdma_cm == *\? ]]
+ target=rdma_cm
+ target=rdma_cm
+ ((  _addedmodules[rdma_cm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rdma_cm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/rdma_cm.ko.zst == /* ]]
+ found=1
+ module=rdma_cm.ko.zst
+ module=rdma_cm
+ quiet 'adding module: %s (%s)' rdma_cm /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/rdma_cm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module iw_cm ib_core ib_cm
+ local r=0
+ for _ in "${@:2}"
+ add_module iw_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ iw_cm == *\? ]]
+ target=iw_cm
+ target=iw_cm
+ ((  _addedmodules[iw_cm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 iw_cm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/iw_cm.ko.zst == /* ]]
+ found=1
+ module=iw_cm.ko.zst
+ module=iw_cm
+ quiet 'adding module: %s (%s)' iw_cm /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/iw_cm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module ib_core
+ local r=0
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ib_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/ib_core.ko.zst == /* ]]
+ found=1
+ module=ib_core.ko.zst
+ module=ib_core
+ quiet 'adding module: %s (%s)' ib_core /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/ib_core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ib_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_cm == *\? ]]
+ target=ib_cm
+ target=ib_cm
+ ((  _addedmodules[ib_cm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ib_cm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/ib_cm.ko.zst == /* ]]
+ found=1
+ module=ib_cm.ko.zst
+ module=ib_cm
+ quiet 'adding module: %s (%s)' ib_cm /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/core/ib_cm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module ib_core
+ local r=0
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtrs-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtrs-core == *\? ]]
+ target=rtrs-core
+ target=rtrs_core
+ ((  _addedmodules[rtrs_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtrs_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/ulp/rtrs/rtrs-core.ko.zst == /* ]]
+ found=1
+ module=rtrs-core.ko.zst
+ module=rtrs-core
+ quiet 'adding module: %s (%s)' rtrs-core /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/ulp/rtrs/rtrs-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module ib_core rdma_cm
+ local r=0
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rdma_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rdma_cm == *\? ]]
+ target=rdma_cm
+ target=rdma_cm
+ ((  _addedmodules[rdma_cm] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rnbd_client
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rnbd_client == *\? ]]
+ target=rnbd_client
+ target=rnbd_client
+ ((  _addedmodules[rnbd_client] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rnbd_client
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/rnbd/rnbd-client.ko.zst == /* ]]
+ found=1
+ module=rnbd-client.ko.zst
+ module=rnbd-client
+ quiet 'adding module: %s (%s)' rnbd-client /lib/modules/6.6.4-arch1-1/kernel/drivers/block/rnbd/rnbd-client.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rtrs-client rtrs-core
+ local r=0
+ for _ in "${@:2}"
+ add_module rtrs-client
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtrs-client == *\? ]]
+ target=rtrs-client
+ target=rtrs_client
+ ((  _addedmodules[rtrs_client] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtrs_client
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/ulp/rtrs/rtrs-client.ko.zst == /* ]]
+ found=1
+ module=rtrs-client.ko.zst
+ module=rtrs-client
+ quiet 'adding module: %s (%s)' rtrs-client /lib/modules/6.6.4-arch1-1/kernel/drivers/infiniband/ulp/rtrs/rtrs-client.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rtrs-core rdma_cm ib_core
+ local r=0
+ for _ in "${@:2}"
+ add_module rtrs-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtrs-core == *\? ]]
+ target=rtrs-core
+ target=rtrs_core
+ ((  _addedmodules[rtrs_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rdma_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rdma_cm == *\? ]]
+ target=rdma_cm
+ target=rdma_cm
+ ((  _addedmodules[rdma_cm] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtrs-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtrs-core == *\? ]]
+ target=rtrs-core
+ target=rtrs_core
+ ((  _addedmodules[rtrs_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module drbd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ drbd == *\? ]]
+ target=drbd
+ target=drbd
+ ((  _addedmodules[drbd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 drbd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/drbd/drbd.ko.zst == /* ]]
+ found=1
+ module=drbd.ko.zst
+ module=drbd
+ quiet 'adding module: %s (%s)' drbd /lib/modules/6.6.4-arch1-1/kernel/drivers/block/drbd/drbd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module lru_cache libcrc32c
+ local r=0
+ for _ in "${@:2}"
+ add_module lru_cache
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lru_cache == *\? ]]
+ target=lru_cache
+ target=lru_cache
+ ((  _addedmodules[lru_cache] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lru_cache
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/lib/lru_cache.ko.zst == /* ]]
+ found=1
+ module=lru_cache.ko.zst
+ module=lru_cache
+ quiet 'adding module: %s (%s)' lru_cache /lib/modules/6.6.4-arch1-1/kernel/lib/lru_cache.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libcrc32c
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcrc32c == *\? ]]
+ target=libcrc32c
+ target=libcrc32c
+ ((  _addedmodules[libcrc32c] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ublk_drv
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ublk_drv == *\? ]]
+ target=ublk_drv
+ target=ublk_drv
+ ((  _addedmodules[ublk_drv] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ublk_drv
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/ublk_drv.ko.zst == /* ]]
+ found=1
+ module=ublk_drv.ko.zst
+ module=ublk_drv
+ quiet 'adding module: %s (%s)' ublk_drv /lib/modules/6.6.4-arch1-1/kernel/drivers/block/ublk_drv.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module loop
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ loop == *\? ]]
+ target=loop
+ target=loop
+ ((  _addedmodules[loop] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 loop
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/loop.ko.zst == /* ]]
+ found=1
+ module=loop.ko.zst
+ module=loop
+ quiet 'adding module: %s (%s)' loop /lib/modules/6.6.4-arch1-1/kernel/drivers/block/loop.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mtip32xx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mtip32xx == *\? ]]
+ target=mtip32xx
+ target=mtip32xx
+ ((  _addedmodules[mtip32xx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mtip32xx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/mtip32xx/mtip32xx.ko.zst == /* ]]
+ found=1
+ module=mtip32xx.ko.zst
+ module=mtip32xx
+ quiet 'adding module: %s (%s)' mtip32xx /lib/modules/6.6.4-arch1-1/kernel/drivers/block/mtip32xx/mtip32xx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module brd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ brd == *\? ]]
+ target=brd
+ target=brd
+ ((  _addedmodules[brd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 brd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/brd.ko.zst == /* ]]
+ found=1
+ module=brd.ko.zst
+ module=brd
+ quiet 'adding module: %s (%s)' brd /lib/modules/6.6.4-arch1-1/kernel/drivers/block/brd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nbd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nbd == *\? ]]
+ target=nbd
+ target=nbd
+ ((  _addedmodules[nbd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nbd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/nbd.ko.zst == /* ]]
+ found=1
+ module=nbd.ko.zst
+ module=nbd
+ quiet 'adding module: %s (%s)' nbd /lib/modules/6.6.4-arch1-1/kernel/drivers/block/nbd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pktcdvd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pktcdvd == *\? ]]
+ target=pktcdvd
+ target=pktcdvd
+ ((  _addedmodules[pktcdvd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pktcdvd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/block/pktcdvd.ko.zst == /* ]]
+ found=1
+ module=pktcdvd.ko.zst
+ module=pktcdvd
+ quiet 'adding module: %s (%s)' pktcdvd /lib/modules/6.6.4-arch1-1/kernel/drivers/block/pktcdvd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module cdrom
+ local r=0
+ for _ in "${@:2}"
+ add_module cdrom
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cdrom == *\? ]]
+ target=cdrom
+ target=cdrom
+ ((  _addedmodules[cdrom] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cdrom
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/cdrom/cdrom.ko.zst == /* ]]
+ found=1
+ module=cdrom.ko.zst
+ module=cdrom
+ quiet 'adding module: %s (%s)' cdrom /lib/modules/6.6.4-arch1-1/kernel/drivers/cdrom/cdrom.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_loop
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_loop == *\? ]]
+ target=nvme_loop
+ target=nvme_loop
+ ((  _addedmodules[nvme_loop] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_loop
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvme-loop.ko.zst == /* ]]
+ found=1
+ module=nvme-loop.ko.zst
+ module=nvme-loop
+ quiet 'adding module: %s (%s)' nvme-loop /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvme-loop.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-fabrics nvmet nvme-core
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-fabrics
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fabrics == *\? ]]
+ target=nvme-fabrics
+ target=nvme_fabrics
+ ((  _addedmodules[nvme_fabrics] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_fabrics
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-fabrics.ko.zst == /* ]]
+ found=1
+ module=nvme-fabrics.ko.zst
+ module=nvme-fabrics
+ quiet 'adding module: %s (%s)' nvme-fabrics /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-fabrics.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-core
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-core.ko.zst == /* ]]
+ found=1
+ module=nvme-core.ko.zst
+ module=nvme-core
+ quiet 'adding module: %s (%s)' nvme-core /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-common
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-common
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-common == *\? ]]
+ target=nvme-common
+ target=nvme_common
+ ((  _addedmodules[nvme_common] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_common
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/common/nvme-common.ko.zst == /* ]]
+ found=1
+ module=nvme-common.ko.zst
+ module=nvme-common
+ quiet 'adding module: %s (%s)' nvme-common /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/common/nvme-common.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet == *\? ]]
+ target=nvmet
+ target=nvmet
+ ((  _addedmodules[nvmet] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvmet
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet.ko.zst == /* ]]
+ found=1
+ module=nvmet.ko.zst
+ module=nvmet
+ quiet 'adding module: %s (%s)' nvmet /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-common nvme-core
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-common
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-common == *\? ]]
+ target=nvme-common
+ target=nvme_common
+ ((  _addedmodules[nvme_common] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet_tcp == *\? ]]
+ target=nvmet_tcp
+ target=nvmet_tcp
+ ((  _addedmodules[nvmet_tcp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvmet_tcp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet-tcp.ko.zst == /* ]]
+ found=1
+ module=nvmet-tcp.ko.zst
+ module=nvmet-tcp
+ quiet 'adding module: %s (%s)' nvmet-tcp /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet-tcp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvmet
+ local r=0
+ for _ in "${@:2}"
+ add_module nvmet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet == *\? ]]
+ target=nvmet
+ target=nvmet
+ ((  _addedmodules[nvmet] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet_fc == *\? ]]
+ target=nvmet_fc
+ target=nvmet_fc
+ ((  _addedmodules[nvmet_fc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvmet_fc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet-fc.ko.zst == /* ]]
+ found=1
+ module=nvmet-fc.ko.zst
+ module=nvmet-fc
+ quiet 'adding module: %s (%s)' nvmet-fc /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet-fc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvmet
+ local r=0
+ for _ in "${@:2}"
+ add_module nvmet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet == *\? ]]
+ target=nvmet
+ target=nvmet
+ ((  _addedmodules[nvmet] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_fcloop
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_fcloop == *\? ]]
+ target=nvme_fcloop
+ target=nvme_fcloop
+ ((  _addedmodules[nvme_fcloop] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_fcloop
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvme-fcloop.ko.zst == /* ]]
+ found=1
+ module=nvme-fcloop.ko.zst
+ module=nvme-fcloop
+ quiet 'adding module: %s (%s)' nvme-fcloop /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvme-fcloop.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-fc nvmet-fc nvmet
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fc == *\? ]]
+ target=nvme-fc
+ target=nvme_fc
+ ((  _addedmodules[nvme_fc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_fc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-fc.ko.zst == /* ]]
+ found=1
+ module=nvme-fc.ko.zst
+ module=nvme-fc
+ quiet 'adding module: %s (%s)' nvme-fc /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-fc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-core nvme-fabrics
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme-fabrics
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fabrics == *\? ]]
+ target=nvme-fabrics
+ target=nvme_fabrics
+ ((  _addedmodules[nvme_fabrics] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet-fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet-fc == *\? ]]
+ target=nvmet-fc
+ target=nvmet_fc
+ ((  _addedmodules[nvmet_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet == *\? ]]
+ target=nvmet
+ target=nvmet
+ ((  _addedmodules[nvmet] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet == *\? ]]
+ target=nvmet
+ target=nvmet
+ ((  _addedmodules[nvmet] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet_rdma
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet_rdma == *\? ]]
+ target=nvmet_rdma
+ target=nvmet_rdma
+ ((  _addedmodules[nvmet_rdma] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvmet_rdma
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet-rdma.ko.zst == /* ]]
+ found=1
+ module=nvmet-rdma.ko.zst
+ module=nvmet-rdma
+ quiet 'adding module: %s (%s)' nvmet-rdma /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/target/nvmet-rdma.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rdma_cm ib_core nvmet
+ local r=0
+ for _ in "${@:2}"
+ add_module rdma_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rdma_cm == *\? ]]
+ target=rdma_cm
+ target=rdma_cm
+ ((  _addedmodules[rdma_cm] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet == *\? ]]
+ target=nvmet
+ target=nvmet
+ ((  _addedmodules[nvmet] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_fabrics
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_fabrics == *\? ]]
+ target=nvme_fabrics
+ target=nvme_fabrics
+ ((  _addedmodules[nvme_fabrics] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_rdma
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_rdma == *\? ]]
+ target=nvme_rdma
+ target=nvme_rdma
+ ((  _addedmodules[nvme_rdma] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_rdma
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-rdma.ko.zst == /* ]]
+ found=1
+ module=nvme-rdma.ko.zst
+ module=nvme-rdma
+ quiet 'adding module: %s (%s)' nvme-rdma /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-rdma.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-fabrics nvme-core rdma_cm ib_core
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-fabrics
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fabrics == *\? ]]
+ target=nvme-fabrics
+ target=nvme_fabrics
+ ((  _addedmodules[nvme_fabrics] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rdma_cm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rdma_cm == *\? ]]
+ target=rdma_cm
+ target=rdma_cm
+ ((  _addedmodules[rdma_cm] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ib_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ib_core == *\? ]]
+ target=ib_core
+ target=ib_core
+ ((  _addedmodules[ib_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_tcp == *\? ]]
+ target=nvme_tcp
+ target=nvme_tcp
+ ((  _addedmodules[nvme_tcp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme_tcp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-tcp.ko.zst == /* ]]
+ found=1
+ module=nvme-tcp.ko.zst
+ module=nvme-tcp
+ quiet 'adding module: %s (%s)' nvme-tcp /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme-tcp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-core nvme-fabrics
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme-fabrics
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fabrics == *\? ]]
+ target=nvme-fabrics
+ target=nvme_fabrics
+ ((  _addedmodules[nvme_fabrics] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme == *\? ]]
+ target=nvme
+ target=nvme
+ ((  _addedmodules[nvme] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nvme
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme.ko.zst == /* ]]
+ found=1
+ module=nvme.ko.zst
+ module=nvme
+ quiet 'adding module: %s (%s)' nvme /lib/modules/6.6.4-arch1-1/kernel/drivers/nvme/host/nvme.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-core
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-core == *\? ]]
+ target=nvme-core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_core == *\? ]]
+ target=nvme_core
+ target=nvme_core
+ ((  _addedmodules[nvme_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_fc == *\? ]]
+ target=nvme_fc
+ target=nvme_fc
+ ((  _addedmodules[nvme_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme_common
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme_common == *\? ]]
+ target=nvme_common
+ target=nvme_common
+ ((  _addedmodules[nvme_common] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptlan
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptlan == *\? ]]
+ target=mptlan
+ target=mptlan
+ ((  _addedmodules[mptlan] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptlan
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptlan.ko.zst == /* ]]
+ found=1
+ module=mptlan.ko.zst
+ module=mptlan
+ quiet 'adding module: %s (%s)' mptlan /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptlan.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mptbase
+ local r=0
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptbase
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptbase.ko.zst == /* ]]
+ found=1
+ module=mptbase.ko.zst
+ module=mptbase
+ quiet 'adding module: %s (%s)' mptbase /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptbase.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptsas == *\? ]]
+ target=mptsas
+ target=mptsas
+ ((  _addedmodules[mptsas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptsas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptsas.ko.zst == /* ]]
+ found=1
+ module=mptsas.ko.zst
+ module=mptsas
+ quiet 'adding module: %s (%s)' mptsas /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptsas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas mptbase mptscsih
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_transport_sas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_sas.ko.zst == /* ]]
+ found=1
+ module=scsi_transport_sas.ko.zst
+ module=scsi_transport_sas
+ quiet 'adding module: %s (%s)' scsi_transport_sas /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_sas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptscsih
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptscsih == *\? ]]
+ target=mptscsih
+ target=mptscsih
+ ((  _addedmodules[mptscsih] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptscsih
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptscsih.ko.zst == /* ]]
+ found=1
+ module=mptscsih.ko.zst
+ module=mptscsih
+ quiet 'adding module: %s (%s)' mptscsih /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptscsih.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mptbase
+ local r=0
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptscsih
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptscsih == *\? ]]
+ target=mptscsih
+ target=mptscsih
+ ((  _addedmodules[mptscsih] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptctl
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptctl == *\? ]]
+ target=mptctl
+ target=mptctl
+ ((  _addedmodules[mptctl] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptctl
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptctl.ko.zst == /* ]]
+ found=1
+ module=mptctl.ko.zst
+ module=mptctl
+ quiet 'adding module: %s (%s)' mptctl /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptctl.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mptbase
+ local r=0
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptfc == *\? ]]
+ target=mptfc
+ target=mptfc
+ ((  _addedmodules[mptfc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptfc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptfc.ko.zst == /* ]]
+ found=1
+ module=mptfc.ko.zst
+ module=mptfc
+ quiet 'adding module: %s (%s)' mptfc /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptfc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mptscsih mptbase scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module mptscsih
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptscsih == *\? ]]
+ target=mptscsih
+ target=mptscsih
+ ((  _addedmodules[mptscsih] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_transport_fc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_fc.ko.zst == /* ]]
+ found=1
+ module=scsi_transport_fc.ko.zst
+ module=scsi_transport_fc
+ quiet 'adding module: %s (%s)' scsi_transport_fc /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_fc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptspi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptspi == *\? ]]
+ target=mptspi
+ target=mptspi
+ ((  _addedmodules[mptspi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mptspi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptspi.ko.zst == /* ]]
+ found=1
+ module=mptspi.ko.zst
+ module=mptspi
+ quiet 'adding module: %s (%s)' mptspi /lib/modules/6.6.4-arch1-1/kernel/drivers/message/fusion/mptspi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mptbase mptscsih scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module mptbase
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptbase == *\? ]]
+ target=mptbase
+ target=mptbase
+ ((  _addedmodules[mptbase] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mptscsih
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mptscsih == *\? ]]
+ target=mptscsih
+ target=mptscsih
+ ((  _addedmodules[mptscsih] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_transport_spi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_spi.ko.zst == /* ]]
+ found=1
+ module=scsi_transport_spi.ko.zst
+ module=scsi_transport_spi
+ quiet 'adding module: %s (%s)' scsi_transport_spi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_spi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module efct
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ efct == *\? ]]
+ target=efct
+ target=efct
+ ((  _addedmodules[efct] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 efct
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/elx/efct.ko.zst == /* ]]
+ found=1
+ module=efct.ko.zst
+ module=efct
+ quiet 'adding module: %s (%s)' efct /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/elx/efct.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module target_core_mod scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module target_core_mod
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ target_core_mod == *\? ]]
+ target=target_core_mod
+ target=target_core_mod
+ ((  _addedmodules[target_core_mod] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 target_core_mod
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/target/target_core_mod.ko.zst == /* ]]
+ found=1
+ module=target_core_mod.ko.zst
+ module=target_core_mod
+ quiet 'adding module: %s (%s)' target_core_mod /lib/modules/6.6.4-arch1-1/kernel/drivers/target/target_core_mod.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module BusLogic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ BusLogic == *\? ]]
+ target=BusLogic
+ target=BusLogic
+ ((  _addedmodules[BusLogic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 BusLogic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/BusLogic.ko.zst == /* ]]
+ found=1
+ module=BusLogic.ko.zst
+ module=BusLogic
+ quiet 'adding module: %s (%s)' BusLogic /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/BusLogic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bnx2fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bnx2fc == *\? ]]
+ target=bnx2fc
+ target=bnx2fc
+ ((  _addedmodules[bnx2fc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bnx2fc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/bnx2fc/bnx2fc.ko.zst == /* ]]
+ found=1
+ module=bnx2fc.ko.zst
+ module=bnx2fc
+ quiet 'adding module: %s (%s)' bnx2fc /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/bnx2fc/bnx2fc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libfcoe libfc scsi_transport_fc cnic
+ local r=0
+ for _ in "${@:2}"
+ add_module libfcoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfcoe == *\? ]]
+ target=libfcoe
+ target=libfcoe
+ ((  _addedmodules[libfcoe] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libfcoe
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fcoe/libfcoe.ko.zst == /* ]]
+ found=1
+ module=libfcoe.ko.zst
+ module=libfcoe
+ quiet 'adding module: %s (%s)' libfcoe /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fcoe/libfcoe.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libfc
+ local r=0
+ for _ in "${@:2}"
+ add_module libfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfc == *\? ]]
+ target=libfc
+ target=libfc
+ ((  _addedmodules[libfc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libfc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libfc/libfc.ko.zst == /* ]]
+ found=1
+ module=libfc.ko.zst
+ module=libfc
+ quiet 'adding module: %s (%s)' libfc /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libfc/libfc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfc == *\? ]]
+ target=libfc
+ target=libfc
+ ((  _addedmodules[libfc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cnic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cnic == *\? ]]
+ target=cnic
+ target=cnic
+ ((  _addedmodules[cnic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cnic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/broadcom/cnic.ko.zst == /* ]]
+ found=1
+ module=cnic.ko.zst
+ module=cnic
+ quiet 'adding module: %s (%s)' cnic /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/broadcom/cnic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module uio
+ local r=0
+ for _ in "${@:2}"
+ add_module uio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ uio == *\? ]]
+ target=uio
+ target=uio
+ ((  _addedmodules[uio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 uio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/uio/uio.ko.zst == /* ]]
+ found=1
+ module=uio.ko.zst
+ module=uio
+ quiet 'adding module: %s (%s)' uio /lib/modules/6.6.4-arch1-1/kernel/drivers/uio/uio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pm80xx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pm80xx == *\? ]]
+ target=pm80xx
+ target=pm80xx
+ ((  _addedmodules[pm80xx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pm80xx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pm8001/pm80xx.ko.zst == /* ]]
+ found=1
+ module=pm80xx.ko.zst
+ module=pm80xx
+ quiet 'adding module: %s (%s)' pm80xx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pm8001/pm80xx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libsas scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module libsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libsas == *\? ]]
+ target=libsas
+ target=libsas
+ ((  _addedmodules[libsas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libsas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libsas/libsas.ko.zst == /* ]]
+ found=1
+ module=libsas.ko.zst
+ module=libsas
+ quiet 'adding module: %s (%s)' libsas /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libsas/libsas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wd719x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wd719x == *\? ]]
+ target=wd719x
+ target=wd719x
+ ((  _addedmodules[wd719x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wd719x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/wd719x.ko.zst == /* ]]
+ found=1
+ module=wd719x.ko.zst
+ module=wd719x
+ quiet 'adding module: %s (%s)' wd719x /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/wd719x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module eeprom_93cx6
+ local r=0
+ for _ in "${@:2}"
+ add_module eeprom_93cx6
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ eeprom_93cx6 == *\? ]]
+ target=eeprom_93cx6
+ target=eeprom_93cx6
+ ((  _addedmodules[eeprom_93cx6] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 eeprom_93cx6
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/eeprom/eeprom_93cx6.ko.zst == /* ]]
+ found=1
+ module=eeprom_93cx6.ko.zst
+ module=eeprom_93cx6
+ quiet 'adding module: %s (%s)' eeprom_93cx6 /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/eeprom/eeprom_93cx6.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  2  ))
+ add_firmware wd719x-risc.bin wd719x-wcs.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/wd719x-risc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/wd719x-risc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/wd719x-risc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/wd719x-risc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/wd719x-risc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/wd719x-risc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/wd719x-risc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/wd719x-risc.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/wd719x-wcs.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/wd719x-wcs.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/wd719x-wcs.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/wd719x-wcs.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/wd719x-wcs.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/wd719x-wcs.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/wd719x-wcs.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/wd719x-wcs.bin?(.*)'
+ return 1
++ ((  0  ))
+ warning 'Possibly missing firmware for module: '\''%s'\''' wd719x
+ local 'mesg=Possibly missing firmware for module: '\''%s'\'''
+ shift
+ printf '==> WARNING: Possibly missing firmware for module: '\''%s'\''\n' wd719x
==> WARNING: Possibly missing firmware for module: 'wd719x'
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aacraid
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aacraid == *\? ]]
+ target=aacraid
+ target=aacraid
+ ((  _addedmodules[aacraid] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aacraid
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aacraid/aacraid.ko.zst == /* ]]
+ found=1
+ module=aacraid.ko.zst
+ module=aacraid
+ quiet 'adding module: %s (%s)' aacraid /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aacraid/aacraid.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module advansys
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ advansys == *\? ]]
+ target=advansys
+ target=advansys
+ ((  _addedmodules[advansys] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 advansys
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/advansys.ko.zst == /* ]]
+ found=1
+ module=advansys.ko.zst
+ module=advansys
+ quiet 'adding module: %s (%s)' advansys /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/advansys.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  4  ))
+ add_firmware advansys/38C1600.bin advansys/38C0800.bin advansys/3550.bin advansys/mcode.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/advansys/38C1600.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/advansys/38C1600.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/advansys/38C1600.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/advansys/38C1600.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/38C1600.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/advansys/38C1600.bin?(.*)'
+ map add_file /usr/lib/firmware/advansys/38C1600.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/advansys/38C1600.bin.zst
+ local src=/usr/lib/firmware/advansys/38C1600.bin.zst dest=/usr/lib/firmware/advansys/38C1600.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/advansys/38C1600.bin.zst ]]
+ [[ -L /usr/lib/firmware/advansys/38C1600.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/advansys
+ [[ -z /usr/lib/firmware/advansys ]]
+ [[ /usr/lib/firmware/advansys != /?* ]]
+ local path=/usr/lib/firmware/advansys mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys ]]
+ quiet 'adding dir: %s' /usr/lib/firmware/advansys
+ ((  _optquiet  ))
++ ((  0  ))
+ command install -dm755 /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/38C1600.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/advansys/38C1600.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/advansys/38C1600.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/38C1600.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/advansys/38C0800.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/advansys/38C0800.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/advansys/38C0800.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/advansys/38C0800.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/38C0800.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/advansys/38C0800.bin?(.*)'
+ map add_file /usr/lib/firmware/advansys/38C0800.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/advansys/38C0800.bin.zst
+ local src=/usr/lib/firmware/advansys/38C0800.bin.zst dest=/usr/lib/firmware/advansys/38C0800.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/advansys/38C0800.bin.zst ]]
+ [[ -L /usr/lib/firmware/advansys/38C0800.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/advansys
+ [[ -z /usr/lib/firmware/advansys ]]
+ [[ /usr/lib/firmware/advansys != /?* ]]
+ local path=/usr/lib/firmware/advansys mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/38C0800.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/advansys/38C0800.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/advansys/38C0800.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/38C0800.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/advansys/3550.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/advansys/3550.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/advansys/3550.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/advansys/3550.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/3550.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/advansys/3550.bin?(.*)'
+ map add_file /usr/lib/firmware/advansys/3550.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/advansys/3550.bin.zst
+ local src=/usr/lib/firmware/advansys/3550.bin.zst dest=/usr/lib/firmware/advansys/3550.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/advansys/3550.bin.zst ]]
+ [[ -L /usr/lib/firmware/advansys/3550.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/advansys
+ [[ -z /usr/lib/firmware/advansys ]]
+ [[ /usr/lib/firmware/advansys != /?* ]]
+ local path=/usr/lib/firmware/advansys mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/3550.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/advansys/3550.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/advansys/3550.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/3550.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/advansys/mcode.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/advansys/mcode.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/advansys/mcode.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/advansys/mcode.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/mcode.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/advansys/mcode.bin?(.*)'
+ map add_file /usr/lib/firmware/advansys/mcode.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/advansys/mcode.bin.zst
+ local src=/usr/lib/firmware/advansys/mcode.bin.zst dest=/usr/lib/firmware/advansys/mcode.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/advansys/mcode.bin.zst ]]
+ [[ -L /usr/lib/firmware/advansys/mcode.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/advansys
+ [[ -z /usr/lib/firmware/advansys ]]
+ [[ /usr/lib/firmware/advansys != /?* ]]
+ local path=/usr/lib/firmware/advansys mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/mcode.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/advansys/mcode.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/advansys/mcode.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/advansys/mcode.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ return 0
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module xen_scsifront
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xen_scsifront == *\? ]]
+ target=xen_scsifront
+ target=xen_scsifront
+ ((  _addedmodules[xen_scsifront] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 xen_scsifront
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/xen-scsifront.ko.zst == /* ]]
+ found=1
+ module=xen-scsifront.ko.zst
+ module=xen-scsifront
+ quiet 'adding module: %s (%s)' xen-scsifront /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/xen-scsifront.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module dmx3191d
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dmx3191d == *\? ]]
+ target=dmx3191d
+ target=dmx3191d
+ ((  _addedmodules[dmx3191d] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dmx3191d
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/dmx3191d.ko.zst == /* ]]
+ found=1
+ module=dmx3191d.ko.zst
+ module=dmx3191d
+ quiet 'adding module: %s (%s)' dmx3191d /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/dmx3191d.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module esp_scsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ esp_scsi == *\? ]]
+ target=esp_scsi
+ target=esp_scsi
+ ((  _addedmodules[esp_scsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 esp_scsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/esp_scsi.ko.zst == /* ]]
+ found=1
+ module=esp_scsi.ko.zst
+ module=esp_scsi
+ quiet 'adding module: %s (%s)' esp_scsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/esp_scsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snic == *\? ]]
+ target=snic
+ target=snic
+ ((  _addedmodules[snic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 snic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/snic/snic.ko.zst == /* ]]
+ found=1
+ module=snic.ko.zst
+ module=snic
+ quiet 'adding module: %s (%s)' snic /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/snic/snic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module hpsa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ hpsa == *\? ]]
+ target=hpsa
+ target=hpsa
+ ((  _addedmodules[hpsa] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 hpsa
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/hpsa.ko.zst == /* ]]
+ found=1
+ module=hpsa.ko.zst
+ module=hpsa
+ quiet 'adding module: %s (%s)' hpsa /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/hpsa.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mvsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mvsas == *\? ]]
+ target=mvsas
+ target=mvsas
+ ((  _addedmodules[mvsas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mvsas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mvsas/mvsas.ko.zst == /* ]]
+ found=1
+ module=mvsas.ko.zst
+ module=mvsas
+ quiet 'adding module: %s (%s)' mvsas /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mvsas/mvsas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas libsas
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libsas == *\? ]]
+ target=libsas
+ target=libsas
+ ((  _addedmodules[libsas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module megaraid_mm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ megaraid_mm == *\? ]]
+ target=megaraid_mm
+ target=megaraid_mm
+ ((  _addedmodules[megaraid_mm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 megaraid_mm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid/megaraid_mm.ko.zst == /* ]]
+ found=1
+ module=megaraid_mm.ko.zst
+ module=megaraid_mm
+ quiet 'adding module: %s (%s)' megaraid_mm /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid/megaraid_mm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module megaraid_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ megaraid_sas == *\? ]]
+ target=megaraid_sas
+ target=megaraid_sas
+ ((  _addedmodules[megaraid_sas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 megaraid_sas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid/megaraid_sas.ko.zst == /* ]]
+ found=1
+ module=megaraid_sas.ko.zst
+ module=megaraid_sas
+ quiet 'adding module: %s (%s)' megaraid_sas /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid/megaraid_sas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module megaraid_mbox
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ megaraid_mbox == *\? ]]
+ target=megaraid_mbox
+ target=megaraid_mbox
+ ((  _addedmodules[megaraid_mbox] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 megaraid_mbox
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid/megaraid_mbox.ko.zst == /* ]]
+ found=1
+ module=megaraid_mbox.ko.zst
+ module=megaraid_mbox
+ quiet 'adding module: %s (%s)' megaraid_mbox /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid/megaraid_mbox.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module megaraid_mm
+ local r=0
+ for _ in "${@:2}"
+ add_module megaraid_mm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ megaraid_mm == *\? ]]
+ target=megaraid_mm
+ target=megaraid_mm
+ ((  _addedmodules[megaraid_mm] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cxgb3i
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cxgb3i == *\? ]]
+ target=cxgb3i
+ target=cxgb3i
+ ((  _addedmodules[cxgb3i] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cxgb3i
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/cxgbi/cxgb3i/cxgb3i.ko.zst == /* ]]
+ found=1
+ module=cxgb3i.ko.zst
+ module=cxgb3i
+ quiet 'adding module: %s (%s)' cxgb3i /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/cxgbi/cxgb3i/cxgb3i.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libcxgbi cxgb3 libiscsi libiscsi_tcp libcxgb
+ local r=0
+ for _ in "${@:2}"
+ add_module libcxgbi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcxgbi == *\? ]]
+ target=libcxgbi
+ target=libcxgbi
+ ((  _addedmodules[libcxgbi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libcxgbi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/cxgbi/libcxgbi.ko.zst == /* ]]
+ found=1
+ module=libcxgbi.ko.zst
+ module=libcxgbi
+ quiet 'adding module: %s (%s)' libcxgbi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/cxgbi/libcxgbi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libiscsi libcxgb libiscsi_tcp scsi_transport_iscsi
+ local r=0
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libiscsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libiscsi.ko.zst == /* ]]
+ found=1
+ module=libiscsi.ko.zst
+ module=libiscsi
+ quiet 'adding module: %s (%s)' libiscsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libiscsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_iscsi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_transport_iscsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_iscsi.ko.zst == /* ]]
+ found=1
+ module=scsi_transport_iscsi.ko.zst
+ module=scsi_transport_iscsi
+ quiet 'adding module: %s (%s)' scsi_transport_iscsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_iscsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libcxgb
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcxgb == *\? ]]
+ target=libcxgb
+ target=libcxgb
+ ((  _addedmodules[libcxgb] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libcxgb
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/chelsio/libcxgb/libcxgb.ko.zst == /* ]]
+ found=1
+ module=libcxgb.ko.zst
+ module=libcxgb
+ quiet 'adding module: %s (%s)' libcxgb /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/chelsio/libcxgb/libcxgb.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi_tcp == *\? ]]
+ target=libiscsi_tcp
+ target=libiscsi_tcp
+ ((  _addedmodules[libiscsi_tcp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 libiscsi_tcp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libiscsi_tcp.ko.zst == /* ]]
+ found=1
+ module=libiscsi_tcp.ko.zst
+ module=libiscsi_tcp
+ quiet 'adding module: %s (%s)' libiscsi_tcp /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/libiscsi_tcp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_iscsi libiscsi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cxgb3
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cxgb3 == *\? ]]
+ target=cxgb3
+ target=cxgb3
+ ((  _addedmodules[cxgb3] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cxgb3
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko.zst == /* ]]
+ found=1
+ module=cxgb3.ko.zst
+ module=cxgb3
+ quiet 'adding module: %s (%s)' cxgb3 /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/chelsio/cxgb3/cxgb3.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mdio
+ local r=0
+ for _ in "${@:2}"
+ add_module mdio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mdio == *\? ]]
+ target=mdio
+ target=mdio
+ ((  _addedmodules[mdio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mdio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/mdio.ko.zst == /* ]]
+ found=1
+ module=mdio.ko.zst
+ module=mdio
+ quiet 'adding module: %s (%s)' mdio /lib/modules/6.6.4-arch1-1/kernel/drivers/net/mdio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  6  ))
+ add_firmware cxgb3/ael2020_twx_edc.bin cxgb3/ael2005_twx_edc.bin cxgb3/ael2005_opt_edc.bin cxgb3/t3c_psram-1.1.0.bin cxgb3/t3b_psram-1.1.0.bin cxgb3/t3fw-7.12.0.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb3/ael2020_twx_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb3/ael2020_twx_edc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb3/ael2020_twx_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb3/ael2020_twx_edc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2020_twx_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb3/ael2020_twx_edc.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst
+ local src=/usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst dest=/usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb3
+ [[ -z /usr/lib/firmware/cxgb3 ]]
+ [[ /usr/lib/firmware/cxgb3 != /?* ]]
+ local path=/usr/lib/firmware/cxgb3 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3 ]]
+ quiet 'adding dir: %s' /usr/lib/firmware/cxgb3
+ ((  _optquiet  ))
++ ((  0  ))
+ command install -dm755 /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2020_twx_edc.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb3/ael2005_twx_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb3/ael2005_twx_edc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb3/ael2005_twx_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb3/ael2005_twx_edc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2005_twx_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb3/ael2005_twx_edc.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst
+ local src=/usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst dest=/usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb3
+ [[ -z /usr/lib/firmware/cxgb3 ]]
+ [[ /usr/lib/firmware/cxgb3 != /?* ]]
+ local path=/usr/lib/firmware/cxgb3 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2005_twx_edc.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb3/ael2005_opt_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb3/ael2005_opt_edc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb3/ael2005_opt_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb3/ael2005_opt_edc.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2005_opt_edc.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb3/ael2005_opt_edc.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst
+ local src=/usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst dest=/usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb3
+ [[ -z /usr/lib/firmware/cxgb3 ]]
+ [[ /usr/lib/firmware/cxgb3 != /?* ]]
+ local path=/usr/lib/firmware/cxgb3 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/ael2005_opt_edc.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb3/t3c_psram-1.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb3/t3c_psram-1.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb3/t3c_psram-1.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb3/t3c_psram-1.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst
+ local src=/usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst dest=/usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb3
+ [[ -z /usr/lib/firmware/cxgb3 ]]
+ [[ /usr/lib/firmware/cxgb3 != /?* ]]
+ local path=/usr/lib/firmware/cxgb3 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3c_psram-1.1.0.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb3/t3b_psram-1.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb3/t3b_psram-1.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb3/t3b_psram-1.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb3/t3b_psram-1.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst
+ local src=/usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst dest=/usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb3
+ [[ -z /usr/lib/firmware/cxgb3 ]]
+ [[ /usr/lib/firmware/cxgb3 != /?* ]]
+ local path=/usr/lib/firmware/cxgb3 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3b_psram-1.1.0.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb3/t3fw-7.12.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb3/t3fw-7.12.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb3/t3fw-7.12.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb3/t3fw-7.12.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3fw-7.12.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb3/t3fw-7.12.0.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst
+ local src=/usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst dest=/usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb3
+ [[ -z /usr/lib/firmware/cxgb3 ]]
+ [[ /usr/lib/firmware/cxgb3 != /?* ]]
+ local path=/usr/lib/firmware/cxgb3 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb3/t3fw-7.12.0.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ return 0
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi_tcp == *\? ]]
+ target=libiscsi_tcp
+ target=libiscsi_tcp
+ ((  _addedmodules[libiscsi_tcp] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libcxgb
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcxgb == *\? ]]
+ target=libcxgb
+ target=libcxgb
+ ((  _addedmodules[libcxgb] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cxgb4i
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cxgb4i == *\? ]]
+ target=cxgb4i
+ target=cxgb4i
+ ((  _addedmodules[cxgb4i] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cxgb4i
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/cxgbi/cxgb4i/cxgb4i.ko.zst == /* ]]
+ found=1
+ module=cxgb4i.ko.zst
+ module=cxgb4i
+ quiet 'adding module: %s (%s)' cxgb4i /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/cxgbi/cxgb4i/cxgb4i.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libcxgbi cxgb4 libiscsi libiscsi_tcp
+ local r=0
+ for _ in "${@:2}"
+ add_module libcxgbi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcxgbi == *\? ]]
+ target=libcxgbi
+ target=libcxgbi
+ ((  _addedmodules[libcxgbi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cxgb4
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cxgb4 == *\? ]]
+ target=cxgb4
+ target=cxgb4
+ ((  _addedmodules[cxgb4] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cxgb4
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/chelsio/cxgb4/cxgb4.ko.zst == /* ]]
+ found=1
+ module=cxgb4.ko.zst
+ module=cxgb4
+ quiet 'adding module: %s (%s)' cxgb4 /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/chelsio/cxgb4/cxgb4.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module tls
+ local r=0
+ for _ in "${@:2}"
+ add_module tls
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tls == *\? ]]
+ target=tls
+ target=tls
+ ((  _addedmodules[tls] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tls
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/tls/tls.ko.zst == /* ]]
+ found=1
+ module=tls.ko.zst
+ module=tls
+ quiet 'adding module: %s (%s)' tls /lib/modules/6.6.4-arch1-1/kernel/net/tls/tls.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  3  ))
+ add_firmware cxgb4/t6fw.bin cxgb4/t5fw.bin cxgb4/t4fw.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t6fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb4/t6fw.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb4/t6fw.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb4/t6fw.bin.zst
+ local src=/usr/lib/firmware/cxgb4/t6fw.bin.zst dest=/usr/lib/firmware/cxgb4/t6fw.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb4/t6fw.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb4/t6fw.bin.zst ]]
++ realpath -- /usr/lib/firmware/cxgb4/t6fw.bin.zst
+ srcrealpath=/usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst
+ [[ /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst != \/\u\s\r\/\l\i\b\/\f\i\r\m\w\a\r\e\/\c\x\g\b\4\/\t\6\f\w\.\b\i\n\.\z\s\t ]]
+ add_file /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst ''
+ local src=/usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst dest=/usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb4
+ [[ -z /usr/lib/firmware/cxgb4 ]]
+ [[ /usr/lib/firmware/cxgb4 != /?* ]]
+ local path=/usr/lib/firmware/cxgb4 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4 ]]
+ quiet 'adding dir: %s' /usr/lib/firmware/cxgb4
+ ((  _optquiet  ))
++ ((  0  ))
+ command install -dm755 /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst
++ ((  0  ))
+ add_symlink /usr/lib/firmware/cxgb4/t6fw.bin.zst /usr/lib/firmware/cxgb4/t6fw.bin.zst
+ local name=/usr/lib/firmware/cxgb4/t6fw.bin.zst target=/usr/lib/firmware/cxgb4/t6fw.bin.zst linkobject
+ ((  2 == 1 || 2 == 2  ))
+ [[ /usr/lib/firmware/cxgb4/t6fw.bin.zst == \/\u\s\r\/\l\i\b\/\f\i\r\m\w\a\r\e\/\c\x\g\b\4\/\t\6\f\w\.\b\i\n\.\z\s\t ]]
++ find /usr/lib/firmware/cxgb4/t6fw.bin.zst -prune -printf %l
+ linkobject=t6fw-1.27.4.0.bin.zst
+ [[ t6fw-1.27.4.0.bin.zst != *\/* ]]
+ [[ ! -L /usr/lib/firmware/cxgb4/t6fw-1.27.4.0.bin.zst ]]
+ target=t6fw-1.27.4.0.bin.zst
+ [[ -z t6fw-1.27.4.0.bin.zst ]]
+ add_dir /usr/lib/firmware/cxgb4
+ [[ -z /usr/lib/firmware/cxgb4 ]]
+ [[ /usr/lib/firmware/cxgb4 != /?* ]]
+ local path=/usr/lib/firmware/cxgb4 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4 ]]
+ return 0
++ ((  0  ))
+ [[ -L /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t6fw.bin.zst ]]
+ quiet 'adding symlink: %s -> %s' /usr/lib/firmware/cxgb4/t6fw.bin.zst t6fw-1.27.4.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ ln -sfn t6fw-1.27.4.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t6fw.bin.zst
++ ((  0  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t5fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb4/t5fw.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb4/t5fw.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb4/t5fw.bin.zst
+ local src=/usr/lib/firmware/cxgb4/t5fw.bin.zst dest=/usr/lib/firmware/cxgb4/t5fw.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb4/t5fw.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb4/t5fw.bin.zst ]]
++ realpath -- /usr/lib/firmware/cxgb4/t5fw.bin.zst
+ srcrealpath=/usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst
+ [[ /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst != \/\u\s\r\/\l\i\b\/\f\i\r\m\w\a\r\e\/\c\x\g\b\4\/\t\5\f\w\.\b\i\n\.\z\s\t ]]
+ add_file /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst ''
+ local src=/usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst dest=/usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb4
+ [[ -z /usr/lib/firmware/cxgb4 ]]
+ [[ /usr/lib/firmware/cxgb4 != /?* ]]
+ local path=/usr/lib/firmware/cxgb4 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst
++ ((  0  ))
+ add_symlink /usr/lib/firmware/cxgb4/t5fw.bin.zst /usr/lib/firmware/cxgb4/t5fw.bin.zst
+ local name=/usr/lib/firmware/cxgb4/t5fw.bin.zst target=/usr/lib/firmware/cxgb4/t5fw.bin.zst linkobject
+ ((  2 == 1 || 2 == 2  ))
+ [[ /usr/lib/firmware/cxgb4/t5fw.bin.zst == \/\u\s\r\/\l\i\b\/\f\i\r\m\w\a\r\e\/\c\x\g\b\4\/\t\5\f\w\.\b\i\n\.\z\s\t ]]
++ find /usr/lib/firmware/cxgb4/t5fw.bin.zst -prune -printf %l
+ linkobject=t5fw-1.27.4.0.bin.zst
+ [[ t5fw-1.27.4.0.bin.zst != *\/* ]]
+ [[ ! -L /usr/lib/firmware/cxgb4/t5fw-1.27.4.0.bin.zst ]]
+ target=t5fw-1.27.4.0.bin.zst
+ [[ -z t5fw-1.27.4.0.bin.zst ]]
+ add_dir /usr/lib/firmware/cxgb4
+ [[ -z /usr/lib/firmware/cxgb4 ]]
+ [[ /usr/lib/firmware/cxgb4 != /?* ]]
+ local path=/usr/lib/firmware/cxgb4 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4 ]]
+ return 0
++ ((  0  ))
+ [[ -L /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t5fw.bin.zst ]]
+ quiet 'adding symlink: %s -> %s' /usr/lib/firmware/cxgb4/t5fw.bin.zst t5fw-1.27.4.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ ln -sfn t5fw-1.27.4.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t5fw.bin.zst
++ ((  0  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb4/t4fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb4/t4fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb4/t4fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb4/t4fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t4fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cxgb4/t4fw.bin?(.*)'
+ map add_file /usr/lib/firmware/cxgb4/t4fw.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/cxgb4/t4fw.bin.zst
+ local src=/usr/lib/firmware/cxgb4/t4fw.bin.zst dest=/usr/lib/firmware/cxgb4/t4fw.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb4/t4fw.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb4/t4fw.bin.zst ]]
++ realpath -- /usr/lib/firmware/cxgb4/t4fw.bin.zst
+ srcrealpath=/usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst
+ [[ /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst != \/\u\s\r\/\l\i\b\/\f\i\r\m\w\a\r\e\/\c\x\g\b\4\/\t\4\f\w\.\b\i\n\.\z\s\t ]]
+ add_file /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst ''
+ local src=/usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst dest=/usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst ]]
+ [[ -L /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/cxgb4
+ [[ -z /usr/lib/firmware/cxgb4 ]]
+ [[ /usr/lib/firmware/cxgb4 != /?* ]]
+ local path=/usr/lib/firmware/cxgb4 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst
++ ((  0  ))
+ add_symlink /usr/lib/firmware/cxgb4/t4fw.bin.zst /usr/lib/firmware/cxgb4/t4fw.bin.zst
+ local name=/usr/lib/firmware/cxgb4/t4fw.bin.zst target=/usr/lib/firmware/cxgb4/t4fw.bin.zst linkobject
+ ((  2 == 1 || 2 == 2  ))
+ [[ /usr/lib/firmware/cxgb4/t4fw.bin.zst == \/\u\s\r\/\l\i\b\/\f\i\r\m\w\a\r\e\/\c\x\g\b\4\/\t\4\f\w\.\b\i\n\.\z\s\t ]]
++ find /usr/lib/firmware/cxgb4/t4fw.bin.zst -prune -printf %l
+ linkobject=t4fw-1.27.4.0.bin.zst
+ [[ t4fw-1.27.4.0.bin.zst != *\/* ]]
+ [[ ! -L /usr/lib/firmware/cxgb4/t4fw-1.27.4.0.bin.zst ]]
+ target=t4fw-1.27.4.0.bin.zst
+ [[ -z t4fw-1.27.4.0.bin.zst ]]
+ add_dir /usr/lib/firmware/cxgb4
+ [[ -z /usr/lib/firmware/cxgb4 ]]
+ [[ /usr/lib/firmware/cxgb4 != /?* ]]
+ local path=/usr/lib/firmware/cxgb4 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4 ]]
+ return 0
++ ((  0  ))
+ [[ -L /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t4fw.bin.zst ]]
+ quiet 'adding symlink: %s -> %s' /usr/lib/firmware/cxgb4/t4fw.bin.zst t4fw-1.27.4.0.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ ln -sfn t4fw-1.27.4.0.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t4fw.bin.zst
++ ((  0  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ return 0
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi_tcp == *\? ]]
+ target=libiscsi_tcp
+ target=libiscsi_tcp
+ ((  _addedmodules[libiscsi_tcp] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libcxgbi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libcxgbi == *\? ]]
+ target=libcxgbi
+ target=libcxgbi
+ ((  _addedmodules[libcxgbi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_scsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_scsi == *\? ]]
+ target=virtio_scsi
+ target=virtio_scsi
+ ((  _addedmodules[virtio_scsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libsas == *\? ]]
+ target=libsas
+ target=libsas
+ ((  _addedmodules[libsas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aic7xxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aic7xxx == *\? ]]
+ target=aic7xxx
+ target=aic7xxx
+ ((  _addedmodules[aic7xxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aic7xxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aic7xxx/aic7xxx.ko.zst == /* ]]
+ found=1
+ module=aic7xxx.ko.zst
+ module=aic7xxx
+ quiet 'adding module: %s (%s)' aic7xxx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aic7xxx/aic7xxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aic79xx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aic79xx == *\? ]]
+ target=aic79xx
+ target=aic79xx
+ ((  _addedmodules[aic79xx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aic79xx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aic7xxx/aic79xx.ko.zst == /* ]]
+ found=1
+ module=aic79xx.ko.zst
+ module=aic79xx
+ quiet 'adding module: %s (%s)' aic79xx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aic7xxx/aic79xx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module iscsi_boot_sysfs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ iscsi_boot_sysfs == *\? ]]
+ target=iscsi_boot_sysfs
+ target=iscsi_boot_sysfs
+ ((  _addedmodules[iscsi_boot_sysfs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 iscsi_boot_sysfs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/iscsi_boot_sysfs.ko.zst == /* ]]
+ found=1
+ module=iscsi_boot_sysfs.ko.zst
+ module=iscsi_boot_sysfs
+ quiet 'adding module: %s (%s)' iscsi_boot_sysfs /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/iscsi_boot_sysfs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module a100u2w
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ a100u2w == *\? ]]
+ target=a100u2w
+ target=a100u2w
+ ((  _addedmodules[a100u2w] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 a100u2w
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/a100u2w.ko.zst == /* ]]
+ found=1
+ module=a100u2w.ko.zst
+ module=a100u2w
+ quiet 'adding module: %s (%s)' a100u2w /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/a100u2w.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mpt3sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mpt3sas == *\? ]]
+ target=mpt3sas
+ target=mpt3sas
+ ((  _addedmodules[mpt3sas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mpt3sas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mpt3sas/mpt3sas.ko.zst == /* ]]
+ found=1
+ module=mpt3sas.ko.zst
+ module=mpt3sas
+ quiet 'adding module: %s (%s)' mpt3sas /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mpt3sas/mpt3sas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas raid_class
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module raid_class
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ raid_class == *\? ]]
+ target=raid_class
+ target=raid_class
+ ((  _addedmodules[raid_class] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 raid_class
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/raid_class.ko.zst == /* ]]
+ found=1
+ module=raid_class.ko.zst
+ module=raid_class
+ quiet 'adding module: %s (%s)' raid_class /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/raid_class.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module esas2r
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ esas2r == *\? ]]
+ target=esas2r
+ target=esas2r
+ ((  _addedmodules[esas2r] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 esas2r
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/esas2r/esas2r.ko.zst == /* ]]
+ found=1
+ module=esas2r.ko.zst
+ module=esas2r
+ quiet 'adding module: %s (%s)' esas2r /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/esas2r/esas2r.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module raid_class
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ raid_class == *\? ]]
+ target=raid_class
+ target=raid_class
+ ((  _addedmodules[raid_class] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfcoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfcoe == *\? ]]
+ target=libfcoe
+ target=libfcoe
+ ((  _addedmodules[libfcoe] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fcoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fcoe == *\? ]]
+ target=fcoe
+ target=fcoe
+ ((  _addedmodules[fcoe] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fcoe
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fcoe/fcoe.ko.zst == /* ]]
+ found=1
+ module=fcoe.ko.zst
+ module=fcoe
+ quiet 'adding module: %s (%s)' fcoe /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fcoe/fcoe.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libfc libfcoe scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module libfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfc == *\? ]]
+ target=libfc
+ target=libfc
+ ((  _addedmodules[libfc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfcoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfcoe == *\? ]]
+ target=libfcoe
+ target=libfcoe
+ ((  _addedmodules[libfcoe] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fdomain_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fdomain_pci == *\? ]]
+ target=fdomain_pci
+ target=fdomain_pci
+ ((  _addedmodules[fdomain_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fdomain_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fdomain_pci.ko.zst == /* ]]
+ found=1
+ module=fdomain_pci.ko.zst
+ module=fdomain_pci
+ quiet 'adding module: %s (%s)' fdomain_pci /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fdomain_pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module fdomain
+ local r=0
+ for _ in "${@:2}"
+ add_module fdomain
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fdomain == *\? ]]
+ target=fdomain
+ target=fdomain
+ ((  _addedmodules[fdomain] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fdomain
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fdomain.ko.zst == /* ]]
+ found=1
+ module=fdomain.ko.zst
+ module=fdomain
+ quiet 'adding module: %s (%s)' fdomain /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fdomain.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sg
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sg == *\? ]]
+ target=sg
+ target=sg
+ ((  _addedmodules[sg] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sg
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/sg.ko.zst == /* ]]
+ found=1
+ module=sg.ko.zst
+ module=sg
+ quiet 'adding module: %s (%s)' sg /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/sg.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fnic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fnic == *\? ]]
+ target=fnic
+ target=fnic
+ ((  _addedmodules[fnic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fnic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fnic/fnic.ko.zst == /* ]]
+ found=1
+ module=fnic.ko.zst
+ module=fnic
+ quiet 'adding module: %s (%s)' fnic /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/fnic/fnic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_fc libfc libfcoe
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfc == *\? ]]
+ target=libfc
+ target=libfc
+ ((  _addedmodules[libfc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfcoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfcoe == *\? ]]
+ target=libfcoe
+ target=libfcoe
+ ((  _addedmodules[libfcoe] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module imm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ imm == *\? ]]
+ target=imm
+ target=imm
+ ((  _addedmodules[imm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 imm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/imm.ko.zst == /* ]]
+ found=1
+ module=imm.ko.zst
+ module=imm
+ quiet 'adding module: %s (%s)' imm /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/imm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module parport
+ local r=0
+ for _ in "${@:2}"
+ add_module parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ parport == *\? ]]
+ target=parport
+ target=parport
+ ((  _addedmodules[parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module hptiop
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ hptiop == *\? ]]
+ target=hptiop
+ target=hptiop
+ ((  _addedmodules[hptiop] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 hptiop
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/hptiop.ko.zst == /* ]]
+ found=1
+ module=hptiop.ko.zst
+ module=hptiop
+ quiet 'adding module: %s (%s)' hptiop /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/hptiop.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module csiostor
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ csiostor == *\? ]]
+ target=csiostor
+ target=csiostor
+ ((  _addedmodules[csiostor] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 csiostor
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/csiostor/csiostor.ko.zst == /* ]]
+ found=1
+ module=csiostor.ko.zst
+ module=csiostor
+ quiet 'adding module: %s (%s)' csiostor /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/csiostor/csiostor.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ read -ra softdeps
+ for module in "${softdeps[@]}"
+ [[ pre: == *: ]]
+ continue
+ for module in "${softdeps[@]}"
+ [[ cxgb4 == *: ]]
+ add_module 'cxgb4?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cxgb4? == *\? ]]
+ ign_errors=1
+ set -- cxgb4
+ target=cxgb4
+ target=cxgb4
+ ((  _addedmodules[cxgb4] == 1  ))
+ return
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  2  ))
+ add_firmware cxgb4/t6fw.bin cxgb4/t5fw.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb4/t6fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t6fw.bin?(.*)'
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cxgb4/t5fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cxgb4/t5fw.bin?(.*)'
+ r=0
+ break
+ return 0
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module arcmsr
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ arcmsr == *\? ]]
+ target=arcmsr
+ target=arcmsr
+ ((  _addedmodules[arcmsr] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 arcmsr
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/arcmsr/arcmsr.ko.zst == /* ]]
+ found=1
+ module=arcmsr.ko.zst
+ module=arcmsr
+ quiet 'adding module: %s (%s)' arcmsr /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/arcmsr/arcmsr.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module iscsi_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ iscsi_tcp == *\? ]]
+ target=iscsi_tcp
+ target=iscsi_tcp
+ ((  _addedmodules[iscsi_tcp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 iscsi_tcp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/iscsi_tcp.ko.zst == /* ]]
+ found=1
+ module=iscsi_tcp.ko.zst
+ module=iscsi_tcp
+ quiet 'adding module: %s (%s)' iscsi_tcp /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/iscsi_tcp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_iscsi libiscsi libiscsi_tcp
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi_tcp == *\? ]]
+ target=libiscsi_tcp
+ target=libiscsi_tcp
+ ((  _addedmodules[libiscsi_tcp] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qla2xxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qla2xxx == *\? ]]
+ target=qla2xxx
+ target=qla2xxx
+ ((  _addedmodules[qla2xxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qla2xxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla2xxx/qla2xxx.ko.zst == /* ]]
+ found=1
+ module=qla2xxx.ko.zst
+ module=qla2xxx
+ quiet 'adding module: %s (%s)' qla2xxx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla2xxx/qla2xxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_fc nvme-fc
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvme-fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fc == *\? ]]
+ target=nvme-fc
+ target=nvme_fc
+ ((  _addedmodules[nvme_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  6  ))
+ add_firmware ql2500_fw.bin ql2400_fw.bin ql2322_fw.bin ql2300_fw.bin ql2200_fw.bin ql2100_fw.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ql2500_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ql2500_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ql2500_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ql2500_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ql2500_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ql2500_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ql2500_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ql2500_fw.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ql2400_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ql2400_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ql2400_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ql2400_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ql2400_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ql2400_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ql2400_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ql2400_fw.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ql2322_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ql2322_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ql2322_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ql2322_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ql2322_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ql2322_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ql2322_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ql2322_fw.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ql2300_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ql2300_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ql2300_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ql2300_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ql2300_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ql2300_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ql2300_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ql2300_fw.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ql2200_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ql2200_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ql2200_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ql2200_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ql2200_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ql2200_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ql2200_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ql2200_fw.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ql2100_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ql2100_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ql2100_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ql2100_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ql2100_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ql2100_fw.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ql2100_fw.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ql2100_fw.bin?(.*)'
+ return 1
++ ((  0  ))
+ warning 'Possibly missing firmware for module: '\''%s'\''' qla2xxx
+ local 'mesg=Possibly missing firmware for module: '\''%s'\'''
+ shift
+ printf '==> WARNING: Possibly missing firmware for module: '\''%s'\''\n' qla2xxx
==> WARNING: Possibly missing firmware for module: 'qla2xxx'
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tcm_qla2xxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tcm_qla2xxx == *\? ]]
+ target=tcm_qla2xxx
+ target=tcm_qla2xxx
+ ((  _addedmodules[tcm_qla2xxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tcm_qla2xxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla2xxx/tcm_qla2xxx.ko.zst == /* ]]
+ found=1
+ module=tcm_qla2xxx.ko.zst
+ module=tcm_qla2xxx
+ quiet 'adding module: %s (%s)' tcm_qla2xxx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla2xxx/tcm_qla2xxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module qla2xxx target_core_mod scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module qla2xxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qla2xxx == *\? ]]
+ target=qla2xxx
+ target=qla2xxx
+ ((  _addedmodules[qla2xxx] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module target_core_mod
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ target_core_mod == *\? ]]
+ target=target_core_mod
+ target=target_core_mod
+ ((  _addedmodules[target_core_mod] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ch
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ch == *\? ]]
+ target=ch
+ target=ch
+ ((  _addedmodules[ch] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ch
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ch.ko.zst == /* ]]
+ found=1
+ module=ch.ko.zst
+ module=ch
+ quiet 'adding module: %s (%s)' ch /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ch.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sym53c500_cs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sym53c500_cs == *\? ]]
+ target=sym53c500_cs
+ target=sym53c500_cs
+ ((  _addedmodules[sym53c500_cs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sym53c500_cs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/sym53c500_cs.ko.zst == /* ]]
+ found=1
+ module=sym53c500_cs.ko.zst
+ module=sym53c500_cs
+ quiet 'adding module: %s (%s)' sym53c500_cs /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/sym53c500_cs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pcmcia
+ local r=0
+ for _ in "${@:2}"
+ add_module pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcmcia == *\? ]]
+ target=pcmcia
+ target=pcmcia
+ ((  _addedmodules[pcmcia] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fdomain_cs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fdomain_cs == *\? ]]
+ target=fdomain_cs
+ target=fdomain_cs
+ ((  _addedmodules[fdomain_cs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fdomain_cs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/fdomain_cs.ko.zst == /* ]]
+ found=1
+ module=fdomain_cs.ko.zst
+ module=fdomain_cs
+ quiet 'adding module: %s (%s)' fdomain_cs /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/fdomain_cs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pcmcia fdomain
+ local r=0
+ for _ in "${@:2}"
+ add_module pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcmcia == *\? ]]
+ target=pcmcia
+ target=pcmcia
+ ((  _addedmodules[pcmcia] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fdomain
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fdomain == *\? ]]
+ target=fdomain
+ target=fdomain
+ ((  _addedmodules[fdomain] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qlogic_cs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qlogic_cs == *\? ]]
+ target=qlogic_cs
+ target=qlogic_cs
+ ((  _addedmodules[qlogic_cs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qlogic_cs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/qlogic_cs.ko.zst == /* ]]
+ found=1
+ module=qlogic_cs.ko.zst
+ module=qlogic_cs
+ quiet 'adding module: %s (%s)' qlogic_cs /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/qlogic_cs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module qlogicfas408 pcmcia
+ local r=0
+ for _ in "${@:2}"
+ add_module qlogicfas408
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qlogicfas408 == *\? ]]
+ target=qlogicfas408
+ target=qlogicfas408
+ ((  _addedmodules[qlogicfas408] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qlogicfas408
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qlogicfas408.ko.zst == /* ]]
+ found=1
+ module=qlogicfas408.ko.zst
+ module=qlogicfas408
+ quiet 'adding module: %s (%s)' qlogicfas408 /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qlogicfas408.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcmcia == *\? ]]
+ target=pcmcia
+ target=pcmcia
+ ((  _addedmodules[pcmcia] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aha152x_cs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aha152x_cs == *\? ]]
+ target=aha152x_cs
+ target=aha152x_cs
+ ((  _addedmodules[aha152x_cs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aha152x_cs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/aha152x_cs.ko.zst == /* ]]
+ found=1
+ module=aha152x_cs.ko.zst
+ module=aha152x_cs
+ quiet 'adding module: %s (%s)' aha152x_cs /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pcmcia/aha152x_cs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module pcmcia scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcmcia == *\? ]]
+ target=pcmcia
+ target=pcmcia
+ ((  _addedmodules[pcmcia] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mpi3mr
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mpi3mr == *\? ]]
+ target=mpi3mr
+ target=mpi3mr
+ ((  _addedmodules[mpi3mr] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mpi3mr
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mpi3mr/mpi3mr.ko.zst == /* ]]
+ found=1
+ module=mpi3mr.ko.zst
+ module=mpi3mr
+ quiet 'adding module: %s (%s)' mpi3mr /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mpi3mr/mpi3mr.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mvumi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mvumi == *\? ]]
+ target=mvumi
+ target=mvumi
+ ((  _addedmodules[mvumi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mvumi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mvumi.ko.zst == /* ]]
+ found=1
+ module=mvumi.ko.zst
+ module=mvumi
+ quiet 'adding module: %s (%s)' mvumi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/mvumi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qedf
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qedf == *\? ]]
+ target=qedf
+ target=qedf
+ ((  _addedmodules[qedf] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qedf
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qedf/qedf.ko.zst == /* ]]
+ found=1
+ module=qedf.ko.zst
+ module=qedf
+ quiet 'adding module: %s (%s)' qedf /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qedf/qedf.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libfc libfcoe scsi_transport_fc qed
+ local r=0
+ for _ in "${@:2}"
+ add_module libfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfc == *\? ]]
+ target=libfc
+ target=libfc
+ ((  _addedmodules[libfc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfcoe
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfcoe == *\? ]]
+ target=libfcoe
+ target=libfcoe
+ ((  _addedmodules[libfcoe] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qed
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qed == *\? ]]
+ target=qed
+ target=qed
+ ((  _addedmodules[qed] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qed
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/qlogic/qed/qed.ko.zst == /* ]]
+ found=1
+ module=qed.ko.zst
+ module=qed
+ quiet 'adding module: %s (%s)' qed /lib/modules/6.6.4-arch1-1/kernel/drivers/net/ethernet/qlogic/qed/qed.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module crc8
+ local r=0
+ for _ in "${@:2}"
+ add_module crc8
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crc8 == *\? ]]
+ target=crc8
+ target=crc8
+ ((  _addedmodules[crc8] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  1  ))
+ add_firmware qed/qed_init_values_zipped-8.59.1.0.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/qed/qed_init_values_zipped-8.59.1.0.bin?(.*)'
+ return 1
++ ((  0  ))
+ warning 'Possibly missing firmware for module: '\''%s'\''' qed
+ local 'mesg=Possibly missing firmware for module: '\''%s'\'''
+ shift
+ printf '==> WARNING: Possibly missing firmware for module: '\''%s'\''\n' qed
==> WARNING: Possibly missing firmware for module: 'qed'
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module be2iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ be2iscsi == *\? ]]
+ target=be2iscsi
+ target=be2iscsi
+ ((  _addedmodules[be2iscsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 be2iscsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/be2iscsi/be2iscsi.ko.zst == /* ]]
+ found=1
+ module=be2iscsi.ko.zst
+ module=be2iscsi
+ quiet 'adding module: %s (%s)' be2iscsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/be2iscsi/be2iscsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libiscsi scsi_transport_iscsi iscsi_boot_sysfs
+ local r=0
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module iscsi_boot_sysfs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ iscsi_boot_sysfs == *\? ]]
+ target=iscsi_boot_sysfs
+ target=iscsi_boot_sysfs
+ ((  _addedmodules[iscsi_boot_sysfs] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 3w_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 3w_sas == *\? ]]
+ target=3w_sas
+ target=3w_sas
+ ((  _addedmodules[3w_sas] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 3w_sas
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/3w-sas.ko.zst == /* ]]
+ found=1
+ module=3w-sas.ko.zst
+ module=3w-sas
+ quiet 'adding module: %s (%s)' 3w-sas /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/3w-sas.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sr_mod
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sr_mod == *\? ]]
+ target=sr_mod
+ target=sr_mod
+ ((  _addedmodules[sr_mod] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sr_mod
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/sr_mod.ko.zst == /* ]]
+ found=1
+ module=sr_mod.ko.zst
+ module=sr_mod
+ quiet 'adding module: %s (%s)' sr_mod /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/sr_mod.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module cdrom
+ local r=0
+ for _ in "${@:2}"
+ add_module cdrom
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cdrom == *\? ]]
+ target=cdrom
+ target=cdrom
+ ((  _addedmodules[cdrom] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 3w_xxxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 3w_xxxx == *\? ]]
+ target=3w_xxxx
+ target=3w_xxxx
+ ((  _addedmodules[3w_xxxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 3w_xxxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/3w-xxxx.ko.zst == /* ]]
+ found=1
+ module=3w-xxxx.ko.zst
+ module=3w-xxxx
+ quiet 'adding module: %s (%s)' 3w-xxxx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/3w-xxxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ipr
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ipr == *\? ]]
+ target=ipr
+ target=ipr
+ ((  _addedmodules[ipr] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ipr
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ipr.ko.zst == /* ]]
+ found=1
+ module=ipr.ko.zst
+ module=ipr
+ quiet 'adding module: %s (%s)' ipr /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ipr.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module megaraid
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ megaraid == *\? ]]
+ target=megaraid
+ target=megaraid
+ ((  _addedmodules[megaraid] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 megaraid
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid.ko.zst == /* ]]
+ found=1
+ module=megaraid.ko.zst
+ module=megaraid
+ quiet 'adding module: %s (%s)' megaraid /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/megaraid.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module myrs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ myrs == *\? ]]
+ target=myrs
+ target=myrs
+ ((  _addedmodules[myrs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 myrs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/myrs.ko.zst == /* ]]
+ found=1
+ module=myrs.ko.zst
+ module=myrs
+ quiet 'adding module: %s (%s)' myrs /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/myrs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module raid_class
+ local r=0
+ for _ in "${@:2}"
+ add_module raid_class
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ raid_class == *\? ]]
+ target=raid_class
+ target=raid_class
+ ((  _addedmodules[raid_class] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi_tcp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi_tcp == *\? ]]
+ target=libiscsi_tcp
+ target=libiscsi_tcp
+ ((  _addedmodules[libiscsi_tcp] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module initio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ initio == *\? ]]
+ target=initio
+ target=initio
+ ((  _addedmodules[initio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 initio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/initio.ko.zst == /* ]]
+ found=1
+ module=initio.ko.zst
+ module=initio
+ quiet 'adding module: %s (%s)' initio /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/initio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_dh_hp_sw
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_dh_hp_sw == *\? ]]
+ target=scsi_dh_hp_sw
+ target=scsi_dh_hp_sw
+ ((  _addedmodules[scsi_dh_hp_sw] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_dh_hp_sw
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_hp_sw.ko.zst == /* ]]
+ found=1
+ module=scsi_dh_hp_sw.ko.zst
+ module=scsi_dh_hp_sw
+ quiet 'adding module: %s (%s)' scsi_dh_hp_sw /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_hp_sw.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_dh_alua
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_dh_alua == *\? ]]
+ target=scsi_dh_alua
+ target=scsi_dh_alua
+ ((  _addedmodules[scsi_dh_alua] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_dh_alua
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_alua.ko.zst == /* ]]
+ found=1
+ module=scsi_dh_alua.ko.zst
+ module=scsi_dh_alua
+ quiet 'adding module: %s (%s)' scsi_dh_alua /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_alua.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_dh_emc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_dh_emc == *\? ]]
+ target=scsi_dh_emc
+ target=scsi_dh_emc
+ ((  _addedmodules[scsi_dh_emc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_dh_emc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_emc.ko.zst == /* ]]
+ found=1
+ module=scsi_dh_emc.ko.zst
+ module=scsi_dh_emc
+ quiet 'adding module: %s (%s)' scsi_dh_emc /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_emc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_dh_rdac
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_dh_rdac == *\? ]]
+ target=scsi_dh_rdac
+ target=scsi_dh_rdac
+ ((  _addedmodules[scsi_dh_rdac] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_dh_rdac
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_rdac.ko.zst == /* ]]
+ found=1
+ module=scsi_dh_rdac.ko.zst
+ module=scsi_dh_rdac
+ quiet 'adding module: %s (%s)' scsi_dh_rdac /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/device_handler/scsi_dh_rdac.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module dc395x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dc395x == *\? ]]
+ target=dc395x
+ target=dc395x
+ ((  _addedmodules[dc395x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dc395x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/dc395x.ko.zst == /* ]]
+ found=1
+ module=dc395x.ko.zst
+ module=dc395x
+ quiet 'adding module: %s (%s)' dc395x /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/dc395x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ses
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ses == *\? ]]
+ target=ses
+ target=ses
+ ((  _addedmodules[ses] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ses
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ses.ko.zst == /* ]]
+ found=1
+ module=ses.ko.zst
+ module=ses
+ quiet 'adding module: %s (%s)' ses /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ses.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module enclosure scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module enclosure
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ enclosure == *\? ]]
+ target=enclosure
+ target=enclosure
+ ((  _addedmodules[enclosure] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 enclosure
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/enclosure.ko.zst == /* ]]
+ found=1
+ module=enclosure.ko.zst
+ module=enclosure
+ quiet 'adding module: %s (%s)' enclosure /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/enclosure.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module myrb
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ myrb == *\? ]]
+ target=myrb
+ target=myrb
+ ((  _addedmodules[myrb] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 myrb
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/myrb.ko.zst == /* ]]
+ found=1
+ module=myrb.ko.zst
+ module=myrb
+ quiet 'adding module: %s (%s)' myrb /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/myrb.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module raid_class
+ local r=0
+ for _ in "${@:2}"
+ add_module raid_class
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ raid_class == *\? ]]
+ target=raid_class
+ target=raid_class
+ ((  _addedmodules[raid_class] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module stex
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ stex == *\? ]]
+ target=stex
+ target=stex
+ ((  _addedmodules[stex] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 stex
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/stex.ko.zst == /* ]]
+ found=1
+ module=stex.ko.zst
+ module=stex
+ quiet 'adding module: %s (%s)' stex /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/stex.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qla1280
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qla1280 == *\? ]]
+ target=qla1280
+ target=qla1280
+ ((  _addedmodules[qla1280] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qla1280
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla1280.ko.zst == /* ]]
+ found=1
+ module=qla1280.ko.zst
+ module=qla1280
+ quiet 'adding module: %s (%s)' qla1280 /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla1280.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  3  ))
+ add_firmware qlogic/12160.bin qlogic/1280.bin qlogic/1040.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/qlogic/12160.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/qlogic/12160.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/qlogic/12160.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/qlogic/12160.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/qlogic/12160.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/qlogic/12160.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/qlogic/12160.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/qlogic/12160.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/qlogic/1280.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/qlogic/1280.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/qlogic/1280.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/qlogic/1280.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/qlogic/1280.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/qlogic/1280.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/qlogic/1280.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/qlogic/1280.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/qlogic/1040.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/qlogic/1040.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/qlogic/1040.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/qlogic/1040.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/qlogic/1040.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/qlogic/1040.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/qlogic/1040.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/qlogic/1040.bin?(.*)'
+ return 1
++ ((  0  ))
+ warning 'Possibly missing firmware for module: '\''%s'\''' qla1280
+ local 'mesg=Possibly missing firmware for module: '\''%s'\'''
+ shift
+ printf '==> WARNING: Possibly missing firmware for module: '\''%s'\''\n' qla1280
==> WARNING: Possibly missing firmware for module: 'qla1280'
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_debug
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_debug == *\? ]]
+ target=scsi_debug
+ target=scsi_debug
+ ((  _addedmodules[scsi_debug] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_debug
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_debug.ko.zst == /* ]]
+ found=1
+ module=scsi_debug.ko.zst
+ module=scsi_debug
+ quiet 'adding module: %s (%s)' scsi_debug /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_debug.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module am53c974
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ am53c974 == *\? ]]
+ target=am53c974
+ target=am53c974
+ ((  _addedmodules[am53c974] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 am53c974
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/am53c974.ko.zst == /* ]]
+ found=1
+ module=am53c974.ko.zst
+ module=am53c974
+ quiet 'adding module: %s (%s)' am53c974 /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/am53c974.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module esp_scsi
+ local r=0
+ for _ in "${@:2}"
+ add_module esp_scsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ esp_scsi == *\? ]]
+ target=esp_scsi
+ target=esp_scsi
+ ((  _addedmodules[esp_scsi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bnx2i
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bnx2i == *\? ]]
+ target=bnx2i
+ target=bnx2i
+ ((  _addedmodules[bnx2i] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bnx2i
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/bnx2i/bnx2i.ko.zst == /* ]]
+ found=1
+ module=bnx2i.ko.zst
+ module=bnx2i
+ quiet 'adding module: %s (%s)' bnx2i /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/bnx2i/bnx2i.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libiscsi scsi_transport_iscsi cnic
+ local r=0
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cnic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cnic == *\? ]]
+ target=cnic
+ target=cnic
+ ((  _addedmodules[cnic] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qla4xxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qla4xxx == *\? ]]
+ target=qla4xxx
+ target=qla4xxx
+ ((  _addedmodules[qla4xxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qla4xxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla4xxx/qla4xxx.ko.zst == /* ]]
+ found=1
+ module=qla4xxx.ko.zst
+ module=qla4xxx
+ quiet 'adding module: %s (%s)' qla4xxx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qla4xxx/qla4xxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_iscsi libiscsi iscsi_boot_sysfs
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module iscsi_boot_sysfs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ iscsi_boot_sysfs == *\? ]]
+ target=iscsi_boot_sysfs
+ target=iscsi_boot_sysfs
+ ((  _addedmodules[iscsi_boot_sysfs] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module hv_storvsc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ hv_storvsc == *\? ]]
+ target=hv_storvsc
+ target=hv_storvsc
+ ((  _addedmodules[hv_storvsc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 hv_storvsc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/hv_storvsc.ko.zst == /* ]]
+ found=1
+ module=hv_storvsc.ko.zst
+ module=hv_storvsc
+ quiet 'adding module: %s (%s)' hv_storvsc /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/hv_storvsc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module hv_vmbus scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module hv_vmbus
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ hv_vmbus == *\? ]]
+ target=hv_vmbus
+ target=hv_vmbus
+ ((  _addedmodules[hv_vmbus] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ips
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ips == *\? ]]
+ target=ips
+ target=ips
+ ((  _addedmodules[ips] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ips
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ips.ko.zst == /* ]]
+ found=1
+ module=ips.ko.zst
+ module=ips
+ quiet 'adding module: %s (%s)' ips /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ips.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fdomain
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fdomain == *\? ]]
+ target=fdomain
+ target=fdomain
+ ((  _addedmodules[fdomain] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 3w_9xxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 3w_9xxx == *\? ]]
+ target=3w_9xxx
+ target=3w_9xxx
+ ((  _addedmodules[3w_9xxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 3w_9xxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/3w-9xxx.ko.zst == /* ]]
+ found=1
+ module=3w-9xxx.ko.zst
+ module=3w-9xxx
+ quiet 'adding module: %s (%s)' 3w-9xxx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/3w-9xxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sym53c8xx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sym53c8xx == *\? ]]
+ target=sym53c8xx
+ target=sym53c8xx
+ ((  _addedmodules[sym53c8xx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sym53c8xx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/sym53c8xx_2/sym53c8xx.ko.zst == /* ]]
+ found=1
+ module=sym53c8xx.ko.zst
+ module=sym53c8xx
+ quiet 'adding module: %s (%s)' sym53c8xx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/sym53c8xx_2/sym53c8xx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_spi
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_spi == *\? ]]
+ target=scsi_transport_spi
+ target=scsi_transport_spi
+ ((  _addedmodules[scsi_transport_spi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module smartpqi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ smartpqi == *\? ]]
+ target=smartpqi
+ target=smartpqi
+ ((  _addedmodules[smartpqi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 smartpqi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/smartpqi/smartpqi.ko.zst == /* ]]
+ found=1
+ module=smartpqi.ko.zst
+ module=smartpqi
+ quiet 'adding module: %s (%s)' smartpqi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/smartpqi/smartpqi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qlogicfas408
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qlogicfas408 == *\? ]]
+ target=qlogicfas408
+ target=qlogicfas408
+ ((  _addedmodules[qlogicfas408] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_srp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_srp == *\? ]]
+ target=scsi_transport_srp
+ target=scsi_transport_srp
+ ((  _addedmodules[scsi_transport_srp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 scsi_transport_srp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_srp.ko.zst == /* ]]
+ found=1
+ module=scsi_transport_srp.ko.zst
+ module=scsi_transport_srp
+ quiet 'adding module: %s (%s)' scsi_transport_srp /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/scsi_transport_srp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module st
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ st == *\? ]]
+ target=st
+ target=st
+ ((  _addedmodules[st] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 st
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/st.ko.zst == /* ]]
+ found=1
+ module=st.ko.zst
+ module=st
+ quiet 'adding module: %s (%s)' st /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/st.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pmcraid
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pmcraid == *\? ]]
+ target=pmcraid
+ target=pmcraid
+ ((  _addedmodules[pmcraid] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pmcraid
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pmcraid.ko.zst == /* ]]
+ found=1
+ module=pmcraid.ko.zst
+ module=pmcraid
+ quiet 'adding module: %s (%s)' pmcraid /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/pmcraid.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aic94xx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aic94xx == *\? ]]
+ target=aic94xx
+ target=aic94xx
+ ((  _addedmodules[aic94xx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aic94xx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aic94xx/aic94xx.ko.zst == /* ]]
+ found=1
+ module=aic94xx.ko.zst
+ module=aic94xx
+ quiet 'adding module: %s (%s)' aic94xx /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/aic94xx/aic94xx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libsas scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module libsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libsas == *\? ]]
+ target=libsas
+ target=libsas
+ ((  _addedmodules[libsas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  1  ))
+ add_firmware aic94xx-seq.fw
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/aic94xx-seq.fw?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/aic94xx-seq.fw?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/aic94xx-seq.fw?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/aic94xx-seq.fw?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/aic94xx-seq.fw?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/aic94xx-seq.fw?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/aic94xx-seq.fw?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/aic94xx-seq.fw?(.*)'
+ return 1
++ ((  0  ))
+ warning 'Possibly missing firmware for module: '\''%s'\''' aic94xx
+ local 'mesg=Possibly missing firmware for module: '\''%s'\'''
+ shift
+ printf '==> WARNING: Possibly missing firmware for module: '\''%s'\''\n' aic94xx
==> WARNING: Possibly missing firmware for module: 'aic94xx'
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module isci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ isci == *\? ]]
+ target=isci
+ target=isci
+ ((  _addedmodules[isci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 isci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/isci/isci.ko.zst == /* ]]
+ found=1
+ module=isci.ko.zst
+ module=isci
+ quiet 'adding module: %s (%s)' isci /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/isci/isci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libsas scsi_transport_sas
+ local r=0
+ for _ in "${@:2}"
+ add_module libsas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libsas == *\? ]]
+ target=libsas
+ target=libsas
+ ((  _addedmodules[libsas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_sas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_sas == *\? ]]
+ target=scsi_transport_sas
+ target=scsi_transport_sas
+ ((  _addedmodules[scsi_transport_sas] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  1  ))
+ add_firmware isci/isci_firmware.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/isci/isci_firmware.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/isci/isci_firmware.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/isci/isci_firmware.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/isci/isci_firmware.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/isci/isci_firmware.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/isci/isci_firmware.bin?(.*)'
+ map add_file /usr/lib/firmware/isci/isci_firmware.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/isci/isci_firmware.bin.zst
+ local src=/usr/lib/firmware/isci/isci_firmware.bin.zst dest=/usr/lib/firmware/isci/isci_firmware.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/isci/isci_firmware.bin.zst ]]
+ [[ -L /usr/lib/firmware/isci/isci_firmware.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/isci
+ [[ -z /usr/lib/firmware/isci ]]
+ [[ /usr/lib/firmware/isci != /?* ]]
+ local path=/usr/lib/firmware/isci mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/isci ]]
+ quiet 'adding dir: %s' /usr/lib/firmware/isci
+ ((  _optquiet  ))
++ ((  0  ))
+ command install -dm755 /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/isci
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/isci/isci_firmware.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/isci/isci_firmware.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/isci/isci_firmware.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/isci/isci_firmware.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ return 0
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lpfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lpfc == *\? ]]
+ target=lpfc
+ target=lpfc
+ ((  _addedmodules[lpfc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lpfc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/lpfc/lpfc.ko.zst == /* ]]
+ found=1
+ module=lpfc.ko.zst
+ module=lpfc
+ quiet 'adding module: %s (%s)' lpfc /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/lpfc/lpfc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nvme-fc scsi_transport_fc nvmet-fc
+ local r=0
+ for _ in "${@:2}"
+ add_module nvme-fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvme-fc == *\? ]]
+ target=nvme-fc
+ target=nvme_fc
+ ((  _addedmodules[nvme_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nvmet-fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nvmet-fc == *\? ]]
+ target=nvmet-fc
+ target=nvmet_fc
+ ((  _addedmodules[nvmet_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vmw_pvscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vmw_pvscsi == *\? ]]
+ target=vmw_pvscsi
+ target=vmw_pvscsi
+ ((  _addedmodules[vmw_pvscsi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vmw_pvscsi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/vmw_pvscsi.ko.zst == /* ]]
+ found=1
+ module=vmw_pvscsi.ko.zst
+ module=vmw_pvscsi
+ quiet 'adding module: %s (%s)' vmw_pvscsi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/vmw_pvscsi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qedi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qedi == *\? ]]
+ target=qedi
+ target=qedi
+ ((  _addedmodules[qedi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 qedi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qedi/qedi.ko.zst == /* ]]
+ found=1
+ module=qedi.ko.zst
+ module=qedi
+ quiet 'adding module: %s (%s)' qedi /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/qedi/qedi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module libiscsi iscsi_boot_sysfs qed uio scsi_transport_iscsi
+ local r=0
+ for _ in "${@:2}"
+ add_module libiscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libiscsi == *\? ]]
+ target=libiscsi
+ target=libiscsi
+ ((  _addedmodules[libiscsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module iscsi_boot_sysfs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ iscsi_boot_sysfs == *\? ]]
+ target=iscsi_boot_sysfs
+ target=iscsi_boot_sysfs
+ ((  _addedmodules[iscsi_boot_sysfs] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module qed
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ qed == *\? ]]
+ target=qed
+ target=qed
+ ((  _addedmodules[qed] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module uio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ uio == *\? ]]
+ target=uio
+ target=uio
+ ((  _addedmodules[uio] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module scsi_transport_iscsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_iscsi == *\? ]]
+ target=scsi_transport_iscsi
+ target=scsi_transport_iscsi
+ ((  _addedmodules[scsi_transport_iscsi] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ppa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ppa == *\? ]]
+ target=ppa
+ target=ppa
+ ((  _addedmodules[ppa] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ppa
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ppa.ko.zst == /* ]]
+ found=1
+ module=ppa.ko.zst
+ module=ppa
+ quiet 'adding module: %s (%s)' ppa /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/ppa.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module parport
+ local r=0
+ for _ in "${@:2}"
+ add_module parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ parport == *\? ]]
+ target=parport
+ target=parport
+ ((  _addedmodules[parport] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module atp870u
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ atp870u == *\? ]]
+ target=atp870u
+ target=atp870u
+ ((  _addedmodules[atp870u] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 atp870u
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/atp870u.ko.zst == /* ]]
+ found=1
+ module=atp870u.ko.zst
+ module=atp870u
+ quiet 'adding module: %s (%s)' atp870u /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/atp870u.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module libfc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ libfc == *\? ]]
+ target=libfc
+ target=libfc
+ ((  _addedmodules[libfc] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bfa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bfa == *\? ]]
+ target=bfa
+ target=bfa
+ ((  _addedmodules[bfa] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bfa
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/bfa/bfa.ko.zst == /* ]]
+ found=1
+ module=bfa.ko.zst
+ module=bfa
+ quiet 'adding module: %s (%s)' bfa /lib/modules/6.6.4-arch1-1/kernel/drivers/scsi/bfa/bfa.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module scsi_transport_fc
+ local r=0
+ for _ in "${@:2}"
+ add_module scsi_transport_fc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ scsi_transport_fc == *\? ]]
+ target=scsi_transport_fc
+ target=scsi_transport_fc
+ ((  _addedmodules[scsi_transport_fc] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  3  ))
+ add_firmware ct2fw-3.2.5.1.bin ctfw-3.2.5.1.bin cbfw-3.2.5.1.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ct2fw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ct2fw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ct2fw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ct2fw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ct2fw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ct2fw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ct2fw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ct2fw-3.2.5.1.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ctfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ctfw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ctfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ctfw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ctfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ctfw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/ctfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/ctfw-3.2.5.1.bin?(.*)'
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/cbfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/cbfw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/cbfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/cbfw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/cbfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/cbfw-3.2.5.1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/cbfw-3.2.5.1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/cbfw-3.2.5.1.bin?(.*)'
+ return 1
++ ((  0  ))
+ warning 'Possibly missing firmware for module: '\''%s'\''' bfa
+ local 'mesg=Possibly missing firmware for module: '\''%s'\'''
+ shift
+ printf '==> WARNING: Possibly missing firmware for module: '\''%s'\''\n' bfa
==> WARNING: Possibly missing firmware for module: 'bfa'
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules -f '(_cs|sl811_hcd|isp116x_hcd)' /usb/host
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules -f '(_cs|sl811_hcd|isp116x_hcd)' /usb/host
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ [[ f = \f ]]
++ modfilter+=("$OPTARG")
++ getopts :f: flag
++ shift 2
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /usb/host
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xhci-plat-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xhci-plat-hcd.ko.zst
++ mod=xhci-plat-hcd
++ printf '%s\n' xhci_plat_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ehci-platform.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ehci-platform.ko.zst
++ mod=ehci-platform
++ printf '%s\n' ehci_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/sl811_cs.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ continue 2
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ehci-fsl.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ehci-fsl.ko.zst
++ mod=ehci-fsl
++ printf '%s\n' ehci_fsl
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/fsl-mph-dr-of.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=fsl-mph-dr-of.ko.zst
++ mod=fsl-mph-dr-of
++ printf '%s\n' fsl_mph_dr_of
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/bcma-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=bcma-hcd.ko.zst
++ mod=bcma-hcd
++ printf '%s\n' bcma_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ssb-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ssb-hcd.ko.zst
++ mod=ssb-hcd
++ printf '%s\n' ssb_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/max3421-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=max3421-hcd.ko.zst
++ mod=max3421-hcd
++ printf '%s\n' max3421_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/isp116x-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=isp116x-hcd.ko.zst
++ mod=isp116x-hcd
++ printf '%s\n' isp116x_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/oxu210hp-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=oxu210hp-hcd.ko.zst
++ mod=oxu210hp-hcd
++ printf '%s\n' oxu210hp_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xhci-pci-renesas.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xhci-pci-renesas.ko.zst
++ mod=xhci-pci-renesas
++ printf '%s\n' xhci_pci_renesas
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xhci-pci.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xhci-pci.ko.zst
++ mod=xhci-pci
++ printf '%s\n' xhci_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/sl811-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=sl811-hcd.ko.zst
++ mod=sl811-hcd
++ printf '%s\n' sl811_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/r8a66597-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=r8a66597-hcd.ko.zst
++ mod=r8a66597-hcd
++ printf '%s\n' r8a66597_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/xen-hcd.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=xen-hcd.ko.zst
++ mod=xen-hcd
++ printf '%s\n' xen_hcd
++ read -r -d '' mod
++ ((  ++count  ))
++ for f in "${modfilter[@]}"
++ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/host/ohci-platform.ko.zst =~ (_cs|sl811_hcd|isp116x_hcd) ]]
++ mod=ohci-platform.ko.zst
++ mod=ohci-platform
++ printf '%s\n' ohci_platform
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module xhci_plat_hcd ehci_platform ehci_fsl fsl_mph_dr_of bcma_hcd ssb_hcd max3421_hcd isp116x_hcd oxu210hp_hcd xhci_pci_renesas xhci_pci sl811_hcd r8a66597_hcd xen_hcd ohci_platform
+ local r=0
+ for _ in "${@:2}"
+ add_module xhci_plat_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xhci_plat_hcd == *\? ]]
+ target=xhci_plat_hcd
+ target=xhci_plat_hcd
+ ((  _addedmodules[xhci_plat_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ehci_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ehci_platform == *\? ]]
+ target=ehci_platform
+ target=ehci_platform
+ ((  _addedmodules[ehci_platform] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ehci_fsl
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ehci_fsl == *\? ]]
+ target=ehci_fsl
+ target=ehci_fsl
+ ((  _addedmodules[ehci_fsl] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fsl_mph_dr_of
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fsl_mph_dr_of == *\? ]]
+ target=fsl_mph_dr_of
+ target=fsl_mph_dr_of
+ ((  _addedmodules[fsl_mph_dr_of] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bcma_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bcma_hcd == *\? ]]
+ target=bcma_hcd
+ target=bcma_hcd
+ ((  _addedmodules[bcma_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ssb_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ssb_hcd == *\? ]]
+ target=ssb_hcd
+ target=ssb_hcd
+ ((  _addedmodules[ssb_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max3421_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max3421_hcd == *\? ]]
+ target=max3421_hcd
+ target=max3421_hcd
+ ((  _addedmodules[max3421_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module isp116x_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ isp116x_hcd == *\? ]]
+ target=isp116x_hcd
+ target=isp116x_hcd
+ ((  _addedmodules[isp116x_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module oxu210hp_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ oxu210hp_hcd == *\? ]]
+ target=oxu210hp_hcd
+ target=oxu210hp_hcd
+ ((  _addedmodules[oxu210hp_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module xhci_pci_renesas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xhci_pci_renesas == *\? ]]
+ target=xhci_pci_renesas
+ target=xhci_pci_renesas
+ ((  _addedmodules[xhci_pci_renesas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module xhci_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xhci_pci == *\? ]]
+ target=xhci_pci
+ target=xhci_pci
+ ((  _addedmodules[xhci_pci] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sl811_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sl811_hcd == *\? ]]
+ target=sl811_hcd
+ target=sl811_hcd
+ ((  _addedmodules[sl811_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module r8a66597_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ r8a66597_hcd == *\? ]]
+ target=r8a66597_hcd
+ target=r8a66597_hcd
+ ((  _addedmodules[r8a66597_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module xen_hcd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ xen_hcd == *\? ]]
+ target=xen_hcd
+ target=xen_hcd
+ ((  _addedmodules[xen_hcd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ohci_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ohci_platform == *\? ]]
+ target=ohci_platform
+ target=ohci_platform
+ ((  _addedmodules[ohci_platform] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/usb/storage/
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules /drivers/usb/storage/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/usb/storage/
++ ((  ++count  ))
++ mod=ums-sddr55.ko.zst
++ mod=ums-sddr55
++ printf '%s\n' ums_sddr55
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-onetouch.ko.zst
++ mod=ums-onetouch
++ printf '%s\n' ums_onetouch
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-datafab.ko.zst
++ mod=ums-datafab
++ printf '%s\n' ums_datafab
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-jumpshot.ko.zst
++ mod=ums-jumpshot
++ printf '%s\n' ums_jumpshot
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-isd200.ko.zst
++ mod=ums-isd200
++ printf '%s\n' ums_isd200
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=usb-storage.ko.zst
++ mod=usb-storage
++ printf '%s\n' usb_storage
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-alauda.ko.zst
++ mod=ums-alauda
++ printf '%s\n' ums_alauda
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-eneub6250.ko.zst
++ mod=ums-eneub6250
++ printf '%s\n' ums_eneub6250
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-freecom.ko.zst
++ mod=ums-freecom
++ printf '%s\n' ums_freecom
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=uas.ko.zst
++ mod=uas
++ printf '%s\n' uas
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-sddr09.ko.zst
++ mod=ums-sddr09
++ printf '%s\n' ums_sddr09
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-realtek.ko.zst
++ mod=ums-realtek
++ printf '%s\n' ums_realtek
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-usbat.ko.zst
++ mod=ums-usbat
++ printf '%s\n' ums_usbat
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-karma.ko.zst
++ mod=ums-karma
++ printf '%s\n' ums_karma
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ums-cypress.ko.zst
++ mod=ums-cypress
++ printf '%s\n' ums_cypress
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module ums_sddr55 ums_onetouch ums_datafab ums_jumpshot ums_isd200 usb_storage ums_alauda ums_eneub6250 ums_freecom uas ums_sddr09 ums_realtek ums_usbat ums_karma ums_cypress
+ local r=0
+ for _ in "${@:2}"
+ add_module ums_sddr55
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_sddr55 == *\? ]]
+ target=ums_sddr55
+ target=ums_sddr55
+ ((  _addedmodules[ums_sddr55] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_sddr55
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-sddr55.ko.zst == /* ]]
+ found=1
+ module=ums-sddr55.ko.zst
+ module=ums-sddr55
+ quiet 'adding module: %s (%s)' ums-sddr55 /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-sddr55.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_onetouch
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_onetouch == *\? ]]
+ target=ums_onetouch
+ target=ums_onetouch
+ ((  _addedmodules[ums_onetouch] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_onetouch
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-onetouch.ko.zst == /* ]]
+ found=1
+ module=ums-onetouch.ko.zst
+ module=ums-onetouch
+ quiet 'adding module: %s (%s)' ums-onetouch /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-onetouch.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_datafab
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_datafab == *\? ]]
+ target=ums_datafab
+ target=ums_datafab
+ ((  _addedmodules[ums_datafab] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_datafab
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-datafab.ko.zst == /* ]]
+ found=1
+ module=ums-datafab.ko.zst
+ module=ums-datafab
+ quiet 'adding module: %s (%s)' ums-datafab /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-datafab.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_jumpshot
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_jumpshot == *\? ]]
+ target=ums_jumpshot
+ target=ums_jumpshot
+ ((  _addedmodules[ums_jumpshot] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_jumpshot
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-jumpshot.ko.zst == /* ]]
+ found=1
+ module=ums-jumpshot.ko.zst
+ module=ums-jumpshot
+ quiet 'adding module: %s (%s)' ums-jumpshot /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-jumpshot.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_isd200
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_isd200 == *\? ]]
+ target=ums_isd200
+ target=ums_isd200
+ ((  _addedmodules[ums_isd200] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_isd200
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-isd200.ko.zst == /* ]]
+ found=1
+ module=ums-isd200.ko.zst
+ module=ums-isd200
+ quiet 'adding module: %s (%s)' ums-isd200 /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-isd200.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module usb_storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb_storage == *\? ]]
+ target=usb_storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_alauda
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_alauda == *\? ]]
+ target=ums_alauda
+ target=ums_alauda
+ ((  _addedmodules[ums_alauda] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_alauda
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-alauda.ko.zst == /* ]]
+ found=1
+ module=ums-alauda.ko.zst
+ module=ums-alauda
+ quiet 'adding module: %s (%s)' ums-alauda /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-alauda.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_eneub6250
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_eneub6250 == *\? ]]
+ target=ums_eneub6250
+ target=ums_eneub6250
+ ((  _addedmodules[ums_eneub6250] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_eneub6250
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-eneub6250.ko.zst == /* ]]
+ found=1
+ module=ums-eneub6250.ko.zst
+ module=ums-eneub6250
+ quiet 'adding module: %s (%s)' ums-eneub6250 /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-eneub6250.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ firmware+=("$value")
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  6  ))
+ add_firmware ene-ub6250/ms_rdwr.bin ene-ub6250/msp_rdwr.bin ene-ub6250/ms_init.bin ene-ub6250/sd_rdwr.bin ene-ub6250/sd_init2.bin ene-ub6250/sd_init1.bin
+ local fw fwpath
+ local -a fwfile
+ local -i r=1
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ene-ub6250/ms_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ene-ub6250/ms_rdwr.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ene-ub6250/ms_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ene-ub6250/ms_rdwr.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/ms_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ene-ub6250/ms_rdwr.bin?(.*)'
+ map add_file /usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst
+ local src=/usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst dest=/usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst ]]
+ [[ -L /usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/ene-ub6250
+ [[ -z /usr/lib/firmware/ene-ub6250 ]]
+ [[ /usr/lib/firmware/ene-ub6250 != /?* ]]
+ local path=/usr/lib/firmware/ene-ub6250 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250 ]]
+ quiet 'adding dir: %s' /usr/lib/firmware/ene-ub6250
+ ((  _optquiet  ))
++ ((  0  ))
+ command install -dm755 /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/ms_rdwr.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ene-ub6250/msp_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ene-ub6250/msp_rdwr.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ene-ub6250/msp_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ene-ub6250/msp_rdwr.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/msp_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ene-ub6250/msp_rdwr.bin?(.*)'
+ map add_file /usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst
+ local src=/usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst dest=/usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst ]]
+ [[ -L /usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/ene-ub6250
+ [[ -z /usr/lib/firmware/ene-ub6250 ]]
+ [[ /usr/lib/firmware/ene-ub6250 != /?* ]]
+ local path=/usr/lib/firmware/ene-ub6250 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/msp_rdwr.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ene-ub6250/ms_init.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ene-ub6250/ms_init.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ene-ub6250/ms_init.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ene-ub6250/ms_init.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/ms_init.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ene-ub6250/ms_init.bin?(.*)'
+ map add_file /usr/lib/firmware/ene-ub6250/ms_init.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/ene-ub6250/ms_init.bin.zst
+ local src=/usr/lib/firmware/ene-ub6250/ms_init.bin.zst dest=/usr/lib/firmware/ene-ub6250/ms_init.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/ene-ub6250/ms_init.bin.zst ]]
+ [[ -L /usr/lib/firmware/ene-ub6250/ms_init.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/ene-ub6250
+ [[ -z /usr/lib/firmware/ene-ub6250 ]]
+ [[ /usr/lib/firmware/ene-ub6250 != /?* ]]
+ local path=/usr/lib/firmware/ene-ub6250 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/ms_init.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/ene-ub6250/ms_init.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/ene-ub6250/ms_init.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/ms_init.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ene-ub6250/sd_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ene-ub6250/sd_rdwr.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ene-ub6250/sd_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ene-ub6250/sd_rdwr.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_rdwr.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ene-ub6250/sd_rdwr.bin?(.*)'
+ map add_file /usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst
+ local src=/usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst dest=/usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst ]]
+ [[ -L /usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/ene-ub6250
+ [[ -z /usr/lib/firmware/ene-ub6250 ]]
+ [[ /usr/lib/firmware/ene-ub6250 != /?* ]]
+ local path=/usr/lib/firmware/ene-ub6250 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_rdwr.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ene-ub6250/sd_init2.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ene-ub6250/sd_init2.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ene-ub6250/sd_init2.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ene-ub6250/sd_init2.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_init2.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ene-ub6250/sd_init2.bin?(.*)'
+ map add_file /usr/lib/firmware/ene-ub6250/sd_init2.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/ene-ub6250/sd_init2.bin.zst
+ local src=/usr/lib/firmware/ene-ub6250/sd_init2.bin.zst dest=/usr/lib/firmware/ene-ub6250/sd_init2.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/ene-ub6250/sd_init2.bin.zst ]]
+ [[ -L /usr/lib/firmware/ene-ub6250/sd_init2.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/ene-ub6250
+ [[ -z /usr/lib/firmware/ene-ub6250 ]]
+ [[ /usr/lib/firmware/ene-ub6250 != /?* ]]
+ local path=/usr/lib/firmware/ene-ub6250 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_init2.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/ene-ub6250/sd_init2.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/ene-ub6250/sd_init2.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_init2.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ for fw in "$@"
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/updates/ene-ub6250/sd_init1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/updates/ene-ub6250/sd_init1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/lib/firmware/updates/ene-ub6250/sd_init1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/lib/firmware/updates/ene-ub6250/sd_init1.bin?(.*)'
+ for fwpath in "${_d_firmware[@]}"
+ compgen -G '/tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_init1.bin?(.*)'
+ read -r fwfile
++ compgen -G '/usr/lib/firmware/ene-ub6250/sd_init1.bin?(.*)'
+ map add_file /usr/lib/firmware/ene-ub6250/sd_init1.bin.zst
+ local r=0
+ for _ in "${@:2}"
+ add_file /usr/lib/firmware/ene-ub6250/sd_init1.bin.zst
+ local src=/usr/lib/firmware/ene-ub6250/sd_init1.bin.zst dest=/usr/lib/firmware/ene-ub6250/sd_init1.bin.zst mode= srcrealpath
+ [[ ! -f /usr/lib/firmware/ene-ub6250/sd_init1.bin.zst ]]
+ [[ -L /usr/lib/firmware/ene-ub6250/sd_init1.bin.zst ]]
+ [[ -z '' ]]
+ add_dir /usr/lib/firmware/ene-ub6250
+ [[ -z /usr/lib/firmware/ene-ub6250 ]]
+ [[ /usr/lib/firmware/ene-ub6250 != /?* ]]
+ local path=/usr/lib/firmware/ene-ub6250 mode=755
+ [[ -d /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250 ]]
+ return 0
++ ((  0  ))
+ [[ -e /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_init1.bin.zst ]]
+ quiet 'adding file: %s' /usr/lib/firmware/ene-ub6250/sd_init1.bin.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ [[ -z '' ]]
+ command cp --remove-destination --preserve=mode,ownership /usr/lib/firmware/ene-ub6250/sd_init1.bin.zst /tmp/mkinitcpio.IJMXvj/root/usr/lib/firmware/ene-ub6250/sd_init1.bin.zst
++ ((  0  ))
+ return 0
++ ((  0  ))
+ r=0
+ break
+ return 0
++ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_freecom
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_freecom == *\? ]]
+ target=ums_freecom
+ target=ums_freecom
+ ((  _addedmodules[ums_freecom] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_freecom
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-freecom.ko.zst == /* ]]
+ found=1
+ module=ums-freecom.ko.zst
+ module=ums-freecom
+ quiet 'adding module: %s (%s)' ums-freecom /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-freecom.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module uas
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ uas == *\? ]]
+ target=uas
+ target=uas
+ ((  _addedmodules[uas] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_sddr09
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_sddr09 == *\? ]]
+ target=ums_sddr09
+ target=ums_sddr09
+ ((  _addedmodules[ums_sddr09] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_sddr09
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-sddr09.ko.zst == /* ]]
+ found=1
+ module=ums-sddr09.ko.zst
+ module=ums-sddr09
+ quiet 'adding module: %s (%s)' ums-sddr09 /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-sddr09.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_realtek
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_realtek == *\? ]]
+ target=ums_realtek
+ target=ums_realtek
+ ((  _addedmodules[ums_realtek] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_realtek
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-realtek.ko.zst == /* ]]
+ found=1
+ module=ums-realtek.ko.zst
+ module=ums-realtek
+ quiet 'adding module: %s (%s)' ums-realtek /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-realtek.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_usbat
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_usbat == *\? ]]
+ target=ums_usbat
+ target=ums_usbat
+ ((  _addedmodules[ums_usbat] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_usbat
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-usbat.ko.zst == /* ]]
+ found=1
+ module=ums-usbat.ko.zst
+ module=ums-usbat
+ quiet 'adding module: %s (%s)' ums-usbat /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-usbat.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_karma
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_karma == *\? ]]
+ target=ums_karma
+ target=ums_karma
+ ((  _addedmodules[ums_karma] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_karma
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-karma.ko.zst == /* ]]
+ found=1
+ module=ums-karma.ko.zst
+ module=ums-karma
+ quiet 'adding module: %s (%s)' ums-karma /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-karma.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ums_cypress
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ums_cypress == *\? ]]
+ target=ums_cypress
+ target=ums_cypress
+ ((  _addedmodules[ums_cypress] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ums_cypress
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-cypress.ko.zst == /* ]]
+ found=1
+ module=ums-cypress.ko.zst
+ module=ums-cypress
+ quiet 'adding module: %s (%s)' ums-cypress /lib/modules/6.6.4-arch1-1/kernel/drivers/usb/storage/ums-cypress.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module usb-storage
+ local r=0
+ for _ in "${@:2}"
+ add_module usb-storage
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usb-storage == *\? ]]
+ target=usb-storage
+ target=usb_storage
+ ((  _addedmodules[usb_storage] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/firewire/
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules /drivers/firewire/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/firewire/
++ ((  ++count  ))
++ mod=firewire-core.ko.zst
++ mod=firewire-core
++ printf '%s\n' firewire_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=firewire-sbp2.ko.zst
++ mod=firewire-sbp2
++ printf '%s\n' firewire_sbp2
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=firewire-ohci.ko.zst
++ mod=firewire-ohci
++ printf '%s\n' firewire_ohci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nosy.ko.zst
++ mod=nosy
++ printf '%s\n' nosy
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=firewire-net.ko.zst
++ mod=firewire-net
++ printf '%s\n' firewire_net
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module firewire_core firewire_sbp2 firewire_ohci nosy firewire_net
+ local r=0
+ for _ in "${@:2}"
+ add_module firewire_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire_core == *\? ]]
+ target=firewire_core
+ target=firewire_core
+ ((  _addedmodules[firewire_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 firewire_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-core.ko.zst == /* ]]
+ found=1
+ module=firewire-core.ko.zst
+ module=firewire-core
+ quiet 'adding module: %s (%s)' firewire-core /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module crc-itu-t
+ local r=0
+ for _ in "${@:2}"
+ add_module crc-itu-t
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crc-itu-t == *\? ]]
+ target=crc-itu-t
+ target=crc_itu_t
+ ((  _addedmodules[crc_itu_t] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 crc_itu_t
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/lib/crc-itu-t.ko.zst == /* ]]
+ found=1
+ module=crc-itu-t.ko.zst
+ module=crc-itu-t
+ quiet 'adding module: %s (%s)' crc-itu-t /lib/modules/6.6.4-arch1-1/kernel/lib/crc-itu-t.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module firewire_sbp2
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire_sbp2 == *\? ]]
+ target=firewire_sbp2
+ target=firewire_sbp2
+ ((  _addedmodules[firewire_sbp2] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 firewire_sbp2
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-sbp2.ko.zst == /* ]]
+ found=1
+ module=firewire-sbp2.ko.zst
+ module=firewire-sbp2
+ quiet 'adding module: %s (%s)' firewire-sbp2 /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-sbp2.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module firewire-core
+ local r=0
+ for _ in "${@:2}"
+ add_module firewire-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire-core == *\? ]]
+ target=firewire-core
+ target=firewire_core
+ ((  _addedmodules[firewire_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module firewire_ohci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire_ohci == *\? ]]
+ target=firewire_ohci
+ target=firewire_ohci
+ ((  _addedmodules[firewire_ohci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 firewire_ohci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-ohci.ko.zst == /* ]]
+ found=1
+ module=firewire-ohci.ko.zst
+ module=firewire-ohci
+ quiet 'adding module: %s (%s)' firewire-ohci /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-ohci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module firewire-core
+ local r=0
+ for _ in "${@:2}"
+ add_module firewire-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire-core == *\? ]]
+ target=firewire-core
+ target=firewire_core
+ ((  _addedmodules[firewire_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nosy
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nosy == *\? ]]
+ target=nosy
+ target=nosy
+ ((  _addedmodules[nosy] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nosy
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/nosy.ko.zst == /* ]]
+ found=1
+ module=nosy.ko.zst
+ module=nosy
+ quiet 'adding module: %s (%s)' nosy /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/nosy.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module firewire_net
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire_net == *\? ]]
+ target=firewire_net
+ target=firewire_net
+ ((  _addedmodules[firewire_net] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 firewire_net
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-net.ko.zst == /* ]]
+ found=1
+ module=firewire-net.ko.zst
+ module=firewire-net
+ quiet 'adding module: %s (%s)' firewire-net /lib/modules/6.6.4-arch1-1/kernel/drivers/firewire/firewire-net.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module firewire-core
+ local r=0
+ for _ in "${@:2}"
+ add_module firewire-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ firewire-core == *\? ]]
+ target=firewire-core
+ target=firewire_core
+ ((  _addedmodules[firewire_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules '/(drivers/mmc|tifm_)'
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules '/(drivers/mmc|tifm_)'
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz '/(drivers/mmc|tifm_)'
++ ((  ++count  ))
++ mod=tifm_ms.ko.zst
++ mod=tifm_ms
++ printf '%s\n' tifm_ms
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci_f_sdh30.ko.zst
++ mod=sdhci_f_sdh30
++ printf '%s\n' sdhci_f_sdh30
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtsx_pci_sdmmc.ko.zst
++ mod=rtsx_pci_sdmmc
++ printf '%s\n' rtsx_pci_sdmmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vub300.ko.zst
++ mod=vub300
++ printf '%s\n' vub300
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=toshsd.ko.zst
++ mod=toshsd
++ printf '%s\n' toshsd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wbsd.ko.zst
++ mod=wbsd
++ printf '%s\n' wbsd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=usdhi6rol0.ko.zst
++ mod=usdhi6rol0
++ printf '%s\n' usdhi6rol0
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_hsq.ko.zst
++ mod=mmc_hsq
++ printf '%s\n' mmc_hsq
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=of_mmc_spi.ko.zst
++ mod=of_mmc_spi
++ printf '%s\n' of_mmc_spi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cqhci.ko.zst
++ mod=cqhci
++ printf '%s\n' cqhci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdricoh_cs.ko.zst
++ mod=sdricoh_cs
++ printf '%s\n' sdricoh_cs
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_spi.ko.zst
++ mod=mmc_spi
++ printf '%s\n' mmc_spi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-xenon-driver.ko.zst
++ mod=sdhci-xenon-driver
++ printf '%s\n' sdhci_xenon_driver
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci.ko.zst
++ mod=sdhci
++ printf '%s\n' sdhci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tifm_sd.ko.zst
++ mod=tifm_sd
++ printf '%s\n' tifm_sd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-pltfm.ko.zst
++ mod=sdhci-pltfm
++ printf '%s\n' sdhci_pltfm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=alcor.ko.zst
++ mod=alcor
++ printf '%s\n' alcor
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=via-sdmmc.ko.zst
++ mod=via-sdmmc
++ printf '%s\n' via_sdmmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-pci.ko.zst
++ mod=sdhci-pci
++ printf '%s\n' sdhci_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mtk-sd.ko.zst
++ mod=mtk-sd
++ printf '%s\n' mtk_sd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtsx_usb_sdmmc.ko.zst
++ mod=rtsx_usb_sdmmc
++ printf '%s\n' rtsx_usb_sdmmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ushc.ko.zst
++ mod=ushc
++ printf '%s\n' ushc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdhci-acpi.ko.zst
++ mod=sdhci-acpi
++ printf '%s\n' sdhci_acpi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=cb710-mmc.ko.zst
++ mod=cb710-mmc
++ printf '%s\n' cb710_mmc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_test.ko.zst
++ mod=mmc_test
++ printf '%s\n' mmc_test
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sdio_uart.ko.zst
++ mod=sdio_uart
++ printf '%s\n' sdio_uart
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_block.ko.zst
++ mod=mmc_block
++ printf '%s\n' mmc_block
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mmc_core.ko.zst
++ mod=mmc_core
++ printf '%s\n' mmc_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tifm_core.ko.zst
++ mod=tifm_core
++ printf '%s\n' tifm_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tifm_7xx1.ko.zst
++ mod=tifm_7xx1
++ printf '%s\n' tifm_7xx1
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module tifm_ms sdhci_f_sdh30 rtsx_pci_sdmmc vub300 toshsd wbsd usdhi6rol0 mmc_hsq of_mmc_spi cqhci sdricoh_cs mmc_spi sdhci_xenon_driver sdhci tifm_sd sdhci_pltfm alcor via_sdmmc sdhci_pci mtk_sd rtsx_usb_sdmmc ushc sdhci_acpi cb710_mmc mmc_test sdio_uart mmc_block mmc_core tifm_core tifm_7xx1
+ local r=0
+ for _ in "${@:2}"
+ add_module tifm_ms
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_ms == *\? ]]
+ target=tifm_ms
+ target=tifm_ms
+ ((  _addedmodules[tifm_ms] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tifm_ms
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/memstick/host/tifm_ms.ko.zst == /* ]]
+ found=1
+ module=tifm_ms.ko.zst
+ module=tifm_ms
+ quiet 'adding module: %s (%s)' tifm_ms /lib/modules/6.6.4-arch1-1/kernel/drivers/memstick/host/tifm_ms.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module tifm_core memstick
+ local r=0
+ for _ in "${@:2}"
+ add_module tifm_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_core == *\? ]]
+ target=tifm_core
+ target=tifm_core
+ ((  _addedmodules[tifm_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tifm_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/tifm_core.ko.zst == /* ]]
+ found=1
+ module=tifm_core.ko.zst
+ module=tifm_core
+ quiet 'adding module: %s (%s)' tifm_core /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/tifm_core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module memstick
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ memstick == *\? ]]
+ target=memstick
+ target=memstick
+ ((  _addedmodules[memstick] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 memstick
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/memstick/core/memstick.ko.zst == /* ]]
+ found=1
+ module=memstick.ko.zst
+ module=memstick
+ quiet 'adding module: %s (%s)' memstick /lib/modules/6.6.4-arch1-1/kernel/drivers/memstick/core/memstick.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci_f_sdh30
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci_f_sdh30 == *\? ]]
+ target=sdhci_f_sdh30
+ target=sdhci_f_sdh30
+ ((  _addedmodules[sdhci_f_sdh30] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdhci_f_sdh30
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci_f_sdh30.ko.zst == /* ]]
+ found=1
+ module=sdhci_f_sdh30.ko.zst
+ module=sdhci_f_sdh30
+ quiet 'adding module: %s (%s)' sdhci_f_sdh30 /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci_f_sdh30.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module sdhci sdhci-pltfm mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module sdhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci == *\? ]]
+ target=sdhci
+ target=sdhci
+ ((  _addedmodules[sdhci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdhci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci.ko.zst == /* ]]
+ found=1
+ module=sdhci.ko.zst
+ module=sdhci
+ quiet 'adding module: %s (%s)' sdhci /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci-pltfm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci-pltfm == *\? ]]
+ target=sdhci-pltfm
+ target=sdhci_pltfm
+ ((  _addedmodules[sdhci_pltfm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdhci_pltfm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-pltfm.ko.zst == /* ]]
+ found=1
+ module=sdhci-pltfm.ko.zst
+ module=sdhci-pltfm
+ quiet 'adding module: %s (%s)' sdhci-pltfm /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-pltfm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module sdhci
+ local r=0
+ for _ in "${@:2}"
+ add_module sdhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci == *\? ]]
+ target=sdhci
+ target=sdhci
+ ((  _addedmodules[sdhci] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtsx_pci_sdmmc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtsx_pci_sdmmc == *\? ]]
+ target=rtsx_pci_sdmmc
+ target=rtsx_pci_sdmmc
+ ((  _addedmodules[rtsx_pci_sdmmc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtsx_pci_sdmmc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/rtsx_pci_sdmmc.ko.zst == /* ]]
+ found=1
+ module=rtsx_pci_sdmmc.ko.zst
+ module=rtsx_pci_sdmmc
+ quiet 'adding module: %s (%s)' rtsx_pci_sdmmc /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/rtsx_pci_sdmmc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rtsx_pci mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module rtsx_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtsx_pci == *\? ]]
+ target=rtsx_pci
+ target=rtsx_pci
+ ((  _addedmodules[rtsx_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtsx_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cardreader/rtsx_pci.ko.zst == /* ]]
+ found=1
+ module=rtsx_pci.ko.zst
+ module=rtsx_pci
+ quiet 'adding module: %s (%s)' rtsx_pci /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cardreader/rtsx_pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vub300
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vub300 == *\? ]]
+ target=vub300
+ target=vub300
+ ((  _addedmodules[vub300] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vub300
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/vub300.ko.zst == /* ]]
+ found=1
+ module=vub300.ko.zst
+ module=vub300
+ quiet 'adding module: %s (%s)' vub300 /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/vub300.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module toshsd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ toshsd == *\? ]]
+ target=toshsd
+ target=toshsd
+ ((  _addedmodules[toshsd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 toshsd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/toshsd.ko.zst == /* ]]
+ found=1
+ module=toshsd.ko.zst
+ module=toshsd
+ quiet 'adding module: %s (%s)' toshsd /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/toshsd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wbsd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wbsd == *\? ]]
+ target=wbsd
+ target=wbsd
+ ((  _addedmodules[wbsd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wbsd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/wbsd.ko.zst == /* ]]
+ found=1
+ module=wbsd.ko.zst
+ module=wbsd
+ quiet 'adding module: %s (%s)' wbsd /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/wbsd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module usdhi6rol0
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ usdhi6rol0 == *\? ]]
+ target=usdhi6rol0
+ target=usdhi6rol0
+ ((  _addedmodules[usdhi6rol0] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 usdhi6rol0
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/usdhi6rol0.ko.zst == /* ]]
+ found=1
+ module=usdhi6rol0.ko.zst
+ module=usdhi6rol0
+ quiet 'adding module: %s (%s)' usdhi6rol0 /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/usdhi6rol0.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_hsq
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_hsq == *\? ]]
+ target=mmc_hsq
+ target=mmc_hsq
+ ((  _addedmodules[mmc_hsq] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mmc_hsq
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/mmc_hsq.ko.zst == /* ]]
+ found=1
+ module=mmc_hsq.ko.zst
+ module=mmc_hsq
+ quiet 'adding module: %s (%s)' mmc_hsq /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/mmc_hsq.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module of_mmc_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ of_mmc_spi == *\? ]]
+ target=of_mmc_spi
+ target=of_mmc_spi
+ ((  _addedmodules[of_mmc_spi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 of_mmc_spi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/of_mmc_spi.ko.zst == /* ]]
+ found=1
+ module=of_mmc_spi.ko.zst
+ module=of_mmc_spi
+ quiet 'adding module: %s (%s)' of_mmc_spi /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/of_mmc_spi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cqhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cqhci == *\? ]]
+ target=cqhci
+ target=cqhci
+ ((  _addedmodules[cqhci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cqhci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/cqhci.ko.zst == /* ]]
+ found=1
+ module=cqhci.ko.zst
+ module=cqhci
+ quiet 'adding module: %s (%s)' cqhci /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/cqhci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdricoh_cs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdricoh_cs == *\? ]]
+ target=sdricoh_cs
+ target=sdricoh_cs
+ ((  _addedmodules[sdricoh_cs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdricoh_cs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdricoh_cs.ko.zst == /* ]]
+ found=1
+ module=sdricoh_cs.ko.zst
+ module=sdricoh_cs
+ quiet 'adding module: %s (%s)' sdricoh_cs /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdricoh_cs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core pcmcia
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pcmcia
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcmcia == *\? ]]
+ target=pcmcia
+ target=pcmcia
+ ((  _addedmodules[pcmcia] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_spi == *\? ]]
+ target=mmc_spi
+ target=mmc_spi
+ ((  _addedmodules[mmc_spi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mmc_spi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/mmc_spi.ko.zst == /* ]]
+ found=1
+ module=mmc_spi.ko.zst
+ module=mmc_spi
+ quiet 'adding module: %s (%s)' mmc_spi /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/mmc_spi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core of_mmc_spi crc7 crc-itu-t
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module of_mmc_spi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ of_mmc_spi == *\? ]]
+ target=of_mmc_spi
+ target=of_mmc_spi
+ ((  _addedmodules[of_mmc_spi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module crc7
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crc7 == *\? ]]
+ target=crc7
+ target=crc7
+ ((  _addedmodules[crc7] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 crc7
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/lib/crc7.ko.zst == /* ]]
+ found=1
+ module=crc7.ko.zst
+ module=crc7
+ quiet 'adding module: %s (%s)' crc7 /lib/modules/6.6.4-arch1-1/kernel/lib/crc7.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module crc-itu-t
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crc-itu-t == *\? ]]
+ target=crc-itu-t
+ target=crc_itu_t
+ ((  _addedmodules[crc_itu_t] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci_xenon_driver
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci_xenon_driver == *\? ]]
+ target=sdhci_xenon_driver
+ target=sdhci_xenon_driver
+ ((  _addedmodules[sdhci_xenon_driver] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdhci_xenon_driver
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-xenon-driver.ko.zst == /* ]]
+ found=1
+ module=sdhci-xenon-driver.ko.zst
+ module=sdhci-xenon-driver
+ quiet 'adding module: %s (%s)' sdhci-xenon-driver /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-xenon-driver.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module sdhci sdhci-pltfm mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module sdhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci == *\? ]]
+ target=sdhci
+ target=sdhci
+ ((  _addedmodules[sdhci] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci-pltfm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci-pltfm == *\? ]]
+ target=sdhci-pltfm
+ target=sdhci_pltfm
+ ((  _addedmodules[sdhci_pltfm] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci == *\? ]]
+ target=sdhci
+ target=sdhci
+ ((  _addedmodules[sdhci] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tifm_sd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_sd == *\? ]]
+ target=tifm_sd
+ target=tifm_sd
+ ((  _addedmodules[tifm_sd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tifm_sd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/tifm_sd.ko.zst == /* ]]
+ found=1
+ module=tifm_sd.ko.zst
+ module=tifm_sd
+ quiet 'adding module: %s (%s)' tifm_sd /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/tifm_sd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module tifm_core mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module tifm_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_core == *\? ]]
+ target=tifm_core
+ target=tifm_core
+ ((  _addedmodules[tifm_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci_pltfm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci_pltfm == *\? ]]
+ target=sdhci_pltfm
+ target=sdhci_pltfm
+ ((  _addedmodules[sdhci_pltfm] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module alcor
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ alcor == *\? ]]
+ target=alcor
+ target=alcor
+ ((  _addedmodules[alcor] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 alcor
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/alcor.ko.zst == /* ]]
+ found=1
+ module=alcor.ko.zst
+ module=alcor
+ quiet 'adding module: %s (%s)' alcor /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/alcor.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core alcor_pci
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module alcor_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ alcor_pci == *\? ]]
+ target=alcor_pci
+ target=alcor_pci
+ ((  _addedmodules[alcor_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 alcor_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cardreader/alcor_pci.ko.zst == /* ]]
+ found=1
+ module=alcor_pci.ko.zst
+ module=alcor_pci
+ quiet 'adding module: %s (%s)' alcor_pci /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cardreader/alcor_pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module via_sdmmc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ via_sdmmc == *\? ]]
+ target=via_sdmmc
+ target=via_sdmmc
+ ((  _addedmodules[via_sdmmc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 via_sdmmc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/via-sdmmc.ko.zst == /* ]]
+ found=1
+ module=via-sdmmc.ko.zst
+ module=via-sdmmc
+ quiet 'adding module: %s (%s)' via-sdmmc /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/via-sdmmc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci_pci == *\? ]]
+ target=sdhci_pci
+ target=sdhci_pci
+ ((  _addedmodules[sdhci_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdhci_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-pci.ko.zst == /* ]]
+ found=1
+ module=sdhci-pci.ko.zst
+ module=sdhci-pci
+ quiet 'adding module: %s (%s)' sdhci-pci /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core cqhci sdhci
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cqhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cqhci == *\? ]]
+ target=cqhci
+ target=cqhci
+ ((  _addedmodules[cqhci] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci == *\? ]]
+ target=sdhci
+ target=sdhci
+ ((  _addedmodules[sdhci] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mtk_sd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mtk_sd == *\? ]]
+ target=mtk_sd
+ target=mtk_sd
+ ((  _addedmodules[mtk_sd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mtk_sd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/mtk-sd.ko.zst == /* ]]
+ found=1
+ module=mtk-sd.ko.zst
+ module=mtk-sd
+ quiet 'adding module: %s (%s)' mtk-sd /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/mtk-sd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core cqhci
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cqhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cqhci == *\? ]]
+ target=cqhci
+ target=cqhci
+ ((  _addedmodules[cqhci] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtsx_usb_sdmmc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtsx_usb_sdmmc == *\? ]]
+ target=rtsx_usb_sdmmc
+ target=rtsx_usb_sdmmc
+ ((  _addedmodules[rtsx_usb_sdmmc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtsx_usb_sdmmc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/rtsx_usb_sdmmc.ko.zst == /* ]]
+ found=1
+ module=rtsx_usb_sdmmc.ko.zst
+ module=rtsx_usb_sdmmc
+ quiet 'adding module: %s (%s)' rtsx_usb_sdmmc /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/rtsx_usb_sdmmc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rtsx_usb mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module rtsx_usb
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtsx_usb == *\? ]]
+ target=rtsx_usb
+ target=rtsx_usb
+ ((  _addedmodules[rtsx_usb] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtsx_usb
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cardreader/rtsx_usb.ko.zst == /* ]]
+ found=1
+ module=rtsx_usb.ko.zst
+ module=rtsx_usb
+ quiet 'adding module: %s (%s)' rtsx_usb /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cardreader/rtsx_usb.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ushc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ushc == *\? ]]
+ target=ushc
+ target=ushc
+ ((  _addedmodules[ushc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ushc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/ushc.ko.zst == /* ]]
+ found=1
+ module=ushc.ko.zst
+ module=ushc
+ quiet 'adding module: %s (%s)' ushc /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/ushc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdhci_acpi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci_acpi == *\? ]]
+ target=sdhci_acpi
+ target=sdhci_acpi
+ ((  _addedmodules[sdhci_acpi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdhci_acpi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-acpi.ko.zst == /* ]]
+ found=1
+ module=sdhci-acpi.ko.zst
+ module=sdhci-acpi
+ quiet 'adding module: %s (%s)' sdhci-acpi /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/sdhci-acpi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module sdhci mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module sdhci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdhci == *\? ]]
+ target=sdhci
+ target=sdhci
+ ((  _addedmodules[sdhci] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cb710_mmc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cb710_mmc == *\? ]]
+ target=cb710_mmc
+ target=cb710_mmc
+ ((  _addedmodules[cb710_mmc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cb710_mmc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/cb710-mmc.ko.zst == /* ]]
+ found=1
+ module=cb710-mmc.ko.zst
+ module=cb710-mmc
+ quiet 'adding module: %s (%s)' cb710-mmc /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/host/cb710-mmc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core cb710
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module cb710
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ cb710 == *\? ]]
+ target=cb710
+ target=cb710
+ ((  _addedmodules[cb710] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 cb710
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cb710/cb710.ko.zst == /* ]]
+ found=1
+ module=cb710.ko.zst
+ module=cb710
+ quiet 'adding module: %s (%s)' cb710 /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/cb710/cb710.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_test
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_test == *\? ]]
+ target=mmc_test
+ target=mmc_test
+ ((  _addedmodules[mmc_test] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mmc_test
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_test.ko.zst == /* ]]
+ found=1
+ module=mmc_test.ko.zst
+ module=mmc_test
+ quiet 'adding module: %s (%s)' mmc_test /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/mmc_test.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sdio_uart
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sdio_uart == *\? ]]
+ target=sdio_uart
+ target=sdio_uart
+ ((  _addedmodules[sdio_uart] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sdio_uart
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/sdio_uart.ko.zst == /* ]]
+ found=1
+ module=sdio_uart.ko.zst
+ module=sdio_uart
+ quiet 'adding module: %s (%s)' sdio_uart /lib/modules/6.6.4-arch1-1/kernel/drivers/mmc/core/sdio_uart.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mmc_core
+ local r=0
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_block
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_block == *\? ]]
+ target=mmc_block
+ target=mmc_block
+ ((  _addedmodules[mmc_block] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mmc_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mmc_core == *\? ]]
+ target=mmc_core
+ target=mmc_core
+ ((  _addedmodules[mmc_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tifm_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_core == *\? ]]
+ target=tifm_core
+ target=tifm_core
+ ((  _addedmodules[tifm_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tifm_7xx1
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_7xx1 == *\? ]]
+ target=tifm_7xx1
+ target=tifm_7xx1
+ ((  _addedmodules[tifm_7xx1] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tifm_7xx1
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/tifm_7xx1.ko.zst == /* ]]
+ found=1
+ module=tifm_7xx1.ko.zst
+ module=tifm_7xx1
+ quiet 'adding module: %s (%s)' tifm_7xx1 /lib/modules/6.6.4-arch1-1/kernel/drivers/misc/tifm_7xx1.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module tifm_core
+ local r=0
+ for _ in "${@:2}"
+ add_module tifm_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tifm_core == *\? ]]
+ target=tifm_core
+ target=tifm_core
+ ((  _addedmodules[tifm_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/spi/
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules /drivers/spi/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/spi/
++ ((  ++count  ))
++ mod=spi-butterfly.ko.zst
++ mod=spi-butterfly
++ printf '%s\n' spi_butterfly
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-lm70llp.ko.zst
++ mod=spi-lm70llp
++ printf '%s\n' spi_lm70llp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-tle62x0.ko.zst
++ mod=spi-tle62x0
++ printf '%s\n' spi_tle62x0
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-mxic.ko.zst
++ mod=spi-mxic
++ printf '%s\n' spi_mxic
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-sc18is602.ko.zst
++ mod=spi-sc18is602
++ printf '%s\n' spi_sc18is602
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-intel.ko.zst
++ mod=spi-intel
++ printf '%s\n' spi_intel
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-microchip-core.ko.zst
++ mod=spi-microchip-core
++ printf '%s\n' spi_microchip_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-intel-platform.ko.zst
++ mod=spi-intel-platform
++ printf '%s\n' spi_intel_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dw-mmio.ko.zst
++ mod=spi-dw-mmio
++ printf '%s\n' spi_dw_mmio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-cs42l43.ko.zst
++ mod=spi-cs42l43
++ printf '%s\n' spi_cs42l43
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dw.ko.zst
++ mod=spi-dw
++ printf '%s\n' spi_dw
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-axi-spi-engine.ko.zst
++ mod=spi-axi-spi-engine
++ printf '%s\n' spi_axi_spi_engine
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-altera-core.ko.zst
++ mod=spi-altera-core
++ printf '%s\n' spi_altera_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-sifive.ko.zst
++ mod=spi-sifive
++ printf '%s\n' spi_sifive
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-bitbang.ko.zst
++ mod=spi-bitbang
++ printf '%s\n' spi_bitbang
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-zynqmp-gqspi.ko.zst
++ mod=spi-zynqmp-gqspi
++ printf '%s\n' spi_zynqmp_gqspi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-pxa2xx-pci.ko.zst
++ mod=spi-pxa2xx-pci
++ printf '%s\n' spi_pxa2xx_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-amd.ko.zst
++ mod=spi-amd
++ printf '%s\n' spi_amd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-gpio.ko.zst
++ mod=spi-gpio
++ printf '%s\n' spi_gpio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-slave-time.ko.zst
++ mod=spi-slave-time
++ printf '%s\n' spi_slave_time
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-slave-system-control.ko.zst
++ mod=spi-slave-system-control
++ printf '%s\n' spi_slave_system_control
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spidev.ko.zst
++ mod=spidev
++ printf '%s\n' spidev
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-pxa2xx-platform.ko.zst
++ mod=spi-pxa2xx-platform
++ printf '%s\n' spi_pxa2xx_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-oc-tiny.ko.zst
++ mod=spi-oc-tiny
++ printf '%s\n' spi_oc_tiny
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-altera-dfl.ko.zst
++ mod=spi-altera-dfl
++ printf '%s\n' spi_altera_dfl
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-microchip-core-qspi.ko.zst
++ mod=spi-microchip-core-qspi
++ printf '%s\n' spi_microchip_core_qspi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dln2.ko.zst
++ mod=spi-dln2
++ printf '%s\n' spi_dln2
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-pci1xxxx.ko.zst
++ mod=spi-pci1xxxx
++ printf '%s\n' spi_pci1xxxx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-loopback-test.ko.zst
++ mod=spi-loopback-test
++ printf '%s\n' spi_loopback_test
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-altera-platform.ko.zst
++ mod=spi-altera-platform
++ printf '%s\n' spi_altera_platform
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-dw-pci.ko.zst
++ mod=spi-dw-pci
++ printf '%s\n' spi_dw_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-intel-pci.ko.zst
++ mod=spi-intel-pci
++ printf '%s\n' spi_intel_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-mux.ko.zst
++ mod=spi-mux
++ printf '%s\n' spi_mux
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-xilinx.ko.zst
++ mod=spi-xilinx
++ printf '%s\n' spi_xilinx
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-xcomm.ko.zst
++ mod=spi-xcomm
++ printf '%s\n' spi_xcomm
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=spi-cadence.ko.zst
++ mod=spi-cadence
++ printf '%s\n' spi_cadence
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module spi_butterfly spi_lm70llp spi_tle62x0 spi_mxic spi_sc18is602 spi_intel spi_microchip_core spi_intel_platform spi_dw_mmio spi_cs42l43 spi_dw spi_axi_spi_engine spi_altera_core spi_sifive spi_bitbang spi_zynqmp_gqspi spi_pxa2xx_pci spi_amd spi_gpio spi_slave_time spi_slave_system_control spidev spi_pxa2xx_platform spi_oc_tiny spi_altera_dfl spi_microchip_core_qspi spi_dln2 spi_pci1xxxx spi_loopback_test spi_altera_platform spi_dw_pci spi_intel_pci spi_mux spi_xilinx spi_xcomm spi_cadence
+ local r=0
+ for _ in "${@:2}"
+ add_module spi_butterfly
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_butterfly == *\? ]]
+ target=spi_butterfly
+ target=spi_butterfly
+ ((  _addedmodules[spi_butterfly] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_butterfly
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-butterfly.ko.zst == /* ]]
+ found=1
+ module=spi-butterfly.ko.zst
+ module=spi-butterfly
+ quiet 'adding module: %s (%s)' spi-butterfly /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-butterfly.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module parport spi-bitbang
+ local r=0
+ for _ in "${@:2}"
+ add_module parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ parport == *\? ]]
+ target=parport
+ target=parport
+ ((  _addedmodules[parport] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi-bitbang
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-bitbang == *\? ]]
+ target=spi-bitbang
+ target=spi_bitbang
+ ((  _addedmodules[spi_bitbang] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_bitbang
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-bitbang.ko.zst == /* ]]
+ found=1
+ module=spi-bitbang.ko.zst
+ module=spi-bitbang
+ quiet 'adding module: %s (%s)' spi-bitbang /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-bitbang.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_lm70llp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_lm70llp == *\? ]]
+ target=spi_lm70llp
+ target=spi_lm70llp
+ ((  _addedmodules[spi_lm70llp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_lm70llp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-lm70llp.ko.zst == /* ]]
+ found=1
+ module=spi-lm70llp.ko.zst
+ module=spi-lm70llp
+ quiet 'adding module: %s (%s)' spi-lm70llp /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-lm70llp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module parport spi-bitbang
+ local r=0
+ for _ in "${@:2}"
+ add_module parport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ parport == *\? ]]
+ target=parport
+ target=parport
+ ((  _addedmodules[parport] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi-bitbang
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-bitbang == *\? ]]
+ target=spi-bitbang
+ target=spi_bitbang
+ ((  _addedmodules[spi_bitbang] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_tle62x0
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_tle62x0 == *\? ]]
+ target=spi_tle62x0
+ target=spi_tle62x0
+ ((  _addedmodules[spi_tle62x0] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_tle62x0
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-tle62x0.ko.zst == /* ]]
+ found=1
+ module=spi-tle62x0.ko.zst
+ module=spi-tle62x0
+ quiet 'adding module: %s (%s)' spi-tle62x0 /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-tle62x0.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_mxic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_mxic == *\? ]]
+ target=spi_mxic
+ target=spi_mxic
+ ((  _addedmodules[spi_mxic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_mxic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-mxic.ko.zst == /* ]]
+ found=1
+ module=spi-mxic.ko.zst
+ module=spi-mxic
+ quiet 'adding module: %s (%s)' spi-mxic /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-mxic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nandcore
+ local r=0
+ for _ in "${@:2}"
+ add_module nandcore
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nandcore == *\? ]]
+ target=nandcore
+ target=nandcore
+ ((  _addedmodules[nandcore] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nandcore
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mtd/nand/nandcore.ko.zst == /* ]]
+ found=1
+ module=nandcore.ko.zst
+ module=nandcore
+ quiet 'adding module: %s (%s)' nandcore /lib/modules/6.6.4-arch1-1/kernel/drivers/mtd/nand/nandcore.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mtd bch
+ local r=0
+ for _ in "${@:2}"
+ add_module mtd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mtd == *\? ]]
+ target=mtd
+ target=mtd
+ ((  _addedmodules[mtd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mtd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mtd/mtd.ko.zst == /* ]]
+ found=1
+ module=mtd.ko.zst
+ module=mtd
+ quiet 'adding module: %s (%s)' mtd /lib/modules/6.6.4-arch1-1/kernel/drivers/mtd/mtd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bch
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bch == *\? ]]
+ target=bch
+ target=bch
+ ((  _addedmodules[bch] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bch
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/lib/bch.ko.zst == /* ]]
+ found=1
+ module=bch.ko.zst
+ module=bch
+ quiet 'adding module: %s (%s)' bch /lib/modules/6.6.4-arch1-1/kernel/lib/bch.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_sc18is602
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_sc18is602 == *\? ]]
+ target=spi_sc18is602
+ target=spi_sc18is602
+ ((  _addedmodules[spi_sc18is602] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_sc18is602
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-sc18is602.ko.zst == /* ]]
+ found=1
+ module=spi-sc18is602.ko.zst
+ module=spi-sc18is602
+ quiet 'adding module: %s (%s)' spi-sc18is602 /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-sc18is602.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_intel
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_intel == *\? ]]
+ target=spi_intel
+ target=spi_intel
+ ((  _addedmodules[spi_intel] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_intel
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-intel.ko.zst == /* ]]
+ found=1
+ module=spi-intel.ko.zst
+ module=spi-intel
+ quiet 'adding module: %s (%s)' spi-intel /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-intel.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_microchip_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_microchip_core == *\? ]]
+ target=spi_microchip_core
+ target=spi_microchip_core
+ ((  _addedmodules[spi_microchip_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_microchip_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-microchip-core.ko.zst == /* ]]
+ found=1
+ module=spi-microchip-core.ko.zst
+ module=spi-microchip-core
+ quiet 'adding module: %s (%s)' spi-microchip-core /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-microchip-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_intel_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_intel_platform == *\? ]]
+ target=spi_intel_platform
+ target=spi_intel_platform
+ ((  _addedmodules[spi_intel_platform] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_intel_platform
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-intel-platform.ko.zst == /* ]]
+ found=1
+ module=spi-intel-platform.ko.zst
+ module=spi-intel-platform
+ quiet 'adding module: %s (%s)' spi-intel-platform /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-intel-platform.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-intel
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-intel
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-intel == *\? ]]
+ target=spi-intel
+ target=spi_intel
+ ((  _addedmodules[spi_intel] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_dw_mmio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_dw_mmio == *\? ]]
+ target=spi_dw_mmio
+ target=spi_dw_mmio
+ ((  _addedmodules[spi_dw_mmio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_dw_mmio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dw-mmio.ko.zst == /* ]]
+ found=1
+ module=spi-dw-mmio.ko.zst
+ module=spi-dw-mmio
+ quiet 'adding module: %s (%s)' spi-dw-mmio /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dw-mmio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-dw
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-dw
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-dw == *\? ]]
+ target=spi-dw
+ target=spi_dw
+ ((  _addedmodules[spi_dw] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_dw
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dw.ko.zst == /* ]]
+ found=1
+ module=spi-dw.ko.zst
+ module=spi-dw
+ quiet 'adding module: %s (%s)' spi-dw /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dw.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_cs42l43
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_cs42l43 == *\? ]]
+ target=spi_cs42l43
+ target=spi_cs42l43
+ ((  _addedmodules[spi_cs42l43] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_cs42l43
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-cs42l43.ko.zst == /* ]]
+ found=1
+ module=spi-cs42l43.ko.zst
+ module=spi-cs42l43
+ quiet 'adding module: %s (%s)' spi-cs42l43 /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-cs42l43.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_dw
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_dw == *\? ]]
+ target=spi_dw
+ target=spi_dw
+ ((  _addedmodules[spi_dw] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_axi_spi_engine
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_axi_spi_engine == *\? ]]
+ target=spi_axi_spi_engine
+ target=spi_axi_spi_engine
+ ((  _addedmodules[spi_axi_spi_engine] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_axi_spi_engine
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-axi-spi-engine.ko.zst == /* ]]
+ found=1
+ module=spi-axi-spi-engine.ko.zst
+ module=spi-axi-spi-engine
+ quiet 'adding module: %s (%s)' spi-axi-spi-engine /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-axi-spi-engine.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_altera_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_altera_core == *\? ]]
+ target=spi_altera_core
+ target=spi_altera_core
+ ((  _addedmodules[spi_altera_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_altera_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-altera-core.ko.zst == /* ]]
+ found=1
+ module=spi-altera-core.ko.zst
+ module=spi-altera-core
+ quiet 'adding module: %s (%s)' spi-altera-core /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-altera-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_sifive
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_sifive == *\? ]]
+ target=spi_sifive
+ target=spi_sifive
+ ((  _addedmodules[spi_sifive] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_sifive
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-sifive.ko.zst == /* ]]
+ found=1
+ module=spi-sifive.ko.zst
+ module=spi-sifive
+ quiet 'adding module: %s (%s)' spi-sifive /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-sifive.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_bitbang
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_bitbang == *\? ]]
+ target=spi_bitbang
+ target=spi_bitbang
+ ((  _addedmodules[spi_bitbang] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_zynqmp_gqspi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_zynqmp_gqspi == *\? ]]
+ target=spi_zynqmp_gqspi
+ target=spi_zynqmp_gqspi
+ ((  _addedmodules[spi_zynqmp_gqspi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_zynqmp_gqspi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-zynqmp-gqspi.ko.zst == /* ]]
+ found=1
+ module=spi-zynqmp-gqspi.ko.zst
+ module=spi-zynqmp-gqspi
+ quiet 'adding module: %s (%s)' spi-zynqmp-gqspi /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-zynqmp-gqspi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_pxa2xx_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_pxa2xx_pci == *\? ]]
+ target=spi_pxa2xx_pci
+ target=spi_pxa2xx_pci
+ ((  _addedmodules[spi_pxa2xx_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_pxa2xx_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-pxa2xx-pci.ko.zst == /* ]]
+ found=1
+ module=spi-pxa2xx-pci.ko.zst
+ module=spi-pxa2xx-pci
+ quiet 'adding module: %s (%s)' spi-pxa2xx-pci /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-pxa2xx-pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_amd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_amd == *\? ]]
+ target=spi_amd
+ target=spi_amd
+ ((  _addedmodules[spi_amd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_amd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-amd.ko.zst == /* ]]
+ found=1
+ module=spi-amd.ko.zst
+ module=spi-amd
+ quiet 'adding module: %s (%s)' spi-amd /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-amd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_gpio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_gpio == *\? ]]
+ target=spi_gpio
+ target=spi_gpio
+ ((  _addedmodules[spi_gpio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_gpio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-gpio.ko.zst == /* ]]
+ found=1
+ module=spi-gpio.ko.zst
+ module=spi-gpio
+ quiet 'adding module: %s (%s)' spi-gpio /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-gpio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-bitbang
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-bitbang
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-bitbang == *\? ]]
+ target=spi-bitbang
+ target=spi_bitbang
+ ((  _addedmodules[spi_bitbang] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_slave_time
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_slave_time == *\? ]]
+ target=spi_slave_time
+ target=spi_slave_time
+ ((  _addedmodules[spi_slave_time] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_slave_time
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-slave-time.ko.zst == /* ]]
+ found=1
+ module=spi-slave-time.ko.zst
+ module=spi-slave-time
+ quiet 'adding module: %s (%s)' spi-slave-time /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-slave-time.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_slave_system_control
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_slave_system_control == *\? ]]
+ target=spi_slave_system_control
+ target=spi_slave_system_control
+ ((  _addedmodules[spi_slave_system_control] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_slave_system_control
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-slave-system-control.ko.zst == /* ]]
+ found=1
+ module=spi-slave-system-control.ko.zst
+ module=spi-slave-system-control
+ quiet 'adding module: %s (%s)' spi-slave-system-control /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-slave-system-control.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spidev
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spidev == *\? ]]
+ target=spidev
+ target=spidev
+ ((  _addedmodules[spidev] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spidev
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spidev.ko.zst == /* ]]
+ found=1
+ module=spidev.ko.zst
+ module=spidev
+ quiet 'adding module: %s (%s)' spidev /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spidev.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_pxa2xx_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_pxa2xx_platform == *\? ]]
+ target=spi_pxa2xx_platform
+ target=spi_pxa2xx_platform
+ ((  _addedmodules[spi_pxa2xx_platform] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_pxa2xx_platform
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-pxa2xx-platform.ko.zst == /* ]]
+ found=1
+ module=spi-pxa2xx-platform.ko.zst
+ module=spi-pxa2xx-platform
+ quiet 'adding module: %s (%s)' spi-pxa2xx-platform /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-pxa2xx-platform.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ read -ra softdeps
+ for module in "${softdeps[@]}"
+ [[ pre: == *: ]]
+ continue
+ for module in "${softdeps[@]}"
+ [[ dw_dmac == *: ]]
+ add_module 'dw_dmac?'
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dw_dmac? == *\? ]]
+ ign_errors=1
+ set -- dw_dmac
+ target=dw_dmac
+ target=dw_dmac
+ ((  _addedmodules[dw_dmac] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dw_dmac
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/dma/dw/dw_dmac.ko.zst == /* ]]
+ found=1
+ module=dw_dmac.ko.zst
+ module=dw_dmac
+ quiet 'adding module: %s (%s)' dw_dmac /lib/modules/6.6.4-arch1-1/kernel/drivers/dma/dw/dw_dmac.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_oc_tiny
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_oc_tiny == *\? ]]
+ target=spi_oc_tiny
+ target=spi_oc_tiny
+ ((  _addedmodules[spi_oc_tiny] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_oc_tiny
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-oc-tiny.ko.zst == /* ]]
+ found=1
+ module=spi-oc-tiny.ko.zst
+ module=spi-oc-tiny
+ quiet 'adding module: %s (%s)' spi-oc-tiny /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-oc-tiny.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-bitbang
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-bitbang
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-bitbang == *\? ]]
+ target=spi-bitbang
+ target=spi_bitbang
+ ((  _addedmodules[spi_bitbang] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_altera_dfl
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_altera_dfl == *\? ]]
+ target=spi_altera_dfl
+ target=spi_altera_dfl
+ ((  _addedmodules[spi_altera_dfl] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_altera_dfl
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-altera-dfl.ko.zst == /* ]]
+ found=1
+ module=spi-altera-dfl.ko.zst
+ module=spi-altera-dfl
+ quiet 'adding module: %s (%s)' spi-altera-dfl /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-altera-dfl.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-altera-core dfl
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-altera-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-altera-core == *\? ]]
+ target=spi-altera-core
+ target=spi_altera_core
+ ((  _addedmodules[spi_altera_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module dfl
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dfl == *\? ]]
+ target=dfl
+ target=dfl
+ ((  _addedmodules[dfl] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dfl
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/dfl.ko.zst == /* ]]
+ found=1
+ module=dfl.ko.zst
+ module=dfl
+ quiet 'adding module: %s (%s)' dfl /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/dfl.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module fpga-region
+ local r=0
+ for _ in "${@:2}"
+ add_module fpga-region
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fpga-region == *\? ]]
+ target=fpga-region
+ target=fpga_region
+ ((  _addedmodules[fpga_region] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fpga_region
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/fpga-region.ko.zst == /* ]]
+ found=1
+ module=fpga-region.ko.zst
+ module=fpga-region
+ quiet 'adding module: %s (%s)' fpga-region /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/fpga-region.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module fpga-mgr fpga-bridge
+ local r=0
+ for _ in "${@:2}"
+ add_module fpga-mgr
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fpga-mgr == *\? ]]
+ target=fpga-mgr
+ target=fpga_mgr
+ ((  _addedmodules[fpga_mgr] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fpga_mgr
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/fpga-mgr.ko.zst == /* ]]
+ found=1
+ module=fpga-mgr.ko.zst
+ module=fpga-mgr
+ quiet 'adding module: %s (%s)' fpga-mgr /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/fpga-mgr.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fpga-bridge
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fpga-bridge == *\? ]]
+ target=fpga-bridge
+ target=fpga_bridge
+ ((  _addedmodules[fpga_bridge] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fpga_bridge
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/fpga-bridge.ko.zst == /* ]]
+ found=1
+ module=fpga-bridge.ko.zst
+ module=fpga-bridge
+ quiet 'adding module: %s (%s)' fpga-bridge /lib/modules/6.6.4-arch1-1/kernel/drivers/fpga/fpga-bridge.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_microchip_core_qspi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_microchip_core_qspi == *\? ]]
+ target=spi_microchip_core_qspi
+ target=spi_microchip_core_qspi
+ ((  _addedmodules[spi_microchip_core_qspi] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_microchip_core_qspi
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-microchip-core-qspi.ko.zst == /* ]]
+ found=1
+ module=spi-microchip-core-qspi.ko.zst
+ module=spi-microchip-core-qspi
+ quiet 'adding module: %s (%s)' spi-microchip-core-qspi /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-microchip-core-qspi.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_dln2
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_dln2 == *\? ]]
+ target=spi_dln2
+ target=spi_dln2
+ ((  _addedmodules[spi_dln2] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_dln2
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dln2.ko.zst == /* ]]
+ found=1
+ module=spi-dln2.ko.zst
+ module=spi-dln2
+ quiet 'adding module: %s (%s)' spi-dln2 /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dln2.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module dln2
+ local r=0
+ for _ in "${@:2}"
+ add_module dln2
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ dln2 == *\? ]]
+ target=dln2
+ target=dln2
+ ((  _addedmodules[dln2] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 dln2
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mfd/dln2.ko.zst == /* ]]
+ found=1
+ module=dln2.ko.zst
+ module=dln2
+ quiet 'adding module: %s (%s)' dln2 /lib/modules/6.6.4-arch1-1/kernel/drivers/mfd/dln2.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_pci1xxxx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_pci1xxxx == *\? ]]
+ target=spi_pci1xxxx
+ target=spi_pci1xxxx
+ ((  _addedmodules[spi_pci1xxxx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_pci1xxxx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-pci1xxxx.ko.zst == /* ]]
+ found=1
+ module=spi-pci1xxxx.ko.zst
+ module=spi-pci1xxxx
+ quiet 'adding module: %s (%s)' spi-pci1xxxx /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-pci1xxxx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_loopback_test
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_loopback_test == *\? ]]
+ target=spi_loopback_test
+ target=spi_loopback_test
+ ((  _addedmodules[spi_loopback_test] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_loopback_test
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-loopback-test.ko.zst == /* ]]
+ found=1
+ module=spi-loopback-test.ko.zst
+ module=spi-loopback-test
+ quiet 'adding module: %s (%s)' spi-loopback-test /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-loopback-test.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_altera_platform
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_altera_platform == *\? ]]
+ target=spi_altera_platform
+ target=spi_altera_platform
+ ((  _addedmodules[spi_altera_platform] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_altera_platform
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-altera-platform.ko.zst == /* ]]
+ found=1
+ module=spi-altera-platform.ko.zst
+ module=spi-altera-platform
+ quiet 'adding module: %s (%s)' spi-altera-platform /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-altera-platform.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-altera-core
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-altera-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-altera-core == *\? ]]
+ target=spi-altera-core
+ target=spi_altera_core
+ ((  _addedmodules[spi_altera_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_dw_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_dw_pci == *\? ]]
+ target=spi_dw_pci
+ target=spi_dw_pci
+ ((  _addedmodules[spi_dw_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_dw_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dw-pci.ko.zst == /* ]]
+ found=1
+ module=spi-dw-pci.ko.zst
+ module=spi-dw-pci
+ quiet 'adding module: %s (%s)' spi-dw-pci /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-dw-pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-dw
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-dw
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-dw == *\? ]]
+ target=spi-dw
+ target=spi_dw
+ ((  _addedmodules[spi_dw] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_intel_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_intel_pci == *\? ]]
+ target=spi_intel_pci
+ target=spi_intel_pci
+ ((  _addedmodules[spi_intel_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_intel_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-intel-pci.ko.zst == /* ]]
+ found=1
+ module=spi-intel-pci.ko.zst
+ module=spi-intel-pci
+ quiet 'adding module: %s (%s)' spi-intel-pci /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-intel-pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-intel
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-intel
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-intel == *\? ]]
+ target=spi-intel
+ target=spi_intel
+ ((  _addedmodules[spi_intel] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_mux
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_mux == *\? ]]
+ target=spi_mux
+ target=spi_mux
+ ((  _addedmodules[spi_mux] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_mux
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-mux.ko.zst == /* ]]
+ found=1
+ module=spi-mux.ko.zst
+ module=spi-mux
+ quiet 'adding module: %s (%s)' spi-mux /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-mux.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mux-core
+ local r=0
+ for _ in "${@:2}"
+ add_module mux-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mux-core == *\? ]]
+ target=mux-core
+ target=mux_core
+ ((  _addedmodules[mux_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mux_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mux/mux-core.ko.zst == /* ]]
+ found=1
+ module=mux-core.ko.zst
+ module=mux-core
+ quiet 'adding module: %s (%s)' mux-core /lib/modules/6.6.4-arch1-1/kernel/drivers/mux/mux-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_xilinx
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_xilinx == *\? ]]
+ target=spi_xilinx
+ target=spi_xilinx
+ ((  _addedmodules[spi_xilinx] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_xilinx
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-xilinx.ko.zst == /* ]]
+ found=1
+ module=spi-xilinx.ko.zst
+ module=spi-xilinx
+ quiet 'adding module: %s (%s)' spi-xilinx /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-xilinx.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module spi-bitbang
+ local r=0
+ for _ in "${@:2}"
+ add_module spi-bitbang
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi-bitbang == *\? ]]
+ target=spi-bitbang
+ target=spi_bitbang
+ ((  _addedmodules[spi_bitbang] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_xcomm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_xcomm == *\? ]]
+ target=spi_xcomm
+ target=spi_xcomm
+ ((  _addedmodules[spi_xcomm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_xcomm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-xcomm.ko.zst == /* ]]
+ found=1
+ module=spi-xcomm.ko.zst
+ module=spi-xcomm
+ quiet 'adding module: %s (%s)' spi-xcomm /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-xcomm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module spi_cadence
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ spi_cadence == *\? ]]
+ target=spi_cadence
+ target=spi_cadence
+ ((  _addedmodules[spi_cadence] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 spi_cadence
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-cadence.ko.zst == /* ]]
+ found=1
+ module=spi-cadence.ko.zst
+ module=spi-cadence
+ quiet 'adding module: %s (%s)' spi-cadence /lib/modules/6.6.4-arch1-1/kernel/drivers/spi/spi-cadence.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/regulator/
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules /drivers/regulator/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/regulator/
++ ((  ++count  ))
++ mod=da9211-regulator.ko.zst
++ mod=da9211-regulator
++ printf '%s\n' da9211_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=palmas-regulator.ko.zst
++ mod=palmas-regulator
++ printf '%s\n' palmas_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=act8865-regulator.ko.zst
++ mod=act8865-regulator
++ printf '%s\n' act8865_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp3971.ko.zst
++ mod=lp3971
++ printf '%s\n' lp3971
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65912-regulator.ko.zst
++ mod=tps65912-regulator
++ printf '%s\n' tps65912_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=twl-regulator.ko.zst
++ mod=twl-regulator
++ printf '%s\n' twl_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=axp20x-regulator.ko.zst
++ mod=axp20x-regulator
++ printf '%s\n' axp20x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6370-regulator.ko.zst
++ mod=mt6370-regulator
++ printf '%s\n' mt6370_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pcf50633-regulator.ko.zst
++ mod=pcf50633-regulator
++ printf '%s\n' pcf50633_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pv88090-regulator.ko.zst
++ mod=pv88090-regulator
++ printf '%s\n' pv88090_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8998.ko.zst
++ mod=max8998
++ printf '%s\n' max8998
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lm363x-regulator.ko.zst
++ mod=lm363x-regulator
++ printf '%s\n' lm363x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6105x-regulator.ko.zst
++ mod=tps6105x-regulator
++ printf '%s\n' tps6105x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77693-regulator.ko.zst
++ mod=max77693-regulator
++ printf '%s\n' max77693_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65086-regulator.ko.zst
++ mod=tps65086-regulator
++ printf '%s\n' tps65086_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=atc260x-regulator.ko.zst
++ mod=atc260x-regulator
++ printf '%s\n' atc260x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=twl6030-regulator.ko.zst
++ mod=twl6030-regulator
++ printf '%s\n' twl6030_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt4801-regulator.ko.zst
++ mod=rt4801-regulator
++ printf '%s\n' rt4801_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=raa215300.ko.zst
++ mod=raa215300
++ printf '%s\n' raa215300
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtual.ko.zst
++ mod=virtual
++ printf '%s\n' virtual
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da903x-regulator.ko.zst
++ mod=da903x-regulator
++ printf '%s\n' da903x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm8350-regulator.ko.zst
++ mod=wm8350-regulator
++ printf '%s\n' wm8350_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6357-regulator.ko.zst
++ mod=mt6357-regulator
++ printf '%s\n' mt6357_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77857-regulator.ko.zst
++ mod=max77857-regulator
++ printf '%s\n' max77857_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rc5t583-regulator.ko.zst
++ mod=rc5t583-regulator
++ printf '%s\n' rc5t583_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=88pm800-regulator.ko.zst
++ mod=88pm800-regulator
++ printf '%s\n' 88pm800_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pwm-regulator.ko.zst
++ mod=pwm-regulator
++ printf '%s\n' pwm_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps51632-regulator.ko.zst
++ mod=tps51632-regulator
++ printf '%s\n' tps51632_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mc13783-regulator.ko.zst
++ mod=mc13783-regulator
++ printf '%s\n' mc13783_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max1586.ko.zst
++ mod=max1586
++ printf '%s\n' max1586
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8997-regulator.ko.zst
++ mod=max8997-regulator
++ printf '%s\n' max8997_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6507x-regulator.ko.zst
++ mod=tps6507x-regulator
++ printf '%s\n' tps6507x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mc13xxx-regulator-core.ko.zst
++ mod=mc13xxx-regulator-core
++ printf '%s\n' mc13xxx_regulator_core
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6586x-regulator.ko.zst
++ mod=tps6586x-regulator
++ printf '%s\n' tps6586x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=88pg86x.ko.zst
++ mod=88pg86x
++ printf '%s\n' 88pg86x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=as3711-regulator.ko.zst
++ mod=as3711-regulator
++ printf '%s\n' as3711_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sy7636a-regulator.ko.zst
++ mod=sy7636a-regulator
++ printf '%s\n' sy7636a_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ltc3676.ko.zst
++ mod=ltc3676
++ printf '%s\n' ltc3676
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max20411-regulator.ko.zst
++ mod=max20411-regulator
++ printf '%s\n' max20411_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8649.ko.zst
++ mod=max8649
++ printf '%s\n' max8649
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm831x-isink.ko.zst
++ mod=wm831x-isink
++ printf '%s\n' wm831x_isink
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6331-regulator.ko.zst
++ mod=mt6331-regulator
++ printf '%s\n' mt6331_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aw37503-regulator.ko.zst
++ mod=aw37503-regulator
++ printf '%s\n' aw37503_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pv88080-regulator.ko.zst
++ mod=pv88080-regulator
++ printf '%s\n' pv88080_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6311-regulator.ko.zst
++ mod=mt6311-regulator
++ printf '%s\n' mt6311_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9210-regulator.ko.zst
++ mod=da9210-regulator
++ printf '%s\n' da9210_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=88pm8607.ko.zst
++ mod=88pm8607
++ printf '%s\n' 88pm8607
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5120-regulator.ko.zst
++ mod=rt5120-regulator
++ printf '%s\n' rt5120_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65090-regulator.ko.zst
++ mod=tps65090-regulator
++ printf '%s\n' tps65090_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65132-regulator.ko.zst
++ mod=tps65132-regulator
++ printf '%s\n' tps65132_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max20086-regulator.ko.zst
++ mod=max20086-regulator
++ printf '%s\n' max20086_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt6245-regulator.ko.zst
++ mod=rt6245-regulator
++ printf '%s\n' rt6245_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pca9450-regulator.ko.zst
++ mod=pca9450-regulator
++ printf '%s\n' pca9450_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65023-regulator.ko.zst
++ mod=tps65023-regulator
++ printf '%s\n' tps65023_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8925-regulator.ko.zst
++ mod=max8925-regulator
++ printf '%s\n' max8925_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max14577-regulator.ko.zst
++ mod=max14577-regulator
++ printf '%s\n' max14577_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp3972.ko.zst
++ mod=lp3972
++ printf '%s\n' lp3972
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm831x-dcdc.ko.zst
++ mod=wm831x-dcdc
++ printf '%s\n' wm831x_dcdc
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps68470-regulator.ko.zst
++ mod=tps68470-regulator
++ printf '%s\n' tps68470_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fan53555.ko.zst
++ mod=fan53555
++ printf '%s\n' fan53555
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5190a-regulator.ko.zst
++ mod=rt5190a-regulator
++ printf '%s\n' rt5190a_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pcap-regulator.ko.zst
++ mod=pcap-regulator
++ printf '%s\n' pcap_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtmv20-regulator.ko.zst
++ mod=rtmv20-regulator
++ printf '%s\n' rtmv20_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77826-regulator.ko.zst
++ mod=max77826-regulator
++ printf '%s\n' max77826_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5033-regulator.ko.zst
++ mod=rt5033-regulator
++ printf '%s\n' rt5033_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt6190-regulator.ko.zst
++ mod=rt6190-regulator
++ printf '%s\n' rt6190_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt6160-regulator.ko.zst
++ mod=rt6160-regulator
++ printf '%s\n' rt6160_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt4803.ko.zst
++ mod=rt4803
++ printf '%s\n' rt4803
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp8788-ldo.ko.zst
++ mod=lp8788-ldo
++ printf '%s\n' lp8788_ldo
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=slg51000-regulator.ko.zst
++ mod=slg51000-regulator
++ printf '%s\n' slg51000_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp8755.ko.zst
++ mod=lp8755
++ printf '%s\n' lp8755
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6332-regulator.ko.zst
++ mod=mt6332-regulator
++ printf '%s\n' mt6332_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps62360-regulator.ko.zst
++ mod=tps62360-regulator
++ printf '%s\n' tps62360_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps6524x-regulator.ko.zst
++ mod=tps6524x-regulator
++ printf '%s\n' tps6524x_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=arizona-ldo1.ko.zst
++ mod=arizona-ldo1
++ printf '%s\n' arizona_ldo1
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=isl6271a-regulator.ko.zst
++ mod=isl6271a-regulator
++ printf '%s\n' isl6271a_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm831x-ldo.ko.zst
++ mod=wm831x-ldo
++ printf '%s\n' wm831x_ldo
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6360-regulator.ko.zst
++ mod=mt6360-regulator
++ printf '%s\n' mt6360_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=userspace-consumer.ko.zst
++ mod=userspace-consumer
++ printf '%s\n' userspace_consumer
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=aat2870-regulator.ko.zst
++ mod=aat2870-regulator
++ printf '%s\n' aat2870_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5759-regulator.ko.zst
++ mod=rt5759-regulator
++ printf '%s\n' rt5759_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtq6752-regulator.ko.zst
++ mod=rtq6752-regulator
++ printf '%s\n' rtq6752_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9055-regulator.ko.zst
++ mod=da9055-regulator
++ printf '%s\n' da9055_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6358-regulator.ko.zst
++ mod=mt6358-regulator
++ printf '%s\n' mt6358_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=gpio-regulator.ko.zst
++ mod=gpio-regulator
++ printf '%s\n' gpio_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=fixed.ko.zst
++ mod=fixed
++ printf '%s\n' fixed
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtq2134-regulator.ko.zst
++ mod=rtq2134-regulator
++ printf '%s\n' rtq2134_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mp8859.ko.zst
++ mod=mp8859
++ printf '%s\n' mp8859
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8893.ko.zst
++ mod=max8893
++ printf '%s\n' max8893
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=sky81452-regulator.ko.zst
++ mod=sky81452-regulator
++ printf '%s\n' sky81452_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=isl9305.ko.zst
++ mod=isl9305
++ printf '%s\n' isl9305
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt4831-regulator.ko.zst
++ mod=rt4831-regulator
++ printf '%s\n' rt4831_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ltc3589.ko.zst
++ mod=ltc3589
++ printf '%s\n' ltc3589
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9052-regulator.ko.zst
++ mod=da9052-regulator
++ printf '%s\n' da9052_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max77541-regulator.ko.zst
++ mod=max77541-regulator
++ printf '%s\n' max77541_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8660.ko.zst
++ mod=max8660
++ printf '%s\n' max8660
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8952.ko.zst
++ mod=max8952
++ printf '%s\n' max8952
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp8788-buck.ko.zst
++ mod=lp8788-buck
++ printf '%s\n' lp8788_buck
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bcm590xx-regulator.ko.zst
++ mod=bcm590xx-regulator
++ printf '%s\n' bcm590xx_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=da9062-regulator.ko.zst
++ mod=da9062-regulator
++ printf '%s\n' da9062_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=lp872x.ko.zst
++ mod=lp872x
++ printf '%s\n' lp872x
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=ad5398.ko.zst
++ mod=ad5398
++ printf '%s\n' ad5398
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pv88060-regulator.ko.zst
++ mod=pv88060-regulator
++ printf '%s\n' pv88060_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=tps65910-regulator.ko.zst
++ mod=tps65910-regulator
++ printf '%s\n' tps65910_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6359-regulator.ko.zst
++ mod=mt6359-regulator
++ printf '%s\n' mt6359_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm8400-regulator.ko.zst
++ mod=wm8400-regulator
++ printf '%s\n' wm8400_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=arizona-micsupp.ko.zst
++ mod=arizona-micsupp
++ printf '%s\n' arizona_micsupp
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mc13892-regulator.ko.zst
++ mod=mc13892-regulator
++ printf '%s\n' mc13892_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=wm8994-regulator.ko.zst
++ mod=wm8994-regulator
++ printf '%s\n' wm8994_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rt5739.ko.zst
++ mod=rt5739
++ printf '%s\n' rt5739
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=max8907-regulator.ko.zst
++ mod=max8907-regulator
++ printf '%s\n' max8907_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=bd9571mwv-regulator.ko.zst
++ mod=bd9571mwv-regulator
++ printf '%s\n' bd9571mwv_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6323-regulator.ko.zst
++ mod=mt6323-regulator
++ printf '%s\n' mt6323_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=mt6397-regulator.ko.zst
++ mod=mt6397-regulator
++ printf '%s\n' mt6397_regulator
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=rtq2208-regulator.ko.zst
++ mod=rtq2208-regulator
++ printf '%s\n' rtq2208_regulator
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module da9211_regulator palmas_regulator act8865_regulator lp3971 tps65912_regulator twl_regulator axp20x_regulator mt6370_regulator pcf50633_regulator pv88090_regulator max8998 lm363x_regulator tps6105x_regulator max77693_regulator tps65086_regulator atc260x_regulator twl6030_regulator rt4801_regulator raa215300 virtual da903x_regulator wm8350_regulator mt6357_regulator max77857_regulator rc5t583_regulator 88pm800_regulator pwm_regulator tps51632_regulator mc13783_regulator max1586 max8997_regulator tps6507x_regulator mc13xxx_regulator_core tps6586x_regulator 88pg86x as3711_regulator sy7636a_regulator ltc3676 max20411_regulator max8649 wm831x_isink mt6331_regulator aw37503_regulator pv88080_regulator mt6311_regulator da9210_regulator 88pm8607 rt5120_regulator tps65090_regulator tps65132_regulator max20086_regulator rt6245_regulator pca9450_regulator tps65023_regulator max8925_regulator max14577_regulator lp3972 wm831x_dcdc tps68470_regulator fan53555 rt5190a_regulator pcap_regulator rtmv20_regulator max77826_regulator rt5033_regulator rt6190_regulator rt6160_regulator rt4803 lp8788_ldo slg51000_regulator lp8755 mt6332_regulator tps62360_regulator tps6524x_regulator arizona_ldo1 isl6271a_regulator wm831x_ldo mt6360_regulator userspace_consumer aat2870_regulator rt5759_regulator rtq6752_regulator da9055_regulator mt6358_regulator gpio_regulator fixed rtq2134_regulator mp8859 max8893 sky81452_regulator isl9305 rt4831_regulator ltc3589 da9052_regulator max77541_regulator max8660 max8952 lp8788_buck bcm590xx_regulator da9062_regulator lp872x ad5398 pv88060_regulator tps65910_regulator mt6359_regulator wm8400_regulator arizona_micsupp mc13892_regulator wm8994_regulator rt5739 max8907_regulator bd9571mwv_regulator mt6323_regulator mt6397_regulator rtq2208_regulator
+ local r=0
+ for _ in "${@:2}"
+ add_module da9211_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ da9211_regulator == *\? ]]
+ target=da9211_regulator
+ target=da9211_regulator
+ ((  _addedmodules[da9211_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 da9211_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9211-regulator.ko.zst == /* ]]
+ found=1
+ module=da9211-regulator.ko.zst
+ module=da9211-regulator
+ quiet 'adding module: %s (%s)' da9211-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9211-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module palmas_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ palmas_regulator == *\? ]]
+ target=palmas_regulator
+ target=palmas_regulator
+ ((  _addedmodules[palmas_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 palmas_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/palmas-regulator.ko.zst == /* ]]
+ found=1
+ module=palmas-regulator.ko.zst
+ module=palmas-regulator
+ quiet 'adding module: %s (%s)' palmas-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/palmas-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module act8865_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ act8865_regulator == *\? ]]
+ target=act8865_regulator
+ target=act8865_regulator
+ ((  _addedmodules[act8865_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 act8865_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/act8865-regulator.ko.zst == /* ]]
+ found=1
+ module=act8865-regulator.ko.zst
+ module=act8865-regulator
+ quiet 'adding module: %s (%s)' act8865-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/act8865-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lp3971
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lp3971 == *\? ]]
+ target=lp3971
+ target=lp3971
+ ((  _addedmodules[lp3971] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lp3971
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp3971.ko.zst == /* ]]
+ found=1
+ module=lp3971.ko.zst
+ module=lp3971
+ quiet 'adding module: %s (%s)' lp3971 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp3971.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps65912_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps65912_regulator == *\? ]]
+ target=tps65912_regulator
+ target=tps65912_regulator
+ ((  _addedmodules[tps65912_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps65912_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65912-regulator.ko.zst == /* ]]
+ found=1
+ module=tps65912-regulator.ko.zst
+ module=tps65912-regulator
+ quiet 'adding module: %s (%s)' tps65912-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65912-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module twl_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ twl_regulator == *\? ]]
+ target=twl_regulator
+ target=twl_regulator
+ ((  _addedmodules[twl_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 twl_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/twl-regulator.ko.zst == /* ]]
+ found=1
+ module=twl-regulator.ko.zst
+ module=twl-regulator
+ quiet 'adding module: %s (%s)' twl-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/twl-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module axp20x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ axp20x_regulator == *\? ]]
+ target=axp20x_regulator
+ target=axp20x_regulator
+ ((  _addedmodules[axp20x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 axp20x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/axp20x-regulator.ko.zst == /* ]]
+ found=1
+ module=axp20x-regulator.ko.zst
+ module=axp20x-regulator
+ quiet 'adding module: %s (%s)' axp20x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/axp20x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6370_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6370_regulator == *\? ]]
+ target=mt6370_regulator
+ target=mt6370_regulator
+ ((  _addedmodules[mt6370_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6370_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6370-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6370-regulator.ko.zst
+ module=mt6370-regulator
+ quiet 'adding module: %s (%s)' mt6370-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6370-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pcf50633_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcf50633_regulator == *\? ]]
+ target=pcf50633_regulator
+ target=pcf50633_regulator
+ ((  _addedmodules[pcf50633_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pcf50633_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pcf50633-regulator.ko.zst == /* ]]
+ found=1
+ module=pcf50633-regulator.ko.zst
+ module=pcf50633-regulator
+ quiet 'adding module: %s (%s)' pcf50633-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pcf50633-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pv88090_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pv88090_regulator == *\? ]]
+ target=pv88090_regulator
+ target=pv88090_regulator
+ ((  _addedmodules[pv88090_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pv88090_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pv88090-regulator.ko.zst == /* ]]
+ found=1
+ module=pv88090-regulator.ko.zst
+ module=pv88090-regulator
+ quiet 'adding module: %s (%s)' pv88090-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pv88090-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8998
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8998 == *\? ]]
+ target=max8998
+ target=max8998
+ ((  _addedmodules[max8998] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8998
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8998.ko.zst == /* ]]
+ found=1
+ module=max8998.ko.zst
+ module=max8998
+ quiet 'adding module: %s (%s)' max8998 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8998.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lm363x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lm363x_regulator == *\? ]]
+ target=lm363x_regulator
+ target=lm363x_regulator
+ ((  _addedmodules[lm363x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lm363x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lm363x-regulator.ko.zst == /* ]]
+ found=1
+ module=lm363x-regulator.ko.zst
+ module=lm363x-regulator
+ quiet 'adding module: %s (%s)' lm363x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lm363x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps6105x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps6105x_regulator == *\? ]]
+ target=tps6105x_regulator
+ target=tps6105x_regulator
+ ((  _addedmodules[tps6105x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps6105x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6105x-regulator.ko.zst == /* ]]
+ found=1
+ module=tps6105x-regulator.ko.zst
+ module=tps6105x-regulator
+ quiet 'adding module: %s (%s)' tps6105x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6105x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max77693_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max77693_regulator == *\? ]]
+ target=max77693_regulator
+ target=max77693_regulator
+ ((  _addedmodules[max77693_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max77693_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77693-regulator.ko.zst == /* ]]
+ found=1
+ module=max77693-regulator.ko.zst
+ module=max77693-regulator
+ quiet 'adding module: %s (%s)' max77693-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77693-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps65086_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps65086_regulator == *\? ]]
+ target=tps65086_regulator
+ target=tps65086_regulator
+ ((  _addedmodules[tps65086_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps65086_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65086-regulator.ko.zst == /* ]]
+ found=1
+ module=tps65086-regulator.ko.zst
+ module=tps65086-regulator
+ quiet 'adding module: %s (%s)' tps65086-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65086-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module atc260x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ atc260x_regulator == *\? ]]
+ target=atc260x_regulator
+ target=atc260x_regulator
+ ((  _addedmodules[atc260x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 atc260x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/atc260x-regulator.ko.zst == /* ]]
+ found=1
+ module=atc260x-regulator.ko.zst
+ module=atc260x-regulator
+ quiet 'adding module: %s (%s)' atc260x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/atc260x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module twl6030_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ twl6030_regulator == *\? ]]
+ target=twl6030_regulator
+ target=twl6030_regulator
+ ((  _addedmodules[twl6030_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 twl6030_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/twl6030-regulator.ko.zst == /* ]]
+ found=1
+ module=twl6030-regulator.ko.zst
+ module=twl6030-regulator
+ quiet 'adding module: %s (%s)' twl6030-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/twl6030-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt4801_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt4801_regulator == *\? ]]
+ target=rt4801_regulator
+ target=rt4801_regulator
+ ((  _addedmodules[rt4801_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt4801_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt4801-regulator.ko.zst == /* ]]
+ found=1
+ module=rt4801-regulator.ko.zst
+ module=rt4801-regulator
+ quiet 'adding module: %s (%s)' rt4801-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt4801-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module raa215300
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ raa215300 == *\? ]]
+ target=raa215300
+ target=raa215300
+ ((  _addedmodules[raa215300] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 raa215300
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/raa215300.ko.zst == /* ]]
+ found=1
+ module=raa215300.ko.zst
+ module=raa215300
+ quiet 'adding module: %s (%s)' raa215300 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/raa215300.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtual
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtual == *\? ]]
+ target=virtual
+ target=virtual
+ ((  _addedmodules[virtual] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtual
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/virtual.ko.zst == /* ]]
+ found=1
+ module=virtual.ko.zst
+ module=virtual
+ quiet 'adding module: %s (%s)' virtual /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/virtual.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module da903x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ da903x_regulator == *\? ]]
+ target=da903x_regulator
+ target=da903x_regulator
+ ((  _addedmodules[da903x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 da903x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da903x-regulator.ko.zst == /* ]]
+ found=1
+ module=da903x-regulator.ko.zst
+ module=da903x-regulator
+ quiet 'adding module: %s (%s)' da903x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da903x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wm8350_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wm8350_regulator == *\? ]]
+ target=wm8350_regulator
+ target=wm8350_regulator
+ ((  _addedmodules[wm8350_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wm8350_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm8350-regulator.ko.zst == /* ]]
+ found=1
+ module=wm8350-regulator.ko.zst
+ module=wm8350-regulator
+ quiet 'adding module: %s (%s)' wm8350-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm8350-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6357_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6357_regulator == *\? ]]
+ target=mt6357_regulator
+ target=mt6357_regulator
+ ((  _addedmodules[mt6357_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6357_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6357-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6357-regulator.ko.zst
+ module=mt6357-regulator
+ quiet 'adding module: %s (%s)' mt6357-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6357-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max77857_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max77857_regulator == *\? ]]
+ target=max77857_regulator
+ target=max77857_regulator
+ ((  _addedmodules[max77857_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max77857_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77857-regulator.ko.zst == /* ]]
+ found=1
+ module=max77857-regulator.ko.zst
+ module=max77857-regulator
+ quiet 'adding module: %s (%s)' max77857-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77857-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rc5t583_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rc5t583_regulator == *\? ]]
+ target=rc5t583_regulator
+ target=rc5t583_regulator
+ ((  _addedmodules[rc5t583_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rc5t583_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rc5t583-regulator.ko.zst == /* ]]
+ found=1
+ module=rc5t583-regulator.ko.zst
+ module=rc5t583-regulator
+ quiet 'adding module: %s (%s)' rc5t583-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rc5t583-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 88pm800_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 88pm800_regulator == *\? ]]
+ target=88pm800_regulator
+ target=88pm800_regulator
+ ((  _addedmodules[88pm800_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 88pm800_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/88pm800-regulator.ko.zst == /* ]]
+ found=1
+ module=88pm800-regulator.ko.zst
+ module=88pm800-regulator
+ quiet 'adding module: %s (%s)' 88pm800-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/88pm800-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pwm_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pwm_regulator == *\? ]]
+ target=pwm_regulator
+ target=pwm_regulator
+ ((  _addedmodules[pwm_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pwm_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pwm-regulator.ko.zst == /* ]]
+ found=1
+ module=pwm-regulator.ko.zst
+ module=pwm-regulator
+ quiet 'adding module: %s (%s)' pwm-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pwm-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps51632_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps51632_regulator == *\? ]]
+ target=tps51632_regulator
+ target=tps51632_regulator
+ ((  _addedmodules[tps51632_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps51632_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps51632-regulator.ko.zst == /* ]]
+ found=1
+ module=tps51632-regulator.ko.zst
+ module=tps51632-regulator
+ quiet 'adding module: %s (%s)' tps51632-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps51632-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mc13783_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13783_regulator == *\? ]]
+ target=mc13783_regulator
+ target=mc13783_regulator
+ ((  _addedmodules[mc13783_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mc13783_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mc13783-regulator.ko.zst == /* ]]
+ found=1
+ module=mc13783-regulator.ko.zst
+ module=mc13783-regulator
+ quiet 'adding module: %s (%s)' mc13783-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mc13783-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mc13xxx-core mc13xxx-regulator-core
+ local r=0
+ for _ in "${@:2}"
+ add_module mc13xxx-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13xxx-core == *\? ]]
+ target=mc13xxx-core
+ target=mc13xxx_core
+ ((  _addedmodules[mc13xxx_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mc13xxx_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mfd/mc13xxx-core.ko.zst == /* ]]
+ found=1
+ module=mc13xxx-core.ko.zst
+ module=mc13xxx-core
+ quiet 'adding module: %s (%s)' mc13xxx-core /lib/modules/6.6.4-arch1-1/kernel/drivers/mfd/mc13xxx-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mc13xxx-regulator-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13xxx-regulator-core == *\? ]]
+ target=mc13xxx-regulator-core
+ target=mc13xxx_regulator_core
+ ((  _addedmodules[mc13xxx_regulator_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mc13xxx_regulator_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mc13xxx-regulator-core.ko.zst == /* ]]
+ found=1
+ module=mc13xxx-regulator-core.ko.zst
+ module=mc13xxx-regulator-core
+ quiet 'adding module: %s (%s)' mc13xxx-regulator-core /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mc13xxx-regulator-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mc13xxx-core
+ local r=0
+ for _ in "${@:2}"
+ add_module mc13xxx-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13xxx-core == *\? ]]
+ target=mc13xxx-core
+ target=mc13xxx_core
+ ((  _addedmodules[mc13xxx_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max1586
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max1586 == *\? ]]
+ target=max1586
+ target=max1586
+ ((  _addedmodules[max1586] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max1586
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max1586.ko.zst == /* ]]
+ found=1
+ module=max1586.ko.zst
+ module=max1586
+ quiet 'adding module: %s (%s)' max1586 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max1586.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8997_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8997_regulator == *\? ]]
+ target=max8997_regulator
+ target=max8997_regulator
+ ((  _addedmodules[max8997_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8997_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8997-regulator.ko.zst == /* ]]
+ found=1
+ module=max8997-regulator.ko.zst
+ module=max8997-regulator
+ quiet 'adding module: %s (%s)' max8997-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8997-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps6507x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps6507x_regulator == *\? ]]
+ target=tps6507x_regulator
+ target=tps6507x_regulator
+ ((  _addedmodules[tps6507x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps6507x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6507x-regulator.ko.zst == /* ]]
+ found=1
+ module=tps6507x-regulator.ko.zst
+ module=tps6507x-regulator
+ quiet 'adding module: %s (%s)' tps6507x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6507x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mc13xxx_regulator_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13xxx_regulator_core == *\? ]]
+ target=mc13xxx_regulator_core
+ target=mc13xxx_regulator_core
+ ((  _addedmodules[mc13xxx_regulator_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps6586x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps6586x_regulator == *\? ]]
+ target=tps6586x_regulator
+ target=tps6586x_regulator
+ ((  _addedmodules[tps6586x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps6586x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6586x-regulator.ko.zst == /* ]]
+ found=1
+ module=tps6586x-regulator.ko.zst
+ module=tps6586x-regulator
+ quiet 'adding module: %s (%s)' tps6586x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6586x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 88pg86x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 88pg86x == *\? ]]
+ target=88pg86x
+ target=88pg86x
+ ((  _addedmodules[88pg86x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 88pg86x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/88pg86x.ko.zst == /* ]]
+ found=1
+ module=88pg86x.ko.zst
+ module=88pg86x
+ quiet 'adding module: %s (%s)' 88pg86x /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/88pg86x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module as3711_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ as3711_regulator == *\? ]]
+ target=as3711_regulator
+ target=as3711_regulator
+ ((  _addedmodules[as3711_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 as3711_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/as3711-regulator.ko.zst == /* ]]
+ found=1
+ module=as3711-regulator.ko.zst
+ module=as3711-regulator
+ quiet 'adding module: %s (%s)' as3711-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/as3711-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sy7636a_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sy7636a_regulator == *\? ]]
+ target=sy7636a_regulator
+ target=sy7636a_regulator
+ ((  _addedmodules[sy7636a_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sy7636a_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/sy7636a-regulator.ko.zst == /* ]]
+ found=1
+ module=sy7636a-regulator.ko.zst
+ module=sy7636a-regulator
+ quiet 'adding module: %s (%s)' sy7636a-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/sy7636a-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ltc3676
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ltc3676 == *\? ]]
+ target=ltc3676
+ target=ltc3676
+ ((  _addedmodules[ltc3676] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ltc3676
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/ltc3676.ko.zst == /* ]]
+ found=1
+ module=ltc3676.ko.zst
+ module=ltc3676
+ quiet 'adding module: %s (%s)' ltc3676 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/ltc3676.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max20411_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max20411_regulator == *\? ]]
+ target=max20411_regulator
+ target=max20411_regulator
+ ((  _addedmodules[max20411_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max20411_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max20411-regulator.ko.zst == /* ]]
+ found=1
+ module=max20411-regulator.ko.zst
+ module=max20411-regulator
+ quiet 'adding module: %s (%s)' max20411-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max20411-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8649
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8649 == *\? ]]
+ target=max8649
+ target=max8649
+ ((  _addedmodules[max8649] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8649
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8649.ko.zst == /* ]]
+ found=1
+ module=max8649.ko.zst
+ module=max8649
+ quiet 'adding module: %s (%s)' max8649 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8649.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wm831x_isink
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wm831x_isink == *\? ]]
+ target=wm831x_isink
+ target=wm831x_isink
+ ((  _addedmodules[wm831x_isink] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wm831x_isink
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm831x-isink.ko.zst == /* ]]
+ found=1
+ module=wm831x-isink.ko.zst
+ module=wm831x-isink
+ quiet 'adding module: %s (%s)' wm831x-isink /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm831x-isink.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6331_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6331_regulator == *\? ]]
+ target=mt6331_regulator
+ target=mt6331_regulator
+ ((  _addedmodules[mt6331_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6331_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6331-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6331-regulator.ko.zst
+ module=mt6331-regulator
+ quiet 'adding module: %s (%s)' mt6331-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6331-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aw37503_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aw37503_regulator == *\? ]]
+ target=aw37503_regulator
+ target=aw37503_regulator
+ ((  _addedmodules[aw37503_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aw37503_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/aw37503-regulator.ko.zst == /* ]]
+ found=1
+ module=aw37503-regulator.ko.zst
+ module=aw37503-regulator
+ quiet 'adding module: %s (%s)' aw37503-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/aw37503-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pv88080_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pv88080_regulator == *\? ]]
+ target=pv88080_regulator
+ target=pv88080_regulator
+ ((  _addedmodules[pv88080_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pv88080_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pv88080-regulator.ko.zst == /* ]]
+ found=1
+ module=pv88080-regulator.ko.zst
+ module=pv88080-regulator
+ quiet 'adding module: %s (%s)' pv88080-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pv88080-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6311_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6311_regulator == *\? ]]
+ target=mt6311_regulator
+ target=mt6311_regulator
+ ((  _addedmodules[mt6311_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6311_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6311-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6311-regulator.ko.zst
+ module=mt6311-regulator
+ quiet 'adding module: %s (%s)' mt6311-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6311-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module da9210_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ da9210_regulator == *\? ]]
+ target=da9210_regulator
+ target=da9210_regulator
+ ((  _addedmodules[da9210_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 da9210_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9210-regulator.ko.zst == /* ]]
+ found=1
+ module=da9210-regulator.ko.zst
+ module=da9210-regulator
+ quiet 'adding module: %s (%s)' da9210-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9210-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 88pm8607
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 88pm8607 == *\? ]]
+ target=88pm8607
+ target=88pm8607
+ ((  _addedmodules[88pm8607] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 88pm8607
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/88pm8607.ko.zst == /* ]]
+ found=1
+ module=88pm8607.ko.zst
+ module=88pm8607
+ quiet 'adding module: %s (%s)' 88pm8607 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/88pm8607.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt5120_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt5120_regulator == *\? ]]
+ target=rt5120_regulator
+ target=rt5120_regulator
+ ((  _addedmodules[rt5120_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt5120_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5120-regulator.ko.zst == /* ]]
+ found=1
+ module=rt5120-regulator.ko.zst
+ module=rt5120-regulator
+ quiet 'adding module: %s (%s)' rt5120-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5120-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps65090_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps65090_regulator == *\? ]]
+ target=tps65090_regulator
+ target=tps65090_regulator
+ ((  _addedmodules[tps65090_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps65090_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65090-regulator.ko.zst == /* ]]
+ found=1
+ module=tps65090-regulator.ko.zst
+ module=tps65090-regulator
+ quiet 'adding module: %s (%s)' tps65090-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65090-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps65132_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps65132_regulator == *\? ]]
+ target=tps65132_regulator
+ target=tps65132_regulator
+ ((  _addedmodules[tps65132_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps65132_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65132-regulator.ko.zst == /* ]]
+ found=1
+ module=tps65132-regulator.ko.zst
+ module=tps65132-regulator
+ quiet 'adding module: %s (%s)' tps65132-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65132-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max20086_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max20086_regulator == *\? ]]
+ target=max20086_regulator
+ target=max20086_regulator
+ ((  _addedmodules[max20086_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max20086_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max20086-regulator.ko.zst == /* ]]
+ found=1
+ module=max20086-regulator.ko.zst
+ module=max20086-regulator
+ quiet 'adding module: %s (%s)' max20086-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max20086-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt6245_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt6245_regulator == *\? ]]
+ target=rt6245_regulator
+ target=rt6245_regulator
+ ((  _addedmodules[rt6245_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt6245_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt6245-regulator.ko.zst == /* ]]
+ found=1
+ module=rt6245-regulator.ko.zst
+ module=rt6245-regulator
+ quiet 'adding module: %s (%s)' rt6245-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt6245-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pca9450_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pca9450_regulator == *\? ]]
+ target=pca9450_regulator
+ target=pca9450_regulator
+ ((  _addedmodules[pca9450_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pca9450_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pca9450-regulator.ko.zst == /* ]]
+ found=1
+ module=pca9450-regulator.ko.zst
+ module=pca9450-regulator
+ quiet 'adding module: %s (%s)' pca9450-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pca9450-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps65023_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps65023_regulator == *\? ]]
+ target=tps65023_regulator
+ target=tps65023_regulator
+ ((  _addedmodules[tps65023_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps65023_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65023-regulator.ko.zst == /* ]]
+ found=1
+ module=tps65023-regulator.ko.zst
+ module=tps65023-regulator
+ quiet 'adding module: %s (%s)' tps65023-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65023-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8925_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8925_regulator == *\? ]]
+ target=max8925_regulator
+ target=max8925_regulator
+ ((  _addedmodules[max8925_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8925_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8925-regulator.ko.zst == /* ]]
+ found=1
+ module=max8925-regulator.ko.zst
+ module=max8925-regulator
+ quiet 'adding module: %s (%s)' max8925-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8925-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max14577_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max14577_regulator == *\? ]]
+ target=max14577_regulator
+ target=max14577_regulator
+ ((  _addedmodules[max14577_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max14577_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max14577-regulator.ko.zst == /* ]]
+ found=1
+ module=max14577-regulator.ko.zst
+ module=max14577-regulator
+ quiet 'adding module: %s (%s)' max14577-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max14577-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module max14577
+ local r=0
+ for _ in "${@:2}"
+ add_module max14577
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max14577 == *\? ]]
+ target=max14577
+ target=max14577
+ ((  _addedmodules[max14577] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max14577
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/mfd/max14577.ko.zst == /* ]]
+ found=1
+ module=max14577.ko.zst
+ module=max14577
+ quiet 'adding module: %s (%s)' max14577 /lib/modules/6.6.4-arch1-1/kernel/drivers/mfd/max14577.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lp3972
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lp3972 == *\? ]]
+ target=lp3972
+ target=lp3972
+ ((  _addedmodules[lp3972] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lp3972
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp3972.ko.zst == /* ]]
+ found=1
+ module=lp3972.ko.zst
+ module=lp3972
+ quiet 'adding module: %s (%s)' lp3972 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp3972.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wm831x_dcdc
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wm831x_dcdc == *\? ]]
+ target=wm831x_dcdc
+ target=wm831x_dcdc
+ ((  _addedmodules[wm831x_dcdc] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wm831x_dcdc
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm831x-dcdc.ko.zst == /* ]]
+ found=1
+ module=wm831x-dcdc.ko.zst
+ module=wm831x-dcdc
+ quiet 'adding module: %s (%s)' wm831x-dcdc /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm831x-dcdc.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps68470_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps68470_regulator == *\? ]]
+ target=tps68470_regulator
+ target=tps68470_regulator
+ ((  _addedmodules[tps68470_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps68470_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps68470-regulator.ko.zst == /* ]]
+ found=1
+ module=tps68470-regulator.ko.zst
+ module=tps68470-regulator
+ quiet 'adding module: %s (%s)' tps68470-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps68470-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fan53555
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fan53555 == *\? ]]
+ target=fan53555
+ target=fan53555
+ ((  _addedmodules[fan53555] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fan53555
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/fan53555.ko.zst == /* ]]
+ found=1
+ module=fan53555.ko.zst
+ module=fan53555
+ quiet 'adding module: %s (%s)' fan53555 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/fan53555.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt5190a_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt5190a_regulator == *\? ]]
+ target=rt5190a_regulator
+ target=rt5190a_regulator
+ ((  _addedmodules[rt5190a_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt5190a_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5190a-regulator.ko.zst == /* ]]
+ found=1
+ module=rt5190a-regulator.ko.zst
+ module=rt5190a-regulator
+ quiet 'adding module: %s (%s)' rt5190a-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5190a-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pcap_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pcap_regulator == *\? ]]
+ target=pcap_regulator
+ target=pcap_regulator
+ ((  _addedmodules[pcap_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pcap_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pcap-regulator.ko.zst == /* ]]
+ found=1
+ module=pcap-regulator.ko.zst
+ module=pcap-regulator
+ quiet 'adding module: %s (%s)' pcap-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pcap-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtmv20_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtmv20_regulator == *\? ]]
+ target=rtmv20_regulator
+ target=rtmv20_regulator
+ ((  _addedmodules[rtmv20_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtmv20_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtmv20-regulator.ko.zst == /* ]]
+ found=1
+ module=rtmv20-regulator.ko.zst
+ module=rtmv20-regulator
+ quiet 'adding module: %s (%s)' rtmv20-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtmv20-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max77826_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max77826_regulator == *\? ]]
+ target=max77826_regulator
+ target=max77826_regulator
+ ((  _addedmodules[max77826_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max77826_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77826-regulator.ko.zst == /* ]]
+ found=1
+ module=max77826-regulator.ko.zst
+ module=max77826-regulator
+ quiet 'adding module: %s (%s)' max77826-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77826-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt5033_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt5033_regulator == *\? ]]
+ target=rt5033_regulator
+ target=rt5033_regulator
+ ((  _addedmodules[rt5033_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt5033_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5033-regulator.ko.zst == /* ]]
+ found=1
+ module=rt5033-regulator.ko.zst
+ module=rt5033-regulator
+ quiet 'adding module: %s (%s)' rt5033-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5033-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt6190_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt6190_regulator == *\? ]]
+ target=rt6190_regulator
+ target=rt6190_regulator
+ ((  _addedmodules[rt6190_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt6190_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt6190-regulator.ko.zst == /* ]]
+ found=1
+ module=rt6190-regulator.ko.zst
+ module=rt6190-regulator
+ quiet 'adding module: %s (%s)' rt6190-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt6190-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt6160_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt6160_regulator == *\? ]]
+ target=rt6160_regulator
+ target=rt6160_regulator
+ ((  _addedmodules[rt6160_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt6160_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt6160-regulator.ko.zst == /* ]]
+ found=1
+ module=rt6160-regulator.ko.zst
+ module=rt6160-regulator
+ quiet 'adding module: %s (%s)' rt6160-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt6160-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt4803
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt4803 == *\? ]]
+ target=rt4803
+ target=rt4803
+ ((  _addedmodules[rt4803] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt4803
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt4803.ko.zst == /* ]]
+ found=1
+ module=rt4803.ko.zst
+ module=rt4803
+ quiet 'adding module: %s (%s)' rt4803 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt4803.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lp8788_ldo
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lp8788_ldo == *\? ]]
+ target=lp8788_ldo
+ target=lp8788_ldo
+ ((  _addedmodules[lp8788_ldo] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lp8788_ldo
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp8788-ldo.ko.zst == /* ]]
+ found=1
+ module=lp8788-ldo.ko.zst
+ module=lp8788-ldo
+ quiet 'adding module: %s (%s)' lp8788-ldo /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp8788-ldo.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module slg51000_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ slg51000_regulator == *\? ]]
+ target=slg51000_regulator
+ target=slg51000_regulator
+ ((  _addedmodules[slg51000_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 slg51000_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/slg51000-regulator.ko.zst == /* ]]
+ found=1
+ module=slg51000-regulator.ko.zst
+ module=slg51000-regulator
+ quiet 'adding module: %s (%s)' slg51000-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/slg51000-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lp8755
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lp8755 == *\? ]]
+ target=lp8755
+ target=lp8755
+ ((  _addedmodules[lp8755] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lp8755
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp8755.ko.zst == /* ]]
+ found=1
+ module=lp8755.ko.zst
+ module=lp8755
+ quiet 'adding module: %s (%s)' lp8755 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp8755.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6332_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6332_regulator == *\? ]]
+ target=mt6332_regulator
+ target=mt6332_regulator
+ ((  _addedmodules[mt6332_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6332_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6332-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6332-regulator.ko.zst
+ module=mt6332-regulator
+ quiet 'adding module: %s (%s)' mt6332-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6332-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps62360_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps62360_regulator == *\? ]]
+ target=tps62360_regulator
+ target=tps62360_regulator
+ ((  _addedmodules[tps62360_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps62360_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps62360-regulator.ko.zst == /* ]]
+ found=1
+ module=tps62360-regulator.ko.zst
+ module=tps62360-regulator
+ quiet 'adding module: %s (%s)' tps62360-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps62360-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps6524x_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps6524x_regulator == *\? ]]
+ target=tps6524x_regulator
+ target=tps6524x_regulator
+ ((  _addedmodules[tps6524x_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps6524x_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6524x-regulator.ko.zst == /* ]]
+ found=1
+ module=tps6524x-regulator.ko.zst
+ module=tps6524x-regulator
+ quiet 'adding module: %s (%s)' tps6524x-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps6524x-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module arizona_ldo1
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ arizona_ldo1 == *\? ]]
+ target=arizona_ldo1
+ target=arizona_ldo1
+ ((  _addedmodules[arizona_ldo1] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 arizona_ldo1
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/arizona-ldo1.ko.zst == /* ]]
+ found=1
+ module=arizona-ldo1.ko.zst
+ module=arizona-ldo1
+ quiet 'adding module: %s (%s)' arizona-ldo1 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/arizona-ldo1.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module isl6271a_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ isl6271a_regulator == *\? ]]
+ target=isl6271a_regulator
+ target=isl6271a_regulator
+ ((  _addedmodules[isl6271a_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 isl6271a_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/isl6271a-regulator.ko.zst == /* ]]
+ found=1
+ module=isl6271a-regulator.ko.zst
+ module=isl6271a-regulator
+ quiet 'adding module: %s (%s)' isl6271a-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/isl6271a-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wm831x_ldo
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wm831x_ldo == *\? ]]
+ target=wm831x_ldo
+ target=wm831x_ldo
+ ((  _addedmodules[wm831x_ldo] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wm831x_ldo
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm831x-ldo.ko.zst == /* ]]
+ found=1
+ module=wm831x-ldo.ko.zst
+ module=wm831x-ldo
+ quiet 'adding module: %s (%s)' wm831x-ldo /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm831x-ldo.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6360_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6360_regulator == *\? ]]
+ target=mt6360_regulator
+ target=mt6360_regulator
+ ((  _addedmodules[mt6360_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6360_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6360-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6360-regulator.ko.zst
+ module=mt6360-regulator
+ quiet 'adding module: %s (%s)' mt6360-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6360-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module userspace_consumer
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ userspace_consumer == *\? ]]
+ target=userspace_consumer
+ target=userspace_consumer
+ ((  _addedmodules[userspace_consumer] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 userspace_consumer
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/userspace-consumer.ko.zst == /* ]]
+ found=1
+ module=userspace-consumer.ko.zst
+ module=userspace-consumer
+ quiet 'adding module: %s (%s)' userspace-consumer /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/userspace-consumer.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module aat2870_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ aat2870_regulator == *\? ]]
+ target=aat2870_regulator
+ target=aat2870_regulator
+ ((  _addedmodules[aat2870_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 aat2870_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/aat2870-regulator.ko.zst == /* ]]
+ found=1
+ module=aat2870-regulator.ko.zst
+ module=aat2870-regulator
+ quiet 'adding module: %s (%s)' aat2870-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/aat2870-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt5759_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt5759_regulator == *\? ]]
+ target=rt5759_regulator
+ target=rt5759_regulator
+ ((  _addedmodules[rt5759_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt5759_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5759-regulator.ko.zst == /* ]]
+ found=1
+ module=rt5759-regulator.ko.zst
+ module=rt5759-regulator
+ quiet 'adding module: %s (%s)' rt5759-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5759-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtq6752_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtq6752_regulator == *\? ]]
+ target=rtq6752_regulator
+ target=rtq6752_regulator
+ ((  _addedmodules[rtq6752_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtq6752_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtq6752-regulator.ko.zst == /* ]]
+ found=1
+ module=rtq6752-regulator.ko.zst
+ module=rtq6752-regulator
+ quiet 'adding module: %s (%s)' rtq6752-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtq6752-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module da9055_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ da9055_regulator == *\? ]]
+ target=da9055_regulator
+ target=da9055_regulator
+ ((  _addedmodules[da9055_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 da9055_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9055-regulator.ko.zst == /* ]]
+ found=1
+ module=da9055-regulator.ko.zst
+ module=da9055-regulator
+ quiet 'adding module: %s (%s)' da9055-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9055-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6358_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6358_regulator == *\? ]]
+ target=mt6358_regulator
+ target=mt6358_regulator
+ ((  _addedmodules[mt6358_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6358_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6358-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6358-regulator.ko.zst
+ module=mt6358-regulator
+ quiet 'adding module: %s (%s)' mt6358-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6358-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module gpio_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ gpio_regulator == *\? ]]
+ target=gpio_regulator
+ target=gpio_regulator
+ ((  _addedmodules[gpio_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 gpio_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/gpio-regulator.ko.zst == /* ]]
+ found=1
+ module=gpio-regulator.ko.zst
+ module=gpio-regulator
+ quiet 'adding module: %s (%s)' gpio-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/gpio-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module fixed
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fixed == *\? ]]
+ target=fixed
+ target=fixed
+ ((  _addedmodules[fixed] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fixed
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/fixed.ko.zst == /* ]]
+ found=1
+ module=fixed.ko.zst
+ module=fixed
+ quiet 'adding module: %s (%s)' fixed /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/fixed.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtq2134_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtq2134_regulator == *\? ]]
+ target=rtq2134_regulator
+ target=rtq2134_regulator
+ ((  _addedmodules[rtq2134_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtq2134_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtq2134-regulator.ko.zst == /* ]]
+ found=1
+ module=rtq2134-regulator.ko.zst
+ module=rtq2134-regulator
+ quiet 'adding module: %s (%s)' rtq2134-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtq2134-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mp8859
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mp8859 == *\? ]]
+ target=mp8859
+ target=mp8859
+ ((  _addedmodules[mp8859] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mp8859
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mp8859.ko.zst == /* ]]
+ found=1
+ module=mp8859.ko.zst
+ module=mp8859
+ quiet 'adding module: %s (%s)' mp8859 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mp8859.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8893
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8893 == *\? ]]
+ target=max8893
+ target=max8893
+ ((  _addedmodules[max8893] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8893
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8893.ko.zst == /* ]]
+ found=1
+ module=max8893.ko.zst
+ module=max8893
+ quiet 'adding module: %s (%s)' max8893 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8893.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module sky81452_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ sky81452_regulator == *\? ]]
+ target=sky81452_regulator
+ target=sky81452_regulator
+ ((  _addedmodules[sky81452_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 sky81452_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/sky81452-regulator.ko.zst == /* ]]
+ found=1
+ module=sky81452-regulator.ko.zst
+ module=sky81452-regulator
+ quiet 'adding module: %s (%s)' sky81452-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/sky81452-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module isl9305
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ isl9305 == *\? ]]
+ target=isl9305
+ target=isl9305
+ ((  _addedmodules[isl9305] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 isl9305
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/isl9305.ko.zst == /* ]]
+ found=1
+ module=isl9305.ko.zst
+ module=isl9305
+ quiet 'adding module: %s (%s)' isl9305 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/isl9305.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt4831_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt4831_regulator == *\? ]]
+ target=rt4831_regulator
+ target=rt4831_regulator
+ ((  _addedmodules[rt4831_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt4831_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt4831-regulator.ko.zst == /* ]]
+ found=1
+ module=rt4831-regulator.ko.zst
+ module=rt4831-regulator
+ quiet 'adding module: %s (%s)' rt4831-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt4831-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ltc3589
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ltc3589 == *\? ]]
+ target=ltc3589
+ target=ltc3589
+ ((  _addedmodules[ltc3589] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ltc3589
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/ltc3589.ko.zst == /* ]]
+ found=1
+ module=ltc3589.ko.zst
+ module=ltc3589
+ quiet 'adding module: %s (%s)' ltc3589 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/ltc3589.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module da9052_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ da9052_regulator == *\? ]]
+ target=da9052_regulator
+ target=da9052_regulator
+ ((  _addedmodules[da9052_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 da9052_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9052-regulator.ko.zst == /* ]]
+ found=1
+ module=da9052-regulator.ko.zst
+ module=da9052-regulator
+ quiet 'adding module: %s (%s)' da9052-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9052-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max77541_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max77541_regulator == *\? ]]
+ target=max77541_regulator
+ target=max77541_regulator
+ ((  _addedmodules[max77541_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max77541_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77541-regulator.ko.zst == /* ]]
+ found=1
+ module=max77541-regulator.ko.zst
+ module=max77541-regulator
+ quiet 'adding module: %s (%s)' max77541-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max77541-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8660
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8660 == *\? ]]
+ target=max8660
+ target=max8660
+ ((  _addedmodules[max8660] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8660
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8660.ko.zst == /* ]]
+ found=1
+ module=max8660.ko.zst
+ module=max8660
+ quiet 'adding module: %s (%s)' max8660 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8660.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8952
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8952 == *\? ]]
+ target=max8952
+ target=max8952
+ ((  _addedmodules[max8952] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8952
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8952.ko.zst == /* ]]
+ found=1
+ module=max8952.ko.zst
+ module=max8952
+ quiet 'adding module: %s (%s)' max8952 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8952.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lp8788_buck
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lp8788_buck == *\? ]]
+ target=lp8788_buck
+ target=lp8788_buck
+ ((  _addedmodules[lp8788_buck] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lp8788_buck
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp8788-buck.ko.zst == /* ]]
+ found=1
+ module=lp8788-buck.ko.zst
+ module=lp8788-buck
+ quiet 'adding module: %s (%s)' lp8788-buck /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp8788-buck.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bcm590xx_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bcm590xx_regulator == *\? ]]
+ target=bcm590xx_regulator
+ target=bcm590xx_regulator
+ ((  _addedmodules[bcm590xx_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bcm590xx_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/bcm590xx-regulator.ko.zst == /* ]]
+ found=1
+ module=bcm590xx-regulator.ko.zst
+ module=bcm590xx-regulator
+ quiet 'adding module: %s (%s)' bcm590xx-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/bcm590xx-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module da9062_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ da9062_regulator == *\? ]]
+ target=da9062_regulator
+ target=da9062_regulator
+ ((  _addedmodules[da9062_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 da9062_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9062-regulator.ko.zst == /* ]]
+ found=1
+ module=da9062-regulator.ko.zst
+ module=da9062-regulator
+ quiet 'adding module: %s (%s)' da9062-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/da9062-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module lp872x
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ lp872x == *\? ]]
+ target=lp872x
+ target=lp872x
+ ((  _addedmodules[lp872x] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 lp872x
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp872x.ko.zst == /* ]]
+ found=1
+ module=lp872x.ko.zst
+ module=lp872x
+ quiet 'adding module: %s (%s)' lp872x /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/lp872x.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ad5398
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ad5398 == *\? ]]
+ target=ad5398
+ target=ad5398
+ ((  _addedmodules[ad5398] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ad5398
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/ad5398.ko.zst == /* ]]
+ found=1
+ module=ad5398.ko.zst
+ module=ad5398
+ quiet 'adding module: %s (%s)' ad5398 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/ad5398.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pv88060_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pv88060_regulator == *\? ]]
+ target=pv88060_regulator
+ target=pv88060_regulator
+ ((  _addedmodules[pv88060_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pv88060_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pv88060-regulator.ko.zst == /* ]]
+ found=1
+ module=pv88060-regulator.ko.zst
+ module=pv88060-regulator
+ quiet 'adding module: %s (%s)' pv88060-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/pv88060-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module tps65910_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ tps65910_regulator == *\? ]]
+ target=tps65910_regulator
+ target=tps65910_regulator
+ ((  _addedmodules[tps65910_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 tps65910_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65910-regulator.ko.zst == /* ]]
+ found=1
+ module=tps65910-regulator.ko.zst
+ module=tps65910-regulator
+ quiet 'adding module: %s (%s)' tps65910-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/tps65910-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6359_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6359_regulator == *\? ]]
+ target=mt6359_regulator
+ target=mt6359_regulator
+ ((  _addedmodules[mt6359_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6359_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6359-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6359-regulator.ko.zst
+ module=mt6359-regulator
+ quiet 'adding module: %s (%s)' mt6359-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6359-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wm8400_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wm8400_regulator == *\? ]]
+ target=wm8400_regulator
+ target=wm8400_regulator
+ ((  _addedmodules[wm8400_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wm8400_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm8400-regulator.ko.zst == /* ]]
+ found=1
+ module=wm8400-regulator.ko.zst
+ module=wm8400-regulator
+ quiet 'adding module: %s (%s)' wm8400-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm8400-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module arizona_micsupp
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ arizona_micsupp == *\? ]]
+ target=arizona_micsupp
+ target=arizona_micsupp
+ ((  _addedmodules[arizona_micsupp] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 arizona_micsupp
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/arizona-micsupp.ko.zst == /* ]]
+ found=1
+ module=arizona-micsupp.ko.zst
+ module=arizona-micsupp
+ quiet 'adding module: %s (%s)' arizona-micsupp /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/arizona-micsupp.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd-soc-core
+ local r=0
+ for _ in "${@:2}"
+ add_module snd-soc-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-soc-core == *\? ]]
+ target=snd-soc-core
+ target=snd_soc_core
+ ((  _addedmodules[snd_soc_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 snd_soc_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/soc/snd-soc-core.ko.zst == /* ]]
+ found=1
+ module=snd-soc-core.ko.zst
+ module=snd-soc-core
+ quiet 'adding module: %s (%s)' snd-soc-core /lib/modules/6.6.4-arch1-1/kernel/sound/soc/snd-soc-core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd-pcm snd snd-pcm-dmaengine ac97_bus snd-compress
+ local r=0
+ for _ in "${@:2}"
+ add_module snd-pcm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-pcm == *\? ]]
+ target=snd-pcm
+ target=snd_pcm
+ ((  _addedmodules[snd_pcm] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 snd_pcm
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-pcm.ko.zst == /* ]]
+ found=1
+ module=snd-pcm.ko.zst
+ module=snd-pcm
+ quiet 'adding module: %s (%s)' snd-pcm /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-pcm.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd snd-timer
+ local r=0
+ for _ in "${@:2}"
+ add_module snd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd == *\? ]]
+ target=snd
+ target=snd
+ ((  _addedmodules[snd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snd-timer
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-timer == *\? ]]
+ target=snd-timer
+ target=snd_timer
+ ((  _addedmodules[snd_timer] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 snd_timer
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-timer.ko.zst == /* ]]
+ found=1
+ module=snd-timer.ko.zst
+ module=snd-timer
+ quiet 'adding module: %s (%s)' snd-timer /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-timer.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd
+ local r=0
+ for _ in "${@:2}"
+ add_module snd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd == *\? ]]
+ target=snd
+ target=snd
+ ((  _addedmodules[snd] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd == *\? ]]
+ target=snd
+ target=snd
+ ((  _addedmodules[snd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snd-pcm-dmaengine
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-pcm-dmaengine == *\? ]]
+ target=snd-pcm-dmaengine
+ target=snd_pcm_dmaengine
+ ((  _addedmodules[snd_pcm_dmaengine] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 snd_pcm_dmaengine
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-pcm-dmaengine.ko.zst == /* ]]
+ found=1
+ module=snd-pcm-dmaengine.ko.zst
+ module=snd-pcm-dmaengine
+ quiet 'adding module: %s (%s)' snd-pcm-dmaengine /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-pcm-dmaengine.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd-pcm
+ local r=0
+ for _ in "${@:2}"
+ add_module snd-pcm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-pcm == *\? ]]
+ target=snd-pcm
+ target=snd_pcm
+ ((  _addedmodules[snd_pcm] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ac97_bus
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ac97_bus == *\? ]]
+ target=ac97_bus
+ target=ac97_bus
+ ((  _addedmodules[ac97_bus] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ac97_bus
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/ac97_bus.ko.zst == /* ]]
+ found=1
+ module=ac97_bus.ko.zst
+ module=ac97_bus
+ quiet 'adding module: %s (%s)' ac97_bus /lib/modules/6.6.4-arch1-1/kernel/sound/ac97_bus.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snd-compress
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-compress == *\? ]]
+ target=snd-compress
+ target=snd_compress
+ ((  _addedmodules[snd_compress] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 snd_compress
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-compress.ko.zst == /* ]]
+ found=1
+ module=snd-compress.ko.zst
+ module=snd-compress
+ quiet 'adding module: %s (%s)' snd-compress /lib/modules/6.6.4-arch1-1/kernel/sound/core/snd-compress.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd snd-pcm
+ local r=0
+ for _ in "${@:2}"
+ add_module snd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd == *\? ]]
+ target=snd
+ target=snd
+ ((  _addedmodules[snd] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snd-pcm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-pcm == *\? ]]
+ target=snd-pcm
+ target=snd_pcm
+ ((  _addedmodules[snd_pcm] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mc13892_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13892_regulator == *\? ]]
+ target=mc13892_regulator
+ target=mc13892_regulator
+ ((  _addedmodules[mc13892_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mc13892_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mc13892-regulator.ko.zst == /* ]]
+ found=1
+ module=mc13892-regulator.ko.zst
+ module=mc13892-regulator
+ quiet 'adding module: %s (%s)' mc13892-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mc13892-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module mc13xxx-core mc13xxx-regulator-core
+ local r=0
+ for _ in "${@:2}"
+ add_module mc13xxx-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13xxx-core == *\? ]]
+ target=mc13xxx-core
+ target=mc13xxx_core
+ ((  _addedmodules[mc13xxx_core] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mc13xxx-regulator-core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mc13xxx-regulator-core == *\? ]]
+ target=mc13xxx-regulator-core
+ target=mc13xxx_regulator_core
+ ((  _addedmodules[mc13xxx_regulator_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module wm8994_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ wm8994_regulator == *\? ]]
+ target=wm8994_regulator
+ target=wm8994_regulator
+ ((  _addedmodules[wm8994_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 wm8994_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm8994-regulator.ko.zst == /* ]]
+ found=1
+ module=wm8994-regulator.ko.zst
+ module=wm8994-regulator
+ quiet 'adding module: %s (%s)' wm8994-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/wm8994-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rt5739
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rt5739 == *\? ]]
+ target=rt5739
+ target=rt5739
+ ((  _addedmodules[rt5739] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rt5739
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5739.ko.zst == /* ]]
+ found=1
+ module=rt5739.ko.zst
+ module=rt5739
+ quiet 'adding module: %s (%s)' rt5739 /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rt5739.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module max8907_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ max8907_regulator == *\? ]]
+ target=max8907_regulator
+ target=max8907_regulator
+ ((  _addedmodules[max8907_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 max8907_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8907-regulator.ko.zst == /* ]]
+ found=1
+ module=max8907-regulator.ko.zst
+ module=max8907-regulator
+ quiet 'adding module: %s (%s)' max8907-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/max8907-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module bd9571mwv_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bd9571mwv_regulator == *\? ]]
+ target=bd9571mwv_regulator
+ target=bd9571mwv_regulator
+ ((  _addedmodules[bd9571mwv_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bd9571mwv_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/bd9571mwv-regulator.ko.zst == /* ]]
+ found=1
+ module=bd9571mwv-regulator.ko.zst
+ module=bd9571mwv-regulator
+ quiet 'adding module: %s (%s)' bd9571mwv-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/bd9571mwv-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6323_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6323_regulator == *\? ]]
+ target=mt6323_regulator
+ target=mt6323_regulator
+ ((  _addedmodules[mt6323_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6323_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6323-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6323-regulator.ko.zst
+ module=mt6323-regulator
+ quiet 'adding module: %s (%s)' mt6323-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6323-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module mt6397_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ mt6397_regulator == *\? ]]
+ target=mt6397_regulator
+ target=mt6397_regulator
+ ((  _addedmodules[mt6397_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 mt6397_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6397-regulator.ko.zst == /* ]]
+ found=1
+ module=mt6397-regulator.ko.zst
+ module=mt6397-regulator
+ quiet 'adding module: %s (%s)' mt6397-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/mt6397-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rtq2208_regulator
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rtq2208_regulator == *\? ]]
+ target=rtq2208_regulator
+ target=rtq2208_regulator
+ ((  _addedmodules[rtq2208_regulator] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rtq2208_regulator
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtq2208-regulator.ko.zst == /* ]]
+ found=1
+ module=rtq2208-regulator.ko.zst
+ module=rtq2208-regulator
+ quiet 'adding module: %s (%s)' rtq2208-regulator /lib/modules/6.6.4-arch1-1/kernel/drivers/regulator/rtq2208-regulator.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules virtio
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules virtio
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz virtio
++ ((  ++count  ))
++ mod=virtio_snd.ko.zst
++ mod=virtio_snd
++ printf '%s\n' virtio_snd
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pmem.ko.zst
++ mod=virtio_pmem
++ printf '%s\n' virtio_pmem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_virtio.ko.zst
++ mod=nd_virtio
++ printf '%s\n' nd_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio-rng.ko.zst
++ mod=virtio-rng
++ printf '%s\n' virtio_rng
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_console.ko.zst
++ mod=virtio_console
++ printf '%s\n' virtio_console
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=gpio-virtio.ko.zst
++ mod=gpio-virtio
++ printf '%s\n' gpio_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_crypto.ko.zst
++ mod=virtio_crypto
++ printf '%s\n' virtio_crypto
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_blk.ko.zst
++ mod=virtio_blk
++ printf '%s\n' virtio_blk
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=i2c-virtio.ko.zst
++ mod=i2c-virtio
++ printf '%s\n' i2c_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_rpmsg_bus.ko.zst
++ mod=virtio_rpmsg_bus
++ printf '%s\n' virtio_rpmsg_bus
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio-iommu.ko.zst
++ mod=virtio-iommu
++ printf '%s\n' virtio_iommu
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_bt.ko.zst
++ mod=virtio_bt
++ printf '%s\n' virtio_bt
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_net.ko.zst
++ mod=virtio_net
++ printf '%s\n' virtio_net
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_input.ko.zst
++ mod=virtio_input
++ printf '%s\n' virtio_input
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_balloon.ko.zst
++ mod=virtio_balloon
++ printf '%s\n' virtio_balloon
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pci.ko.zst
++ mod=virtio_pci
++ printf '%s\n' virtio_pci
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_mem.ko.zst
++ mod=virtio_mem
++ printf '%s\n' virtio_mem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_dma_buf.ko.zst
++ mod=virtio_dma_buf
++ printf '%s\n' virtio_dma_buf
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_vdpa.ko.zst
++ mod=virtio_vdpa
++ printf '%s\n' virtio_vdpa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pci_modern_dev.ko.zst
++ mod=virtio_pci_modern_dev
++ printf '%s\n' virtio_pci_modern_dev
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pci_legacy_dev.ko.zst
++ mod=virtio_pci_legacy_dev
++ printf '%s\n' virtio_pci_legacy_dev
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_mmio.ko.zst
++ mod=virtio_mmio
++ printf '%s\n' virtio_mmio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio-gpu.ko.zst
++ mod=virtio-gpu
++ printf '%s\n' virtio_gpu
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vp_vdpa.ko.zst
++ mod=vp_vdpa
++ printf '%s\n' vp_vdpa
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_scsi.ko.zst
++ mod=virtio_scsi
++ printf '%s\n' virtio_scsi
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmw_vsock_virtio_transport_common.ko.zst
++ mod=vmw_vsock_virtio_transport_common
++ printf '%s\n' vmw_vsock_virtio_transport_common
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmw_vsock_virtio_transport.ko.zst
++ mod=vmw_vsock_virtio_transport
++ printf '%s\n' vmw_vsock_virtio_transport
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=9pnet_virtio.ko.zst
++ mod=9pnet_virtio
++ printf '%s\n' 9pnet_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtiofs.ko.zst
++ mod=virtiofs
++ printf '%s\n' virtiofs
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module virtio_snd virtio_pmem nd_virtio virtio_rng virtio_console gpio_virtio virtio_crypto virtio_blk i2c_virtio virtio_rpmsg_bus virtio_iommu virtio_bt virtio_net virtio_input virtio_balloon virtio_pci virtio_mem virtio_dma_buf virtio_vdpa virtio_pci_modern_dev virtio_pci_legacy_dev virtio_mmio virtio_gpu vp_vdpa virtio_scsi vmw_vsock_virtio_transport_common vmw_vsock_virtio_transport 9pnet_virtio virtiofs
+ local r=0
+ for _ in "${@:2}"
+ add_module virtio_snd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_snd == *\? ]]
+ target=virtio_snd
+ target=virtio_snd
+ ((  _addedmodules[virtio_snd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_snd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/sound/virtio/virtio_snd.ko.zst == /* ]]
+ found=1
+ module=virtio_snd.ko.zst
+ module=virtio_snd
+ quiet 'adding module: %s (%s)' virtio_snd /lib/modules/6.6.4-arch1-1/kernel/sound/virtio/virtio_snd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module snd-pcm snd
+ local r=0
+ for _ in "${@:2}"
+ add_module snd-pcm
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd-pcm == *\? ]]
+ target=snd-pcm
+ target=snd_pcm
+ ((  _addedmodules[snd_pcm] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module snd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ snd == *\? ]]
+ target=snd
+ target=snd
+ ((  _addedmodules[snd] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_pmem
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pmem == *\? ]]
+ target=virtio_pmem
+ target=virtio_pmem
+ ((  _addedmodules[virtio_pmem] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_pmem
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/virtio_pmem.ko.zst == /* ]]
+ found=1
+ module=virtio_pmem.ko.zst
+ module=virtio_pmem
+ quiet 'adding module: %s (%s)' virtio_pmem /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/virtio_pmem.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nd_virtio
+ local r=0
+ for _ in "${@:2}"
+ add_module nd_virtio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_virtio == *\? ]]
+ target=nd_virtio
+ target=nd_virtio
+ ((  _addedmodules[nd_virtio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nd_virtio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_virtio.ko.zst == /* ]]
+ found=1
+ module=nd_virtio.ko.zst
+ module=nd_virtio
+ quiet 'adding module: %s (%s)' nd_virtio /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_virtio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nd_virtio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_virtio == *\? ]]
+ target=nd_virtio
+ target=nd_virtio
+ ((  _addedmodules[nd_virtio] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_rng
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_rng == *\? ]]
+ target=virtio_rng
+ target=virtio_rng
+ ((  _addedmodules[virtio_rng] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_rng
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/char/hw_random/virtio-rng.ko.zst == /* ]]
+ found=1
+ module=virtio-rng.ko.zst
+ module=virtio-rng
+ quiet 'adding module: %s (%s)' virtio-rng /lib/modules/6.6.4-arch1-1/kernel/drivers/char/hw_random/virtio-rng.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_console
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_console == *\? ]]
+ target=virtio_console
+ target=virtio_console
+ ((  _addedmodules[virtio_console] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_console
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/char/virtio_console.ko.zst == /* ]]
+ found=1
+ module=virtio_console.ko.zst
+ module=virtio_console
+ quiet 'adding module: %s (%s)' virtio_console /lib/modules/6.6.4-arch1-1/kernel/drivers/char/virtio_console.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module gpio_virtio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ gpio_virtio == *\? ]]
+ target=gpio_virtio
+ target=gpio_virtio
+ ((  _addedmodules[gpio_virtio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 gpio_virtio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/gpio/gpio-virtio.ko.zst == /* ]]
+ found=1
+ module=gpio-virtio.ko.zst
+ module=gpio-virtio
+ quiet 'adding module: %s (%s)' gpio-virtio /lib/modules/6.6.4-arch1-1/kernel/drivers/gpio/gpio-virtio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_crypto
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_crypto == *\? ]]
+ target=virtio_crypto
+ target=virtio_crypto
+ ((  _addedmodules[virtio_crypto] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_crypto
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/crypto/virtio/virtio_crypto.ko.zst == /* ]]
+ found=1
+ module=virtio_crypto.ko.zst
+ module=virtio_crypto
+ quiet 'adding module: %s (%s)' virtio_crypto /lib/modules/6.6.4-arch1-1/kernel/drivers/crypto/virtio/virtio_crypto.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module crypto_engine
+ local r=0
+ for _ in "${@:2}"
+ add_module crypto_engine
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crypto_engine == *\? ]]
+ target=crypto_engine
+ target=crypto_engine
+ ((  _addedmodules[crypto_engine] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 crypto_engine
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/crypto/crypto_engine.ko.zst == /* ]]
+ found=1
+ module=crypto_engine.ko.zst
+ module=crypto_engine
+ quiet 'adding module: %s (%s)' crypto_engine /lib/modules/6.6.4-arch1-1/kernel/crypto/crypto_engine.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_blk
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_blk == *\? ]]
+ target=virtio_blk
+ target=virtio_blk
+ ((  _addedmodules[virtio_blk] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module i2c_virtio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ i2c_virtio == *\? ]]
+ target=i2c_virtio
+ target=i2c_virtio
+ ((  _addedmodules[i2c_virtio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 i2c_virtio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/i2c/busses/i2c-virtio.ko.zst == /* ]]
+ found=1
+ module=i2c-virtio.ko.zst
+ module=i2c-virtio
+ quiet 'adding module: %s (%s)' i2c-virtio /lib/modules/6.6.4-arch1-1/kernel/drivers/i2c/busses/i2c-virtio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_rpmsg_bus
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_rpmsg_bus == *\? ]]
+ target=virtio_rpmsg_bus
+ target=virtio_rpmsg_bus
+ ((  _addedmodules[virtio_rpmsg_bus] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_rpmsg_bus
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/rpmsg/virtio_rpmsg_bus.ko.zst == /* ]]
+ found=1
+ module=virtio_rpmsg_bus.ko.zst
+ module=virtio_rpmsg_bus
+ quiet 'adding module: %s (%s)' virtio_rpmsg_bus /lib/modules/6.6.4-arch1-1/kernel/drivers/rpmsg/virtio_rpmsg_bus.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rpmsg_core rpmsg_ns
+ local r=0
+ for _ in "${@:2}"
+ add_module rpmsg_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rpmsg_core == *\? ]]
+ target=rpmsg_core
+ target=rpmsg_core
+ ((  _addedmodules[rpmsg_core] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rpmsg_core
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/rpmsg/rpmsg_core.ko.zst == /* ]]
+ found=1
+ module=rpmsg_core.ko.zst
+ module=rpmsg_core
+ quiet 'adding module: %s (%s)' rpmsg_core /lib/modules/6.6.4-arch1-1/kernel/drivers/rpmsg/rpmsg_core.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module rpmsg_ns
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rpmsg_ns == *\? ]]
+ target=rpmsg_ns
+ target=rpmsg_ns
+ ((  _addedmodules[rpmsg_ns] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 rpmsg_ns
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/rpmsg/rpmsg_ns.ko.zst == /* ]]
+ found=1
+ module=rpmsg_ns.ko.zst
+ module=rpmsg_ns
+ quiet 'adding module: %s (%s)' rpmsg_ns /lib/modules/6.6.4-arch1-1/kernel/drivers/rpmsg/rpmsg_ns.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rpmsg_core
+ local r=0
+ for _ in "${@:2}"
+ add_module rpmsg_core
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rpmsg_core == *\? ]]
+ target=rpmsg_core
+ target=rpmsg_core
+ ((  _addedmodules[rpmsg_core] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_iommu
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_iommu == *\? ]]
+ target=virtio_iommu
+ target=virtio_iommu
+ ((  _addedmodules[virtio_iommu] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_iommu
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/iommu/virtio-iommu.ko.zst == /* ]]
+ found=1
+ module=virtio-iommu.ko.zst
+ module=virtio-iommu
+ quiet 'adding module: %s (%s)' virtio-iommu /lib/modules/6.6.4-arch1-1/kernel/drivers/iommu/virtio-iommu.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_bt
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_bt == *\? ]]
+ target=virtio_bt
+ target=virtio_bt
+ ((  _addedmodules[virtio_bt] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_bt
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/bluetooth/virtio_bt.ko.zst == /* ]]
+ found=1
+ module=virtio_bt.ko.zst
+ module=virtio_bt
+ quiet 'adding module: %s (%s)' virtio_bt /lib/modules/6.6.4-arch1-1/kernel/drivers/bluetooth/virtio_bt.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module bluetooth
+ local r=0
+ for _ in "${@:2}"
+ add_module bluetooth
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ bluetooth == *\? ]]
+ target=bluetooth
+ target=bluetooth
+ ((  _addedmodules[bluetooth] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 bluetooth
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/bluetooth/bluetooth.ko.zst == /* ]]
+ found=1
+ module=bluetooth.ko.zst
+ module=bluetooth
+ quiet 'adding module: %s (%s)' bluetooth /lib/modules/6.6.4-arch1-1/kernel/net/bluetooth/bluetooth.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module rfkill crc16 ecdh_generic
+ local r=0
+ for _ in "${@:2}"
+ add_module rfkill
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ rfkill == *\? ]]
+ target=rfkill
+ target=rfkill
+ ((  _addedmodules[rfkill] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module crc16
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ crc16 == *\? ]]
+ target=crc16
+ target=crc16
+ ((  _addedmodules[crc16] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module ecdh_generic
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ ecdh_generic == *\? ]]
+ target=ecdh_generic
+ target=ecdh_generic
+ ((  _addedmodules[ecdh_generic] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 ecdh_generic
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/crypto/ecdh_generic.ko.zst == /* ]]
+ found=1
+ module=ecdh_generic.ko.zst
+ module=ecdh_generic
+ quiet 'adding module: %s (%s)' ecdh_generic /lib/modules/6.6.4-arch1-1/kernel/crypto/ecdh_generic.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_net
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_net == *\? ]]
+ target=virtio_net
+ target=virtio_net
+ ((  _addedmodules[virtio_net] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_net
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/virtio_net.ko.zst == /* ]]
+ found=1
+ module=virtio_net.ko.zst
+ module=virtio_net
+ quiet 'adding module: %s (%s)' virtio_net /lib/modules/6.6.4-arch1-1/kernel/drivers/net/virtio_net.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module net_failover
+ local r=0
+ for _ in "${@:2}"
+ add_module net_failover
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ net_failover == *\? ]]
+ target=net_failover
+ target=net_failover
+ ((  _addedmodules[net_failover] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 net_failover
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/net/net_failover.ko.zst == /* ]]
+ found=1
+ module=net_failover.ko.zst
+ module=net_failover
+ quiet 'adding module: %s (%s)' net_failover /lib/modules/6.6.4-arch1-1/kernel/drivers/net/net_failover.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module failover
+ local r=0
+ for _ in "${@:2}"
+ add_module failover
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ failover == *\? ]]
+ target=failover
+ target=failover
+ ((  _addedmodules[failover] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 failover
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/core/failover.ko.zst == /* ]]
+ found=1
+ module=failover.ko.zst
+ module=failover
+ quiet 'adding module: %s (%s)' failover /lib/modules/6.6.4-arch1-1/kernel/net/core/failover.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_input
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_input == *\? ]]
+ target=virtio_input
+ target=virtio_input
+ ((  _addedmodules[virtio_input] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_input
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_input.ko.zst == /* ]]
+ found=1
+ module=virtio_input.ko.zst
+ module=virtio_input
+ quiet 'adding module: %s (%s)' virtio_input /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_input.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_balloon
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_balloon == *\? ]]
+ target=virtio_balloon
+ target=virtio_balloon
+ ((  _addedmodules[virtio_balloon] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_balloon
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_balloon.ko.zst == /* ]]
+ found=1
+ module=virtio_balloon.ko.zst
+ module=virtio_balloon
+ quiet 'adding module: %s (%s)' virtio_balloon /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_balloon.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_pci
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pci == *\? ]]
+ target=virtio_pci
+ target=virtio_pci
+ ((  _addedmodules[virtio_pci] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_pci
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_pci.ko.zst == /* ]]
+ found=1
+ module=virtio_pci.ko.zst
+ module=virtio_pci
+ quiet 'adding module: %s (%s)' virtio_pci /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_pci.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module virtio_pci_legacy_dev virtio_pci_modern_dev
+ local r=0
+ for _ in "${@:2}"
+ add_module virtio_pci_legacy_dev
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pci_legacy_dev == *\? ]]
+ target=virtio_pci_legacy_dev
+ target=virtio_pci_legacy_dev
+ ((  _addedmodules[virtio_pci_legacy_dev] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_pci_legacy_dev
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_pci_legacy_dev.ko.zst == /* ]]
+ found=1
+ module=virtio_pci_legacy_dev.ko.zst
+ module=virtio_pci_legacy_dev
+ quiet 'adding module: %s (%s)' virtio_pci_legacy_dev /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_pci_legacy_dev.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_pci_modern_dev
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pci_modern_dev == *\? ]]
+ target=virtio_pci_modern_dev
+ target=virtio_pci_modern_dev
+ ((  _addedmodules[virtio_pci_modern_dev] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_pci_modern_dev
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_pci_modern_dev.ko.zst == /* ]]
+ found=1
+ module=virtio_pci_modern_dev.ko.zst
+ module=virtio_pci_modern_dev
+ quiet 'adding module: %s (%s)' virtio_pci_modern_dev /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_pci_modern_dev.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_mem
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_mem == *\? ]]
+ target=virtio_mem
+ target=virtio_mem
+ ((  _addedmodules[virtio_mem] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_mem
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_mem.ko.zst == /* ]]
+ found=1
+ module=virtio_mem.ko.zst
+ module=virtio_mem
+ quiet 'adding module: %s (%s)' virtio_mem /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_mem.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_dma_buf
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_dma_buf == *\? ]]
+ target=virtio_dma_buf
+ target=virtio_dma_buf
+ ((  _addedmodules[virtio_dma_buf] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_vdpa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_vdpa == *\? ]]
+ target=virtio_vdpa
+ target=virtio_vdpa
+ ((  _addedmodules[virtio_vdpa] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_vdpa
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_vdpa.ko.zst == /* ]]
+ found=1
+ module=virtio_vdpa.ko.zst
+ module=virtio_vdpa
+ quiet 'adding module: %s (%s)' virtio_vdpa /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_vdpa.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module vdpa
+ local r=0
+ for _ in "${@:2}"
+ add_module vdpa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vdpa == *\? ]]
+ target=vdpa
+ target=vdpa
+ ((  _addedmodules[vdpa] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vdpa
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/vdpa/vdpa.ko.zst == /* ]]
+ found=1
+ module=vdpa.ko.zst
+ module=vdpa
+ quiet 'adding module: %s (%s)' vdpa /lib/modules/6.6.4-arch1-1/kernel/drivers/vdpa/vdpa.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_pci_modern_dev
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pci_modern_dev == *\? ]]
+ target=virtio_pci_modern_dev
+ target=virtio_pci_modern_dev
+ ((  _addedmodules[virtio_pci_modern_dev] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_pci_legacy_dev
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pci_legacy_dev == *\? ]]
+ target=virtio_pci_legacy_dev
+ target=virtio_pci_legacy_dev
+ ((  _addedmodules[virtio_pci_legacy_dev] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_mmio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_mmio == *\? ]]
+ target=virtio_mmio
+ target=virtio_mmio
+ ((  _addedmodules[virtio_mmio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtio_mmio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_mmio.ko.zst == /* ]]
+ found=1
+ module=virtio_mmio.ko.zst
+ module=virtio_mmio
+ quiet 'adding module: %s (%s)' virtio_mmio /lib/modules/6.6.4-arch1-1/kernel/drivers/virtio/virtio_mmio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_gpu
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_gpu == *\? ]]
+ target=virtio_gpu
+ target=virtio_gpu
+ ((  _addedmodules[virtio_gpu] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vp_vdpa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vp_vdpa == *\? ]]
+ target=vp_vdpa
+ target=vp_vdpa
+ ((  _addedmodules[vp_vdpa] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vp_vdpa
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/vdpa/virtio_pci/vp_vdpa.ko.zst == /* ]]
+ found=1
+ module=vp_vdpa.ko.zst
+ module=vp_vdpa
+ quiet 'adding module: %s (%s)' vp_vdpa /lib/modules/6.6.4-arch1-1/kernel/drivers/vdpa/virtio_pci/vp_vdpa.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module virtio_pci_modern_dev vdpa
+ local r=0
+ for _ in "${@:2}"
+ add_module virtio_pci_modern_dev
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pci_modern_dev == *\? ]]
+ target=virtio_pci_modern_dev
+ target=virtio_pci_modern_dev
+ ((  _addedmodules[virtio_pci_modern_dev] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vdpa
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vdpa == *\? ]]
+ target=vdpa
+ target=vdpa
+ ((  _addedmodules[vdpa] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_scsi
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_scsi == *\? ]]
+ target=virtio_scsi
+ target=virtio_scsi
+ ((  _addedmodules[virtio_scsi] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vmw_vsock_virtio_transport_common
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vmw_vsock_virtio_transport_common == *\? ]]
+ target=vmw_vsock_virtio_transport_common
+ target=vmw_vsock_virtio_transport_common
+ ((  _addedmodules[vmw_vsock_virtio_transport_common] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vmw_vsock_virtio_transport_common
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/vmw_vsock/vmw_vsock_virtio_transport_common.ko.zst == /* ]]
+ found=1
+ module=vmw_vsock_virtio_transport_common.ko.zst
+ module=vmw_vsock_virtio_transport_common
+ quiet 'adding module: %s (%s)' vmw_vsock_virtio_transport_common /lib/modules/6.6.4-arch1-1/kernel/net/vmw_vsock/vmw_vsock_virtio_transport_common.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module vsock
+ local r=0
+ for _ in "${@:2}"
+ add_module vsock
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vsock == *\? ]]
+ target=vsock
+ target=vsock
+ ((  _addedmodules[vsock] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vsock
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/vmw_vsock/vsock.ko.zst == /* ]]
+ found=1
+ module=vsock.ko.zst
+ module=vsock
+ quiet 'adding module: %s (%s)' vsock /lib/modules/6.6.4-arch1-1/kernel/net/vmw_vsock/vsock.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vmw_vsock_virtio_transport
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vmw_vsock_virtio_transport == *\? ]]
+ target=vmw_vsock_virtio_transport
+ target=vmw_vsock_virtio_transport
+ ((  _addedmodules[vmw_vsock_virtio_transport] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vmw_vsock_virtio_transport
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/vmw_vsock/vmw_vsock_virtio_transport.ko.zst == /* ]]
+ found=1
+ module=vmw_vsock_virtio_transport.ko.zst
+ module=vmw_vsock_virtio_transport
+ quiet 'adding module: %s (%s)' vmw_vsock_virtio_transport /lib/modules/6.6.4-arch1-1/kernel/net/vmw_vsock/vmw_vsock_virtio_transport.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module vmw_vsock_virtio_transport_common vsock
+ local r=0
+ for _ in "${@:2}"
+ add_module vmw_vsock_virtio_transport_common
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vmw_vsock_virtio_transport_common == *\? ]]
+ target=vmw_vsock_virtio_transport_common
+ target=vmw_vsock_virtio_transport_common
+ ((  _addedmodules[vmw_vsock_virtio_transport_common] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vsock
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vsock == *\? ]]
+ target=vsock
+ target=vsock
+ ((  _addedmodules[vsock] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module 9pnet_virtio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 9pnet_virtio == *\? ]]
+ target=9pnet_virtio
+ target=9pnet_virtio
+ ((  _addedmodules[9pnet_virtio] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 9pnet_virtio
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/9p/9pnet_virtio.ko.zst == /* ]]
+ found=1
+ module=9pnet_virtio.ko.zst
+ module=9pnet_virtio
+ quiet 'adding module: %s (%s)' 9pnet_virtio /lib/modules/6.6.4-arch1-1/kernel/net/9p/9pnet_virtio.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module 9pnet
+ local r=0
+ for _ in "${@:2}"
+ add_module 9pnet
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ 9pnet == *\? ]]
+ target=9pnet
+ target=9pnet
+ ((  _addedmodules[9pnet] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 9pnet
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/net/9p/9pnet.ko.zst == /* ]]
+ found=1
+ module=9pnet.ko.zst
+ module=9pnet
+ quiet 'adding module: %s (%s)' 9pnet /lib/modules/6.6.4-arch1-1/kernel/net/9p/9pnet.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtiofs
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtiofs == *\? ]]
+ target=virtiofs
+ target=virtiofs
+ ((  _addedmodules[virtiofs] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 virtiofs
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/fs/fuse/virtiofs.ko.zst == /* ]]
+ found=1
+ module=virtiofs.ko.zst
+ module=virtiofs
+ quiet 'adding module: %s (%s)' virtiofs /lib/modules/6.6.4-arch1-1/kernel/fs/fuse/virtiofs.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module fuse
+ local r=0
+ for _ in "${@:2}"
+ add_module fuse
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ fuse == *\? ]]
+ target=fuse
+ target=fuse
+ ((  _addedmodules[fuse] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 fuse
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/fs/fuse/fuse.ko.zst == /* ]]
+ found=1
+ module=fuse.ko.zst
+ module=fuse
+ quiet 'adding module: %s (%s)' fuse /lib/modules/6.6.4-arch1-1/kernel/fs/fuse/fuse.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/nvdimm/
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules /drivers/nvdimm/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/nvdimm/
++ ((  ++count  ))
++ mod=nd_pmem.ko.zst
++ mod=nd_pmem
++ printf '%s\n' nd_pmem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=virtio_pmem.ko.zst
++ mod=virtio_pmem
++ printf '%s\n' virtio_pmem
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_virtio.ko.zst
++ mod=nd_virtio
++ printf '%s\n' nd_virtio
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_btt.ko.zst
++ mod=nd_btt
++ printf '%s\n' nd_btt
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=nd_e820.ko.zst
++ mod=nd_e820
++ printf '%s\n' nd_e820
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module nd_pmem virtio_pmem nd_virtio nd_btt nd_e820
+ local r=0
+ for _ in "${@:2}"
+ add_module nd_pmem
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_pmem == *\? ]]
+ target=nd_pmem
+ target=nd_pmem
+ ((  _addedmodules[nd_pmem] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nd_pmem
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_pmem.ko.zst == /* ]]
+ found=1
+ module=nd_pmem.ko.zst
+ module=nd_pmem
+ quiet 'adding module: %s (%s)' nd_pmem /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_pmem.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module nd_btt
+ local r=0
+ for _ in "${@:2}"
+ add_module nd_btt
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_btt == *\? ]]
+ target=nd_btt
+ target=nd_btt
+ ((  _addedmodules[nd_btt] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nd_btt
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_btt.ko.zst == /* ]]
+ found=1
+ module=nd_btt.ko.zst
+ module=nd_btt
+ quiet 'adding module: %s (%s)' nd_btt /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_btt.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module virtio_pmem
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ virtio_pmem == *\? ]]
+ target=virtio_pmem
+ target=virtio_pmem
+ ((  _addedmodules[virtio_pmem] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nd_virtio
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_virtio == *\? ]]
+ target=nd_virtio
+ target=nd_virtio
+ ((  _addedmodules[nd_virtio] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nd_btt
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_btt == *\? ]]
+ target=nd_btt
+ target=nd_btt
+ ((  _addedmodules[nd_btt] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module nd_e820
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ nd_e820 == *\? ]]
+ target=nd_e820
+ target=nd_e820
+ ((  _addedmodules[nd_e820] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 nd_e820
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_e820.ko.zst == /* ]]
+ found=1
+ module=nd_e820.ko.zst
+ module=nd_e820
+ quiet 'adding module: %s (%s)' nd_e820 /lib/modules/6.6.4-arch1-1/kernel/drivers/nvdimm/nd_e820.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ add_checked_modules /drivers/pci/controller/
+ local mod
+ local -a mods
+ ((  0  ))
+ mapfile -t mods
++ all_modules /drivers/pci/controller/
++ local -i count=0
++ modfilter=()
++ local mod= OPTIND= OPTARG= modfilter
++ getopts :f: flag
++ shift 0
++ read -r -d '' mod
+++ find /lib/modules/6.6.4-arch1-1 -name '*.ko*' -print0
+++ grep -EZz /drivers/pci/controller/
++ ((  ++count  ))
++ mod=pci-hyperv-intf.ko.zst
++ mod=pci-hyperv-intf
++ printf '%s\n' pci_hyperv_intf
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=pci-hyperv.ko.zst
++ mod=pci-hyperv
++ printf '%s\n' pci_hyperv
++ read -r -d '' mod
++ ((  ++count  ))
++ mod=vmd.ko.zst
++ mod=vmd
++ printf '%s\n' vmd
++ read -r -d '' mod
++ ((  count  ))
+++ ((  0  ))
+ map add_module pci_hyperv_intf pci_hyperv vmd
+ local r=0
+ for _ in "${@:2}"
+ add_module pci_hyperv_intf
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pci_hyperv_intf == *\? ]]
+ target=pci_hyperv_intf
+ target=pci_hyperv_intf
+ ((  _addedmodules[pci_hyperv_intf] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pci_hyperv_intf
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/pci/controller/pci-hyperv-intf.ko.zst == /* ]]
+ found=1
+ module=pci-hyperv-intf.ko.zst
+ module=pci-hyperv-intf
+ quiet 'adding module: %s (%s)' pci-hyperv-intf /lib/modules/6.6.4-arch1-1/kernel/drivers/pci/controller/pci-hyperv-intf.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pci_hyperv
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pci_hyperv == *\? ]]
+ target=pci_hyperv
+ target=pci_hyperv
+ ((  _addedmodules[pci_hyperv] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 pci_hyperv
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/pci/controller/pci-hyperv.ko.zst == /* ]]
+ found=1
+ module=pci-hyperv.ko.zst
+ module=pci-hyperv
+ quiet 'adding module: %s (%s)' pci-hyperv /lib/modules/6.6.4-arch1-1/kernel/drivers/pci/controller/pci-hyperv.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module hv_vmbus pci-hyperv-intf
+ local r=0
+ for _ in "${@:2}"
+ add_module hv_vmbus
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ hv_vmbus == *\? ]]
+ target=hv_vmbus
+ target=hv_vmbus
+ ((  _addedmodules[hv_vmbus] == 1  ))
+ return
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module pci-hyperv-intf
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ pci-hyperv-intf == *\? ]]
+ target=pci-hyperv-intf
+ target=pci_hyperv_intf
+ ((  _addedmodules[pci_hyperv_intf] == 1  ))
+ return
++ ((  0  ))
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ for _ in "${@:2}"
+ add_module vmd
+ softdeps=()
+ deps=()
+ firmware=()
+ local target= module= softdeps deps field= value= firmware
+ local ign_errors=0 found=0
+ [[ 6.6.4-arch1-1 == \n\o\n\e ]]
+ [[ vmd == *\? ]]
+ target=vmd
+ target=vmd
+ ((  _addedmodules[vmd] == 1  ))
+ IFS=':= '
+ read -r -d '' field value
++ modinfo -b '' -k 6.6.4-arch1-1 -0 vmd
+ case "$field" in
+ [[ /lib/modules/6.6.4-arch1-1/kernel/drivers/pci/controller/vmd.ko.zst == /* ]]
+ found=1
+ module=vmd.ko.zst
+ module=vmd
+ quiet 'adding module: %s (%s)' vmd /lib/modules/6.6.4-arch1-1/kernel/drivers/pci/controller/vmd.ko.zst
+ ((  _optquiet  ))
++ ((  0  ))
+ _modpaths["$value"]=1
+ _addedmodules["${module//-/_}"]=1
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=,
+ read -r -a deps
+ map add_module
+ local r=0
+ return 0
++ ((  0  ))
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ case "$field" in
+ IFS=':= '
+ read -r -d '' field value
+ ((  !found  ))
+ ((  0  ))
+ case "$target" in
++ ((  0  ))
+ return 0
++ ((  0  ))
+ return 0
++ ((  0  ))
+ set +x
  -> Running build hook: [filesystems]
  -> Running build hook: [fsck]
==> Generating module dependencies
==> Creating zstd-compressed initcpio image: '/boot/initramfs-linux-fallback.img'
==> WARNING: errors were encountered during the build. The image may not be complete.
error: command failed to execute correctly
( 8/11) Refreshing PackageKit...
( 9/11) Signing kernel with Machine Owner Key for Secure Boot...
Signing Unsigned original image
Image was already signed; adding additional signature
Image was already signed; adding additional signature
Image was already signed; adding additional signature
(10/11) Checking which packages need to be rebuilt
(11/11) Signing EFI binaries...
Generating EFI bundles....
